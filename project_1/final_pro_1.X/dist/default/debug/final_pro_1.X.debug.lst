

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Mar 28 02:44:39 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1,inline
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1,inline
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1,inline
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1,inline
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1,inline
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1,inline
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=3
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=3
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=3
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=3
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=3
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1,inline
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1
   102                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   103                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   132                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   133                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   134   000000                     
   135                           ; Generated 23/03/2023 GMT
   136                           ; 
   137                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   138                           ; All rights reserved.
   139                           ; 
   140                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   141                           ; 
   142                           ; Redistribution and use in source and binary forms, with or without modification, are
   143                           ; permitted provided that the following conditions are met:
   144                           ; 
   145                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   146                           ;        conditions and the following disclaimer.
   147                           ; 
   148                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   149                           ;        of conditions and the following disclaimer in the documentation and/or other
   150                           ;        materials provided with the distribution. Publication is not required when
   151                           ;        this file is used in an embedded application.
   152                           ; 
   153                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   154                           ;        software without specific prior written permission.
   155                           ; 
   156                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   157                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   158                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   159                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   160                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   161                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   162                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   163                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   164                           ; 
   165                           ; 
   166                           ; Code-generator required, PIC18F4620 Definitions
   167                           ; 
   168                           ; SFR Addresses
   169   000000                     
   170                           	psect	idataCOMRAM
   171   006104                     __pidataCOMRAM:
   172                           	callstack 0
   173                           
   174                           ;initializer for _flag2
   175   006104  01                 	db	1
   176                           
   177                           ;initializer for _flag1
   178   006105  01                 	db	1
   179                           
   180                           ;initializer for _leds_1
   181   006106  23                 	db	35
   182                           
   183                           ;initializer for _LED_ROOM_1
   184   006107  02                 	db	2
   185                           
   186                           	psect	idataBANK0
   187   005FDC                     __pidataBANK0:
   188                           	callstack 0
   189                           
   190                           ;initializer for _lat_regisrers
   191   005FDC  89                 	db	137
   192   005FDD  0F                 	db	15
   193   005FDE  8A                 	db	138
   194   005FDF  0F                 	db	15
   195   005FE0  8B                 	db	139
   196   005FE1  0F                 	db	15
   197   005FE2  8C                 	db	140
   198   005FE3  0F                 	db	15
   199   005FE4  8D                 	db	141
   200   005FE5  0F                 	db	15
   201                           
   202                           ;initializer for _button_1
   203   005FE6  52                 	db	82
   204   005FE7  00                 	db	0
   205   005FE8  00                 	db	0
   206                           
   207                           ;initializer for _flag4
   208   005FE9  01                 	db	1
   209                           
   210                           ;initializer for _flag3
   211   005FEA  01                 	db	1
   212                           
   213                           ;initializer for _relay_2
   214   005FEB  32                 	db	50
   215                           
   216                           ;initializer for _relay_1
   217   005FEC  02                 	db	2
   218                           
   219                           ;initializer for _led_2
   220   005FED  42                 	db	66
   221                           
   222                           ;initializer for _led_1
   223   005FEE  12                 	db	18
   224                           
   225                           ;initializer for _lcd_4bit
   226   005FEF  33                 	db	51
   227   005FF0  2B                 	db	43
   228   005FF1  03                 	db	3
   229   005FF2  0B                 	db	11
   230   005FF3  13                 	db	19
   231   005FF4  1B                 	db	27
   232                           
   233                           ;initializer for _motor_2
   234   005FF5  0A                 	db	10
   235   005FF6  3B                 	db	59
   236                           
   237                           ;initializer for _motor_1
   238   005FF7  2A                 	db	42
   239   005FF8  12                 	db	18
   240                           
   241                           	psect	idataBANK1
   242   0055BE                     __pidataBANK1:
   243                           	callstack 0
   244                           
   245                           ;initializer for _port_regisrers
   246   0055BE  80                 	db	128
   247   0055BF  0F                 	db	15
   248   0055C0  81                 	db	129
   249   0055C1  0F                 	db	15
   250   0055C2  82                 	db	130
   251   0055C3  0F                 	db	15
   252   0055C4  83                 	db	131
   253   0055C5  0F                 	db	15
   254   0055C6  84                 	db	132
   255   0055C7  0F                 	db	15
   256                           
   257                           ;initializer for _tris_regisrers
   258   0055C8  92                 	db	146
   259   0055C9  0F                 	db	15
   260   0055CA  93                 	db	147
   261   0055CB  0F                 	db	15
   262   0055CC  94                 	db	148
   263   0055CD  0F                 	db	15
   264   0055CE  95                 	db	149
   265   0055CF  0F                 	db	15
   266   0055D0  96                 	db	150
   267   0055D1  0F                 	db	15
   268                           
   269                           ;initializer for _matrix_keypad_1
   270   0055D2  03                 	db	3
   271   0055D3  0B                 	db	11
   272   0055D4  13                 	db	19
   273   0055D5  1B                 	db	27
   274   0055D6  63                 	db	99
   275   0055D7  6B                 	db	107
   276   0055D8  73                 	db	115
   277   0055D9  7B                 	db	123
   278                           
   279                           ;initializer for _button_2
   280   0055DA  72                 	db	114
   281   0055DB  00                 	db	0
   282   0055DC  00                 	db	0
   283                           
   284                           ;initializer for _usart_1
   285   0055DD  0964               	dw	2404
   286   0055DF  0000               	dw	0
   287   0055E1  00                 	db	0
   288   0055E2  60                 	db	96
   289   0055E3  00                 	db	0
   290   0055E4  60                 	db	96
   291   0055E5  00                 	db	0
   292   0055E6  00                 	db	0
   293   0055E7  00                 	db	0
   294   0055E8  00                 	db	0
   295   0055E9  02                 	db	low _interrupt_usart_rx
   296   0055EA  5F                 	db	high _interrupt_usart_rx
   297   0055EB  00                 	db	0
   298   0055EC  00                 	db	0
   299   0055ED  00                 	db	0
   300   0055EE  00                 	db	0
   301                           
   302                           ;initializer for _mssp_i2c
   303   0055EF  86A0               	dw	34464
   304   0055F1  0001               	dw	1
   305   0055F3  08                 	db	8
   306   0055F4  00                 	db	0
   307   0055F5  01                 	db	1
   308   0055F6  00                 	db	0
   309   0055F7  00                 	db	0
   310   0055F8  00                 	db	0
   311   0055F9  00                 	db	0
   312   0055FA  00                 	db	0
   313   0055FB  00                 	db	0
   314   0055FC  00                 	db	0
   315   0055FD  00                 	db	0
   316                           
   317                           ;initializer for _ccp2_
   318   0055FE  00                 	db	0
   319   0055FF  00                 	db	0
   320   005600  0E                 	db	14
   321   005601  0E                 	db	14
   322   005602  0A                 	db	10
   323   005603  2710               	dw	10000
   324   005605  0000               	dw	0
   325   005607  11                 	db	17
   326                           
   327                           ;initializer for _ccp1_
   328   005608  00                 	db	0
   329   005609  00                 	db	0
   330   00560A  0E                 	db	14
   331   00560B  0E                 	db	14
   332   00560C  12                 	db	18
   333   00560D  2710               	dw	10000
   334   00560F  0000               	dw	0
   335   005611  11                 	db	17
   336                           
   337                           ;initializer for _INT_1
   338   005612  E8                 	db	low _int1_interrupt
   339   005613  60                 	db	high _int1_interrupt
   340   005614  49                 	db	73
   341   005615  01                 	db	1
   342   005616  01                 	db	1
   343   005617  01                 	db	1
   344                           
   345                           ;initializer for _INT_0
   346   005618  B4                 	db	low _into_interrupt
   347   005619  60                 	db	high _into_interrupt
   348   00561A  41                 	db	65
   349   00561B  01                 	db	1
   350   00561C  00                 	db	0
   351   00561D  01                 	db	1
   352                           
   353                           ;initializer for _ADC_
   354   00561E  00                 	db	0
   355   00561F  00                 	db	0
   356   005620  00                 	db	0
   357   005621  05                 	db	5
   358   005622  05                 	db	5
   359   005623  02                 	db	2
   360                           
   361                           ;initializer for _Timer1
   362   005624  14                 	db	low _timer1_interrupt
   363   005625  5E                 	db	high _timer1_interrupt
   364   005626  0BDC               	dw	3036
   365   005628  2B                 	db	43
   366                           
   367                           	psect	smallconst
   368   001000                     __psmallconst:
   369                           	callstack 0
   370   001000  00                 	db	0
   371   001001                     _value_ret:
   372                           	callstack 0
   373   001001  37                 	db	55
   374   001002  38                 	db	56
   375   001003  39                 	db	57
   376   001004  2F                 	db	47
   377   001005  34                 	db	52
   378   001006  35                 	db	53
   379   001007  36                 	db	54
   380   001008  2A                 	db	42
   381   001009  31                 	db	49
   382   00100A  32                 	db	50
   383   00100B  33                 	db	51
   384   00100C  2D                 	db	45
   385   00100D  23                 	db	35
   386   00100E  30                 	db	48
   387   00100F  3D                 	db	61
   388   001010  2B                 	db	43
   389   001011                     __end_of_value_ret:
   390                           	callstack 0
   391   000000                     _SPBRGH	set	4016
   392   000000                     _SPBRG	set	4015
   393   000000                     _TXREG	set	4013
   394   000000                     _TXSTAbits	set	4012
   395   000000                     _RCREG	set	4014
   396   000000                     _RCSTAbits	set	4011
   397   000000                     _TMR3L	set	4018
   398   000000                     _TMR3H	set	4019
   399   000000                     _T3CONbits	set	4017
   400   000000                     _TMR2	set	4044
   401   000000                     _T2CONbits	set	4042
   402   000000                     _TMR1L	set	4046
   403   000000                     _TMR1H	set	4047
   404   000000                     _T1CONbits	set	4045
   405   000000                     _TMR0L	set	4054
   406   000000                     _TMR0H	set	4055
   407   000000                     _T0CONbits	set	4053
   408   000000                     _INTCON2bits	set	4081
   409   000000                     _INTCON3bits	set	4080
   410   000000                     _SSPBUF	set	4041
   411   000000                     _SSPSTATbits	set	4039
   412   000000                     _SSPADD	set	4040
   413   000000                     _SSPCON2bits	set	4037
   414   000000                     _SSPCON1bits	set	4038
   415   000000                     _EECON2	set	4007
   416   000000                     _ADCON1bits	set	4033
   417   000000                     _ADRESL	set	4035
   418   000000                     _ADRESH	set	4036
   419   000000                     _INTCONbits	set	4082
   420   000000                     _TRISD	set	3989
   421   000000                     _TRISC	set	3988
   422   000000                     _PR2	set	4043
   423   000000                     _TRISB	set	3987
   424   000000                     _TRISE	set	3990
   425   001011                     STR_3:
   426   001011  74                 	db	116	;'t'
   427   001012  65                 	db	101	;'e'
   428   001013  6D                 	db	109	;'m'
   429   001014  70                 	db	112	;'p'
   430   001015  65                 	db	101	;'e'
   431   001016  72                 	db	114	;'r'
   432   001017  61                 	db	97	;'a'
   433   001018  74                 	db	116	;'t'
   434   001019  75                 	db	117	;'u'
   435   00101A  72                 	db	114	;'r'
   436   00101B  65                 	db	101	;'e'
   437   00101C  20                 	db	32
   438   00101D  3A                 	db	58	;':'
   439   00101E  20                 	db	32
   440   00101F  00                 	db	0
   441   001020                     STR_1:
   442   001020  61                 	db	97	;'a'
   443   001021  75                 	db	117	;'u'
   444   001022  74                 	db	116	;'t'
   445   001023  68                 	db	104	;'h'
   446   001024  6F                 	db	111	;'o'
   447   001025  72                 	db	114	;'r'
   448   001026  20                 	db	32
   449   001027  68                 	db	104	;'h'
   450   001028  6F                 	db	111	;'o'
   451   001029  75                 	db	117	;'u'
   452   00102A  73                 	db	115	;'s'
   453   00102B  65                 	db	101	;'e'
   454   00102C  20                 	db	32
   455   00102D  00                 	db	0
   456   00102E                     STR_2:
   457   00102E  64                 	db	100	;'d'
   458   00102F  61                 	db	97	;'a'
   459   001030  74                 	db	116	;'t'
   460   001031  61                 	db	97	;'a'
   461   001032  20                 	db	32
   462   001033  3A                 	db	58	;':'
   463   001034  20                 	db	32
   464   001035  00                 	db	0
   465   001036                     STR_4:
   466   001036  25                 	db	37
   467   001037  69                 	db	105	;'i'
   468   001038  00                 	db	0
   469   001039  00                 	db	0	; dummy byte at the end
   470   000000                     
   471                           	psect	nvBANK0
   472   0000FF                     __pnvBANK0:
   473                           	callstack 0
   474   0000FF                     _ret:
   475                           	callstack 0
   476   0000FF                     	ds	1
   477   000000                     _PORTBbits	set	3969
   478   000000                     _TRISCbits	set	3988
   479   000000                     _PIE1bits	set	3997
   480   000000                     _CCP2CONbits	set	4026
   481   000000                     _CCP1CONbits	set	4029
   482   000000                     _LATA	set	3977
   483   000000                     _PORTE	set	3972
   484   000000                     _PORTD	set	3971
   485   000000                     _PORTC	set	3970
   486   000000                     _PORTB	set	3969
   487   000000                     _PORTA	set	3968
   488   000000                     _TRISA	set	3986
   489   000000                     _CCPR1L	set	4030
   490   000000                     _ADCON2bits	set	4032
   491   000000                     _ADCON0bits	set	4034
   492   000000                     _CCPR2L	set	4027
   493   000000                     _PIE2bits	set	4000
   494   000000                     _PIR1bits	set	3998
   495   000000                     _IPR2bits	set	4002
   496   000000                     _EECON1bits	set	4006
   497   000000                     _EEDATA	set	4008
   498   000000                     _EEADR	set	4009
   499   000000                     _EEADRH	set	4010
   500   000000                     _PIR2bits	set	4001
   501   000000                     _LATE	set	3981
   502   000000                     _LATD	set	3980
   503   000000                     _LATC	set	3979
   504   000000                     _LATB	set	3978
   505   000000                     _BAUDCONbits	set	4024
   506                           
   507                           ; #config settings
   508                           
   509                           	psect	cinit
   510   005076                     __pcinit:
   511                           	callstack 0
   512   005076                     start_initialization:
   513                           	callstack 0
   514   005076                     __initialization:
   515                           	callstack 0
   516                           
   517                           ; Initialize objects allocated to BANK1 (107 bytes)
   518                           ; load TBLPTR registers with __pidataBANK1
   519   005076  0EBE               	movlw	low __pidataBANK1
   520   005078  6EF6               	movwf	tblptrl,c
   521   00507A  0E55               	movlw	high __pidataBANK1
   522   00507C  6EF7               	movwf	tblptrh,c
   523   00507E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   524   005080  6EF8               	movwf	tblptru,c
   525   005082  EE01  F000         	lfsr	0,__pdataBANK1
   526   005086  EE10 F06B          	lfsr	1,107
   527   00508A                     copy_data0:
   528   00508A  0009               	tblrd		*+
   529   00508C  CFF5 FFEE          	movff	tablat,postinc0
   530   005090  50E5               	movf	postdec1,w,c
   531   005092  50E1               	movf	fsr1l,w,c
   532   005094  E1FA               	bnz	copy_data0
   533                           
   534                           ; Initialize objects allocated to BANK0 (29 bytes)
   535                           ; load TBLPTR registers with __pidataBANK0
   536   005096  0EDC               	movlw	low __pidataBANK0
   537   005098  6EF6               	movwf	tblptrl,c
   538   00509A  0E5F               	movlw	high __pidataBANK0
   539   00509C  6EF7               	movwf	tblptrh,c
   540   00509E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   541   0050A0  6EF8               	movwf	tblptru,c
   542   0050A2  EE00  F0D9         	lfsr	0,__pdataBANK0
   543   0050A6  EE10 F01D          	lfsr	1,29
   544   0050AA                     copy_data1:
   545   0050AA  0009               	tblrd		*+
   546   0050AC  CFF5 FFEE          	movff	tablat,postinc0
   547   0050B0  50E5               	movf	postdec1,w,c
   548   0050B2  50E1               	movf	fsr1l,w,c
   549   0050B4  E1FA               	bnz	copy_data1
   550                           
   551                           ; Initialize objects allocated to COMRAM (4 bytes)
   552                           ; load TBLPTR registers with __pidataCOMRAM
   553   0050B6  0E04               	movlw	low __pidataCOMRAM
   554   0050B8  6EF6               	movwf	tblptrl,c
   555   0050BA  0E61               	movlw	high __pidataCOMRAM
   556   0050BC  6EF7               	movwf	tblptrh,c
   557   0050BE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   558   0050C0  6EF8               	movwf	tblptru,c
   559   0050C2  EE00  F06C         	lfsr	0,__pdataCOMRAM
   560   0050C6  EE10 F004          	lfsr	1,4
   561   0050CA                     copy_data2:
   562   0050CA  0009               	tblrd		*+
   563   0050CC  CFF5 FFEE          	movff	tablat,postinc0
   564   0050D0  50E5               	movf	postdec1,w,c
   565   0050D2  50E1               	movf	fsr1l,w,c
   566   0050D4  E1FA               	bnz	copy_data2
   567                           
   568                           ; Clear objects allocated to BANK1 (48 bytes)
   569   0050D6  EE01  F06B         	lfsr	0,__pbssBANK1
   570   0050DA  0E30               	movlw	48
   571   0050DC                     clear_0:
   572   0050DC  6AEE               	clrf	postinc0,c
   573   0050DE  06E8               	decf	wreg,f,c
   574   0050E0  E1FD               	bnz	clear_0
   575                           
   576                           ; Clear objects allocated to BANK0 (89 bytes)
   577   0050E2  EE00  F080         	lfsr	0,__pbssBANK0
   578   0050E6  0E59               	movlw	89
   579   0050E8                     clear_1:
   580   0050E8  6AEE               	clrf	postinc0,c
   581   0050EA  06E8               	decf	wreg,f,c
   582   0050EC  E1FD               	bnz	clear_1
   583                           
   584                           ; Clear objects allocated to COMRAM (12 bytes)
   585   0050EE  EE00  F060         	lfsr	0,__pbssCOMRAM
   586   0050F2  0E0C               	movlw	12
   587   0050F4                     clear_2:
   588   0050F4  6AEE               	clrf	postinc0,c
   589   0050F6  06E8               	decf	wreg,f,c
   590   0050F8  E1FD               	bnz	clear_2
   591   0050FA                     end_of_initialization:
   592                           	callstack 0
   593   0050FA                     __end_of__initialization:
   594                           	callstack 0
   595   0050FA  9070               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   596   0050FC  9270               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   597   0050FE  0100               	movlb	0
   598   005100  EF1D  F008         	goto	_main	;jump to C main() function
   599                           
   600                           	psect	bssCOMRAM
   601   000060                     __pbssCOMRAM:
   602                           	callstack 0
   603   000060                     _ds13_data_decimal:
   604                           	callstack 0
   605   000060                     	ds	6
   606   000066                     _usart_counter:
   607                           	callstack 0
   608   000066                     	ds	1
   609   000067                     _timer1_counter:
   610                           	callstack 0
   611   000067                     	ds	1
   612   000068                     _tc74_ref:
   613                           	callstack 0
   614   000068                     	ds	1
   615   000069                     _addd:
   616                           	callstack 0
   617   000069                     	ds	1
   618   00006A                     _tc74:
   619                           	callstack 0
   620   00006A                     	ds	1
   621   00006B                     _i2c_ack:
   622                           	callstack 0
   623   00006B                     	ds	1
   624                           
   625                           	psect	dataCOMRAM
   626   00006C                     __pdataCOMRAM:
   627                           	callstack 0
   628   00006C                     _flag2:
   629                           	callstack 0
   630   00006C                     	ds	1
   631   00006D                     _flag1:
   632                           	callstack 0
   633   00006D                     	ds	1
   634   00006E                     _leds_1:
   635                           	callstack 0
   636   00006E                     	ds	1
   637   00006F                     _LED_ROOM_1:
   638                           	callstack 0
   639   00006F                     	ds	1
   640                           
   641                           	psect	bssBANK0
   642   000080                     __pbssBANK0:
   643                           	callstack 0
   644   000080                     _width:
   645                           	callstack 0
   646   000080                     	ds	2
   647   000082                     _prec:
   648                           	callstack 0
   649   000082                     	ds	2
   650   000084                     _USART_OVERRUN_Interrupthandler:
   651                           	callstack 0
   652   000084                     	ds	2
   653   000086                     _USART_FRAMERROR_Interrupthandler:
   654                           	callstack 0
   655   000086                     	ds	2
   656   000088                     _USART_RX_Interrupthandler:
   657                           	callstack 0
   658   000088                     	ds	2
   659   00008A                     _USART_TX_Interrupthandler:
   660                           	callstack 0
   661   00008A                     	ds	2
   662   00008C                     _Timer3_preload:
   663                           	callstack 0
   664   00008C                     	ds	2
   665   00008E                     _TIMER3_Interrupthandler:
   666                           	callstack 0
   667   00008E                     	ds	2
   668   000090                     _TIMER2_Interrupthandler:
   669                           	callstack 0
   670   000090                     	ds	2
   671   000092                     _Timer1_preload:
   672                           	callstack 0
   673   000092                     	ds	2
   674   000094                     _TIMER1_Interrupthandler:
   675                           	callstack 0
   676   000094                     	ds	2
   677   000096                     _Timer0_preload:
   678                           	callstack 0
   679   000096                     	ds	2
   680   000098                     _TIMER0_Interrupthandler:
   681                           	callstack 0
   682   000098                     	ds	2
   683   00009A                     _RB7_interrupthandler_low:
   684                           	callstack 0
   685   00009A                     	ds	2
   686   00009C                     _RB7_interrupthandler_high:
   687                           	callstack 0
   688   00009C                     	ds	2
   689   00009E                     _RB6_interrupthandler_low:
   690                           	callstack 0
   691   00009E                     	ds	2
   692   0000A0                     _RB6_interrupthandler_high:
   693                           	callstack 0
   694   0000A0                     	ds	2
   695   0000A2                     _RB5_interrupthandler_low:
   696                           	callstack 0
   697   0000A2                     	ds	2
   698   0000A4                     _RB5_interrupthandler_high:
   699                           	callstack 0
   700   0000A4                     	ds	2
   701   0000A6                     _RB4_interrupthandler_low:
   702                           	callstack 0
   703   0000A6                     	ds	2
   704   0000A8                     _RB4_interrupthandler_high:
   705                           	callstack 0
   706   0000A8                     	ds	2
   707   0000AA                     _Int2_interrupthandler:
   708                           	callstack 0
   709   0000AA                     	ds	2
   710   0000AC                     _Int1_interrupthandler:
   711                           	callstack 0
   712   0000AC                     	ds	2
   713   0000AE                     _Int0_interrupthandler:
   714                           	callstack 0
   715   0000AE                     	ds	2
   716   0000B0                     _I2C_Report_Receive_Overflow_InterruptHandle:
   717                           	callstack 0
   718   0000B0                     	ds	2
   719   0000B2                     _I2C_DefaultInterruptHandle:
   720                           	callstack 0
   721   0000B2                     	ds	2
   722   0000B4                     _I2C_Report_Write_Collision_InterruptHandler:
   723                           	callstack 0
   724   0000B4                     	ds	2
   725   0000B6                     _CCP2_Interrupthandler:
   726                           	callstack 0
   727   0000B6                     	ds	2
   728   0000B8                     _CCP1_Interrupthandler:
   729                           	callstack 0
   730   0000B8                     	ds	2
   731   0000BA                     _ADC_INTERRUPTHANDLER:
   732                           	callstack 0
   733   0000BA                     	ds	2
   734   0000BC                     _flags:
   735                           	callstack 0
   736   0000BC                     	ds	1
   737   0000BD                     	ds	1
   738   0000BE                     _Timer2_preload:
   739                           	callstack 0
   740   0000BE                     	ds	1
   741   0000BF                     relay_toggle@F3075:
   742                           	callstack 0
   743   0000BF                     	ds	1
   744   0000C0                     relay_turn_off@F3070:
   745                           	callstack 0
   746   0000C0                     	ds	1
   747   0000C1                     relay_turn_on@F3065:
   748                           	callstack 0
   749   0000C1                     	ds	1
   750   0000C2                     relay_intialize@F3060:
   751                           	callstack 0
   752   0000C2                     	ds	1
   753   0000C3                     led_toggle@F3075:
   754                           	callstack 0
   755   0000C3                     	ds	1
   756   0000C4                     led_turn_off@F3070:
   757                           	callstack 0
   758   0000C4                     	ds	1
   759   0000C5                     led_turn_on@F3065:
   760                           	callstack 0
   761   0000C5                     	ds	1
   762   0000C6                     led_intialize@F3060:
   763                           	callstack 0
   764   0000C6                     	ds	1
   765   0000C7                     _control_project:
   766                           	callstack 0
   767   0000C7                     	ds	1
   768   0000C8                     _led_ret:
   769                           	callstack 0
   770   0000C8                     	ds	1
   771   0000C9                     _counter:
   772                           	callstack 0
   773   0000C9                     	ds	1
   774   0000CA                     _usart_data:
   775                           	callstack 0
   776   0000CA                     	ds	7
   777   0000D1                     _ds13_data:
   778                           	callstack 0
   779   0000D1                     	ds	6
   780   0000D7                     _ADC_VALUE:
   781                           	callstack 0
   782   0000D7                     	ds	2
   783                           
   784                           	psect	dataBANK0
   785   0000D9                     __pdataBANK0:
   786                           	callstack 0
   787   0000D9                     _lat_regisrers:
   788                           	callstack 0
   789   0000D9                     	ds	10
   790   0000E3                     _button_1:
   791                           	callstack 0
   792   0000E3                     	ds	3
   793   0000E6                     _flag4:
   794                           	callstack 0
   795   0000E6                     	ds	1
   796   0000E7                     _flag3:
   797                           	callstack 0
   798   0000E7                     	ds	1
   799   0000E8                     _relay_2:
   800                           	callstack 0
   801   0000E8                     	ds	1
   802   0000E9                     _relay_1:
   803                           	callstack 0
   804   0000E9                     	ds	1
   805   0000EA                     _led_2:
   806                           	callstack 0
   807   0000EA                     	ds	1
   808   0000EB                     _led_1:
   809                           	callstack 0
   810   0000EB                     	ds	1
   811   0000EC                     _lcd_4bit:
   812                           	callstack 0
   813   0000EC                     	ds	6
   814   0000F2                     _motor_2:
   815                           	callstack 0
   816   0000F2                     	ds	2
   817   0000F4                     _motor_1:
   818                           	callstack 0
   819   0000F4                     	ds	2
   820                           
   821                           	psect	bssBANK1
   822   00016B                     __pbssBANK1:
   823                           	callstack 0
   824   00016B                     _dbuf:
   825                           	callstack 0
   826   00016B                     	ds	32
   827   00018B                     _return_data_array:
   828                           	callstack 0
   829   00018B                     	ds	6
   830   000191                     	ds	6
   831   000197                     _Timer2:
   832                           	callstack 0
   833   000197                     	ds	4
   834                           
   835                           	psect	dataBANK1
   836   000100                     __pdataBANK1:
   837                           	callstack 0
   838   000100                     _port_regisrers:
   839                           	callstack 0
   840   000100                     	ds	10
   841   00010A                     _tris_regisrers:
   842                           	callstack 0
   843   00010A                     	ds	10
   844   000114                     _matrix_keypad_1:
   845                           	callstack 0
   846   000114                     	ds	8
   847   00011C                     _button_2:
   848                           	callstack 0
   849   00011C                     	ds	3
   850   00011F                     _usart_1:
   851                           	callstack 0
   852   00011F                     	ds	18
   853   000131                     _mssp_i2c:
   854                           	callstack 0
   855   000131                     	ds	15
   856   000140                     _ccp2_:
   857                           	callstack 0
   858   000140                     	ds	10
   859   00014A                     _ccp1_:
   860                           	callstack 0
   861   00014A                     	ds	10
   862   000154                     _INT_1:
   863                           	callstack 0
   864   000154                     	ds	6
   865   00015A                     _INT_0:
   866                           	callstack 0
   867   00015A                     	ds	6
   868   000160                     _ADC_:
   869                           	callstack 0
   870   000160                     	ds	6
   871   000166                     _Timer1:
   872                           	callstack 0
   873   000166                     	ds	5
   874                           
   875                           	psect	cstackBANK1
   876   00019B                     __pcstackBANK1:
   877                           	callstack 0
   878   00019B                     ___fltol@sign1:
   879                           	callstack 0
   880                           
   881                           ; 1 bytes @ 0x0
   882   00019B                     	ds	1
   883   00019C                     ___fltol@exp1:
   884                           	callstack 0
   885                           
   886                           ; 1 bytes @ 0x1
   887   00019C                     	ds	1
   888   00019D                     ??_ccp1_pwm_set_duty:
   889   00019D                     ??_ccp2_pwm_set_duty:
   890   00019D                     I2C_Master_Mode_Clock_Configurations@i2c_obj:
   891                           	callstack 0
   892   00019D                     baudrate_calculate@usart:
   893                           	callstack 0
   894                           
   895                           ; 2 bytes @ 0x2
   896   00019D                     	ds	2
   897   00019F                     ??_baudrate_calculate:
   898   00019F                     MSSP_I2C_Init@i2c_obj:
   899                           	callstack 0
   900   00019F                     _ccp1_pwm_set_duty$5719:
   901                           	callstack 0
   902   00019F                     _ccp2_pwm_set_duty$5720:
   903                           	callstack 0
   904                           
   905                           ; 4 bytes @ 0x4
   906   00019F                     	ds	2
   907   0001A1                     MSSP_I2C_Init@ret:
   908                           	callstack 0
   909   0001A1                     baudrate_calculate@baud_rate:
   910                           	callstack 0
   911                           
   912                           ; 4 bytes @ 0x6
   913   0001A1                     	ds	2
   914   0001A3                     ccp1_pwm_set_duty@duty:
   915                           	callstack 0
   916   0001A3                     ccp2_pwm_set_duty@duty:
   917                           	callstack 0
   918                           
   919                           ; 1 bytes @ 0x8
   920   0001A3                     	ds	1
   921   0001A4                     ccp1_pwm_set_duty@duty_:
   922                           	callstack 0
   923   0001A4                     ccp2_pwm_set_duty@duty_:
   924                           	callstack 0
   925                           
   926                           ; 1 bytes @ 0x9
   927   0001A4                     	ds	1
   928   0001A5                     ccp1_pwm_set_duty@l_duty_temp:
   929                           	callstack 0
   930   0001A5                     ccp2_pwm_set_duty@l_duty_temp:
   931                           	callstack 0
   932   0001A5                     _baudrate_calculate$5721:
   933                           	callstack 0
   934                           
   935                           ; 4 bytes @ 0xA
   936   0001A5                     	ds	4
   937   0001A9                     usart_ASYNC_init@usart:
   938                           	callstack 0
   939                           
   940                           ; 2 bytes @ 0xE
   941   0001A9                     	ds	2
   942   0001AB                     main@i:
   943                           	callstack 0
   944                           
   945                           ; 1 bytes @ 0x10
   946   0001AB                     	ds	1
   947                           
   948                           	psect	cstackBANK0
   949   0000F6                     __pcstackBANK0:
   950                           	callstack 0
   951   0000F6                     ?___fltol:
   952                           	callstack 0
   953   0000F6                     ___fltol@f1:
   954                           	callstack 0
   955                           
   956                           ; 4 bytes @ 0x0
   957   0000F6                     	ds	4
   958   0000FA                     ??___fltol:
   959                           
   960                           ; 1 bytes @ 0x4
   961   0000FA                     	ds	4
   962   0000FE                     ??_I2C_Master_Mode_Clock_Configurations:
   963   0000FE                     usart_ASYNC_init@ret:
   964                           	callstack 0
   965                           
   966                           ; 1 bytes @ 0x8
   967   0000FE                     	ds	1
   968                           
   969                           	psect	cstackCOMRAM
   970   000001                     __pcstackCOMRAM:
   971                           	callstack 0
   972   000001                     GPIO_pIN_TOGGLE_LOGIC@config_pin:
   973                           	callstack 0
   974   000001                     RB4_ISR@value:
   975                           	callstack 0
   976   000001                     RB5_ISR@value:
   977                           	callstack 0
   978   000001                     RB6_ISR@value:
   979                           	callstack 0
   980   000001                     RB7_ISR@value:
   981                           	callstack 0
   982   000001                     usart_ASYNC_read_byte_blocking@data:
   983                           	callstack 0
   984   000001                     i2GPIO_pIN_WRITE_LOGIC@config_pin:
   985                           	callstack 0
   986                           
   987                           ; 2 bytes @ 0x0
   988   000001                     	ds	1
   989   000002                     ??_GPIO_pIN_TOGGLE_LOGIC:
   990   000002                     interrupt_usart_rx@ret_data:
   991                           	callstack 0
   992                           
   993                           ; 1 bytes @ 0x1
   994   000002                     	ds	1
   995   000003                     i2GPIO_pIN_WRITE_LOGIC@logic:
   996                           	callstack 0
   997                           
   998                           ; 1 bytes @ 0x2
   999   000003                     	ds	1
  1000   000004                     ??i2_GPIO_pIN_WRITE_LOGIC:
  1001                           
  1002                           ; 1 bytes @ 0x3
  1003   000004                     	ds	2
  1004   000006                     GPIO_pIN_TOGGLE_LOGIC@ret:
  1005                           	callstack 0
  1006                           
  1007                           ; 1 bytes @ 0x5
  1008   000006                     	ds	1
  1009   000007                     
  1010                           ; 1 bytes @ 0x6
  1011   000007                     	ds	2
  1012   000009                     i2GPIO_pIN_WRITE_LOGIC@ret:
  1013                           	callstack 0
  1014                           
  1015                           ; 1 bytes @ 0x8
  1016   000009                     	ds	1
  1017   00000A                     ??_interrupt_manager:
  1018                           
  1019                           ; 1 bytes @ 0x9
  1020   00000A                     	ds	6
  1021   000010                     ??_adc_channel_port_confige:
  1022   000010                     ?___awdiv:
  1023                           	callstack 0
  1024   000010                     ?___awmod:
  1025                           	callstack 0
  1026   000010                     ?___lmul:
  1027                           	callstack 0
  1028   000010                     ?___xxtofl:
  1029                           	callstack 0
  1030   000010                     usart_ASYNC_write_byte_blocking@data:
  1031                           	callstack 0
  1032   000010                     memset@dest:
  1033                           	callstack 0
  1034   000010                     ADC_start_conversion@ADC_conf:
  1035                           	callstack 0
  1036   000010                     ADC_ISconversion_done@ADC_conf:
  1037                           	callstack 0
  1038   000010                     ADC_ISconversion_result@ADC_conf:
  1039                           	callstack 0
  1040   000010                     select_result_format@ADC_conf:
  1041                           	callstack 0
  1042   000010                     configure_voltage_ref@ADC_conf:
  1043                           	callstack 0
  1044   000010                     GPIO_pIN_DIRECTION_INTIALIZE@config_pin:
  1045                           	callstack 0
  1046   000010                     GPIO_pIN_WRITE_LOGIC@config_pin:
  1047                           	callstack 0
  1048   000010                     MSSP_I2C_Master_Send_Start@i2c_obj:
  1049                           	callstack 0
  1050   000010                     MSSP_I2C_Master_Send_Repeated_Start@i2c_obj:
  1051                           	callstack 0
  1052   000010                     MSSP_I2C_Master_Send_Stop@i2c_obj:
  1053                           	callstack 0
  1054   000010                     MSSP_I2C_Master_Write_Blocking@i2c_obj:
  1055                           	callstack 0
  1056   000010                     MSSP_I2C_Master_Read_Blocking@i2c_obj:
  1057                           	callstack 0
  1058   000010                     I2C_Slave_Mode_Configurations@i2c_obj:
  1059                           	callstack 0
  1060   000010                     MSSP_I2C_Interrupt_Configurations@i2c_obj:
  1061                           	callstack 0
  1062   000010                     interrupt_intx_enable@INTERRUPT_INTX:
  1063                           	callstack 0
  1064   000010                     interrupt_intx_disable@INTERRUPT_INTX:
  1065                           	callstack 0
  1066   000010                     interrupt_intx_edge_inti@INTERRUPT_INTX:
  1067                           	callstack 0
  1068   000010                     interrupt_intx_clear@INTERRUPT_INTX:
  1069                           	callstack 0
  1070   000010                     INT0_setinterrupthandler@interrupthandler:
  1071                           	callstack 0
  1072   000010                     INT1_setinterrupthandler@interrupthandler:
  1073                           	callstack 0
  1074   000010                     INT2_setinterrupthandler@interrupthandler:
  1075                           	callstack 0
  1076   000010                     timer1_mode_cfg@Timer1:
  1077                           	callstack 0
  1078   000010                     timer1_reg_bit_cfg@Timer1:
  1079                           	callstack 0
  1080   000010                     timer1_osc_cfg@Timer1:
  1081                           	callstack 0
  1082   000010                     Timer2_init@Timer2:
  1083                           	callstack 0
  1084   000010                     usart_async_tx_int@usart:
  1085                           	callstack 0
  1086   000010                     usart_async_rx_int@usart:
  1087                           	callstack 0
  1088   000010                     ___awdiv@dividend:
  1089                           	callstack 0
  1090   000010                     ___awmod@dividend:
  1091                           	callstack 0
  1092   000010                     fputc@c:
  1093                           	callstack 0
  1094   000010                     ___lmul@multiplier:
  1095                           	callstack 0
  1096   000010                     ___xxtofl@val:
  1097                           	callstack 0
  1098                           
  1099                           ; 4 bytes @ 0xF
  1100   000010                     	ds	1
  1101   000011                     memset@c:
  1102                           	callstack 0
  1103                           
  1104                           ; 2 bytes @ 0x10
  1105   000011                     	ds	1
  1106   000012                     ??_Timer2_init:
  1107   000012                     ??_GPIO_pIN_DIRECTION_INTIALIZE:
  1108   000012                     ??_I2C_Slave_Mode_Configurations:
  1109   000012                     ??_interrupt_intx_disable:
  1110   000012                     ??_interrupt_intx_clear:
  1111   000012                     ??_interrupt_intx_edge_inti:
  1112   000012                     ??_interrupt_intx_enable:
  1113   000012                     ADC_start_conversion@ret:
  1114                           	callstack 0
  1115   000012                     ADC_ISconversion_done@conversion_status:
  1116                           	callstack 0
  1117   000012                     ADC_ISconversion_result@conversion_result:
  1118                           	callstack 0
  1119   000012                     adc_channel_port_confige@ADC_CHANNAL_SELECT:
  1120                           	callstack 0
  1121   000012                     GPIO_pIN_WRITE_LOGIC@logic:
  1122                           	callstack 0
  1123   000012                     MSSP_I2C_Master_Write_Blocking@i2c_data:
  1124                           	callstack 0
  1125   000012                     MSSP_I2C_Master_Read_Blocking@ack:
  1126                           	callstack 0
  1127   000012                     fputc@fp:
  1128                           	callstack 0
  1129   000012                     interrupt_intx_sethandler@INTERRUPT_INTX:
  1130                           	callstack 0
  1131   000012                     Timer1_init@Timer1:
  1132                           	callstack 0
  1133   000012                     ___awdiv@divisor:
  1134                           	callstack 0
  1135   000012                     ___awmod@divisor:
  1136                           	callstack 0
  1137                           
  1138                           ; 2 bytes @ 0x11
  1139   000012                     	ds	1
  1140   000013                     ??_GPIO_pIN_WRITE_LOGIC:
  1141   000013                     ??_fputc:
  1142   000013                     ??_ADC_ISconversion_result:
  1143   000013                     ADC_ISconversion_done@ret:
  1144                           	callstack 0
  1145   000013                     MSSP_I2C_Master_Write_Blocking@_ack:
  1146                           	callstack 0
  1147   000013                     MSSP_I2C_Master_Read_Blocking@i2c_data:
  1148                           	callstack 0
  1149   000013                     Timer2_init@ret:
  1150                           	callstack 0
  1151   000013                     ADC_inti@ADC_conf:
  1152                           	callstack 0
  1153   000013                     ADC_select_channal@ADC_conf:
  1154                           	callstack 0
  1155   000013                     memset@n:
  1156                           	callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x12
  1159   000013                     	ds	1
  1160   000014                     ??_Timer1_init:
  1161   000014                     ??_interrupt_intx_sethandler:
  1162   000014                     ??___xxtofl:
  1163   000014                     interrupt_intx_enable@ret:
  1164                           	callstack 0
  1165   000014                     interrupt_intx_disable@ret:
  1166                           	callstack 0
  1167   000014                     interrupt_intx_edge_inti@ret:
  1168                           	callstack 0
  1169   000014                     interrupt_intx_clear@ret:
  1170                           	callstack 0
  1171   000014                     ___awdiv@counter:
  1172                           	callstack 0
  1173   000014                     ___awmod@counter:
  1174                           	callstack 0
  1175   000014                     MSSP_I2C_Master_read_data_in_register@i2c_obj:
  1176                           	callstack 0
  1177   000014                     MSSP_I2C_Master_call_slave@i2c_obj:
  1178                           	callstack 0
  1179   000014                     ___lmul@multiplicand:
  1180                           	callstack 0
  1181                           
  1182                           ; 4 bytes @ 0x13
  1183   000014                     	ds	1
  1184   000015                     ??_ADC_inti:
  1185   000015                     ADC_select_channal@ADC_CHANNAL_SELECT:
  1186                           	callstack 0
  1187   000015                     ___awdiv@sign:
  1188                           	callstack 0
  1189   000015                     ___awmod@sign:
  1190                           	callstack 0
  1191   000015                     memset@p:
  1192                           	callstack 0
  1193                           
  1194                           ; 1 bytes @ 0x14
  1195   000015                     	ds	1
  1196   000016                     ??_ADC_select_channal:
  1197   000016                     ?_abs:
  1198                           	callstack 0
  1199   000016                     ADC_inti@ret:
  1200                           	callstack 0
  1201   000016                     ADC_ISconversion_result@ret:
  1202                           	callstack 0
  1203   000016                     MSSP_I2C_Master_read_data_in_register@i2c_data_1:
  1204                           	callstack 0
  1205   000016                     MSSP_I2C_Master_call_slave@address:
  1206                           	callstack 0
  1207   000016                     interrupt_intx_sethandler@ret:
  1208                           	callstack 0
  1209   000016                     Timer1_init@ret:
  1210                           	callstack 0
  1211   000016                     ___awdiv@quotient:
  1212                           	callstack 0
  1213   000016                     abs@a:
  1214                           	callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x15
  1217   000016                     	ds	1
  1218   000017                     ADC_select_channal@ret:
  1219                           	callstack 0
  1220   000017                     MSSP_I2C_Master_read_data_in_register@i2c_data_2:
  1221                           	callstack 0
  1222   000017                     MSSP_I2C_Master_call_slave@data:
  1223                           	callstack 0
  1224                           
  1225                           ; 1 bytes @ 0x16
  1226   000017                     	ds	1
  1227   000018                     ??_abs:
  1228   000018                     transfer_0x_d@num:
  1229                           	callstack 0
  1230   000018                     GPIO_pIN_DIRECTION_INTIALIZE@ret:
  1231                           	callstack 0
  1232   000018                     GPIO_pIN_WRITE_LOGIC@ret:
  1233                           	callstack 0
  1234   000018                     MSSP_I2C_Master_read_data_in_register@ret_data:
  1235                           	callstack 0
  1236   000018                     MSSP_I2C_Master_call_slave@_ack:
  1237                           	callstack 0
  1238   000018                     ___xxtofl@sign:
  1239                           	callstack 0
  1240   000018                     ADC_get_conversion_blocking@ADC_conf:
  1241                           	callstack 0
  1242   000018                     ___lmul@product:
  1243                           	callstack 0
  1244                           
  1245                           ; 4 bytes @ 0x17
  1246   000018                     	ds	1
  1247   000019                     transfer_0x_d@l_bit:
  1248                           	callstack 0
  1249   000019                     lcd_send_4bits@lcd:
  1250                           	callstack 0
  1251   000019                     lcd_4bit_send_enable_signal@lcd:
  1252                           	callstack 0
  1253   000019                     morot_turn_right@motor_pin:
  1254                           	callstack 0
  1255   000019                     morot_turn_left@motor_pin:
  1256                           	callstack 0
  1257   000019                     morot_stop@motor_pin:
  1258                           	callstack 0
  1259   000019                     MSSP_I2C_Master_read_data_in_register@_ack:
  1260                           	callstack 0
  1261   000019                     ___xxtofl@exp:
  1262                           	callstack 0
  1263   000019                     GPIO_pIN_INTIALIZE@config_pin:
  1264                           	callstack 0
  1265                           
  1266                           ; 2 bytes @ 0x18
  1267   000019                     	ds	1
  1268   00001A                     ??_morot_turn_right:
  1269   00001A                     ??_morot_turn_left:
  1270   00001A                     ??_morot_stop:
  1271   00001A                     ??_lcd_4bit_send_enable_signal:
  1272   00001A                     ??_MSSP_I2C_Master_read_data_in_register:
  1273   00001A                     transfer_0x_d@h_bit:
  1274                           	callstack 0
  1275   00001A                     lcd_send_4bits@_data_command:
  1276                           	callstack 0
  1277   00001A                     ADC_get_conversion_blocking@ADC_CHANNAL_SELECT:
  1278                           	callstack 0
  1279   00001A                     vfpfcnvrt@fp:
  1280                           	callstack 0
  1281   00001A                     ___xxtofl@arg:
  1282                           	callstack 0
  1283                           
  1284                           ; 4 bytes @ 0x19
  1285   00001A                     	ds	1
  1286   00001B                     ??_GPIO_pIN_INTIALIZE:
  1287   00001B                     ??_lcd_send_4bits:
  1288   00001B                     lcd_4bit_send_enable_signal@ret:
  1289                           	callstack 0
  1290   00001B                     morot_turn_right@ret:
  1291                           	callstack 0
  1292   00001B                     morot_turn_left@ret:
  1293                           	callstack 0
  1294   00001B                     morot_stop@ret:
  1295                           	callstack 0
  1296   00001B                     ADC_get_conversion_blocking@conversion_status:
  1297                           	callstack 0
  1298   00001B                     vfpfcnvrt@fmt:
  1299                           	callstack 0
  1300   00001B                     ds1307_read_values@i2c_obj:
  1301                           	callstack 0
  1302   00001B                     tc74_read_value@i2c_obj:
  1303                           	callstack 0
  1304                           
  1305                           ; 2 bytes @ 0x1A
  1306   00001B                     	ds	1
  1307   00001C                     ?___lldiv:
  1308                           	callstack 0
  1309   00001C                     lcd_send_4bits@ret:
  1310                           	callstack 0
  1311   00001C                     ADC_get_conversion_blocking@l_conversion_status:
  1312                           	callstack 0
  1313   00001C                     GPIO_pIN_INTIALIZE@ret:
  1314                           	callstack 0
  1315   00001C                     vfpfcnvrt@ap:
  1316                           	callstack 0
  1317   00001C                     ___lldiv@dividend:
  1318                           	callstack 0
  1319                           
  1320                           ; 4 bytes @ 0x1B
  1321   00001C                     	ds	1
  1322   00001D                     ??_vfpfcnvrt:
  1323   00001D                     lcd_4bit_send_command@lcd:
  1324                           	callstack 0
  1325   00001D                     lcd_4bit_send_char_data@lcd:
  1326                           	callstack 0
  1327   00001D                     motor_intialize@motor_pin:
  1328                           	callstack 0
  1329   00001D                     ds1307_read_values@address_1:
  1330                           	callstack 0
  1331   00001D                     tc74_read_value@i2c_data_1:
  1332                           	callstack 0
  1333   00001D                     ADC_get_conversion_blocking@ret:
  1334                           	callstack 0
  1335   00001D                     interrupt_intx_pin_inti@INTERRUPT_INTX:
  1336                           	callstack 0
  1337                           
  1338                           ; 2 bytes @ 0x1C
  1339   00001D                     	ds	1
  1340   00001E                     ??_motor_intialize:
  1341   00001E                     ?___fldiv:
  1342                           	callstack 0
  1343   00001E                     lcd_4bit_send_command@command:
  1344                           	callstack 0
  1345   00001E                     lcd_4bit_send_char_data@data:
  1346                           	callstack 0
  1347   00001E                     ds1307_read_values@return_data_array:
  1348                           	callstack 0
  1349   00001E                     tc74_read_value@i2c_data_2:
  1350                           	callstack 0
  1351   00001E                     vfpfcnvrt@done:
  1352                           	callstack 0
  1353   00001E                     ___fldiv@b:
  1354                           	callstack 0
  1355                           
  1356                           ; 4 bytes @ 0x1D
  1357   00001E                     	ds	1
  1358   00001F                     lcd_4bit_send_command@ret:
  1359                           	callstack 0
  1360   00001F                     lcd_4bit_send_char_data@ret:
  1361                           	callstack 0
  1362   00001F                     motor_intialize@ret:
  1363                           	callstack 0
  1364   00001F                     ds1307_read_values@_ack:
  1365                           	callstack 0
  1366   00001F                     tc74_read_value@ret_data:
  1367                           	callstack 0
  1368   00001F                     interrupt_intx_pin_inti@ret:
  1369                           	callstack 0
  1370   00001F                     vfpfcnvrt@cp:
  1371                           	callstack 0
  1372                           
  1373                           ; 1 bytes @ 0x1E
  1374   00001F                     	ds	1
  1375   000020                     lcd_4bit_intialize@lcd:
  1376                           	callstack 0
  1377   000020                     lcd_4bit_set_cursor@lcd:
  1378                           	callstack 0
  1379   000020                     tc74_read_value@_ack:
  1380                           	callstack 0
  1381   000020                     Interrupt_Intx_Inti@INTERRUPT_INTX:
  1382                           	callstack 0
  1383   000020                     ___lldiv@divisor:
  1384                           	callstack 0
  1385   000020                     vfpfcnvrt@convarg:
  1386                           	callstack 0
  1387                           
  1388                           ; 4 bytes @ 0x1F
  1389   000020                     	ds	1
  1390   000021                     ??_lcd_4bit_intialize:
  1391   000021                     lcd_4bit_set_cursor@row:
  1392                           	callstack 0
  1393                           
  1394                           ; 1 bytes @ 0x20
  1395   000021                     	ds	1
  1396   000022                     lcd_4bit_intialize@l_data_pins_counter:
  1397                           	callstack 0
  1398   000022                     lcd_4bit_set_cursor@coulmn:
  1399                           	callstack 0
  1400   000022                     Interrupt_Intx_Inti@ret:
  1401                           	callstack 0
  1402   000022                     ___fldiv@a:
  1403                           	callstack 0
  1404                           
  1405                           ; 4 bytes @ 0x21
  1406   000022                     	ds	1
  1407   000023                     ??_lcd_4bit_set_cursor:
  1408   000023                     lcd_4bit_intialize@ret:
  1409                           	callstack 0
  1410                           
  1411                           ; 1 bytes @ 0x22
  1412   000023                     	ds	1
  1413   000024                     vfpfcnvrt@c:
  1414                           	callstack 0
  1415   000024                     ___lldiv@quotient:
  1416                           	callstack 0
  1417                           
  1418                           ; 4 bytes @ 0x23
  1419   000024                     	ds	1
  1420   000025                     ?_vfprintf:
  1421                           	callstack 0
  1422   000025                     lcd_4bit_set_cursor@ret:
  1423                           	callstack 0
  1424   000025                     vfprintf@fp:
  1425                           	callstack 0
  1426                           
  1427                           ; 1 bytes @ 0x24
  1428   000025                     	ds	1
  1429   000026                     ??___fldiv:
  1430   000026                     lcd_4bit_send_char_data_pos@lcd:
  1431                           	callstack 0
  1432   000026                     lcd_4bit_send_string_pos@lcd:
  1433                           	callstack 0
  1434   000026                     vfprintf@fmt:
  1435                           	callstack 0
  1436                           
  1437                           ; 1 bytes @ 0x25
  1438   000026                     	ds	1
  1439   000027                     lcd_4bit_send_char_data_pos@row:
  1440                           	callstack 0
  1441   000027                     lcd_4bit_send_string_pos@row:
  1442                           	callstack 0
  1443   000027                     vfprintf@ap:
  1444                           	callstack 0
  1445                           
  1446                           ; 1 bytes @ 0x26
  1447   000027                     	ds	1
  1448   000028                     lcd_4bit_send_char_data_pos@column:
  1449                           	callstack 0
  1450   000028                     lcd_4bit_send_string_pos@column:
  1451                           	callstack 0
  1452   000028                     ___lldiv@counter:
  1453                           	callstack 0
  1454   000028                     vfprintf@cfmt:
  1455                           	callstack 0
  1456                           
  1457                           ; 1 bytes @ 0x27
  1458   000028                     	ds	1
  1459   000029                     ?_sprintf:
  1460                           	callstack 0
  1461   000029                     lcd_4bit_send_char_data_pos@data:
  1462                           	callstack 0
  1463   000029                     sprintf@s:
  1464                           	callstack 0
  1465   000029                     lcd_4bit_send_string_pos@str:
  1466                           	callstack 0
  1467   000029                     ccp1_init@ccp1_:
  1468                           	callstack 0
  1469   000029                     ccp2_init@ccp2_:
  1470                           	callstack 0
  1471                           
  1472                           ; 2 bytes @ 0x28
  1473   000029                     	ds	1
  1474   00002A                     lcd_4bit_send_char_data_pos@ret:
  1475                           	callstack 0
  1476   00002A                     sprintf@fmt:
  1477                           	callstack 0
  1478   00002A                     ___fldiv@rem:
  1479                           	callstack 0
  1480                           
  1481                           ; 4 bytes @ 0x29
  1482   00002A                     	ds	1
  1483   00002B                     ??_ccp1_init:
  1484   00002B                     ??_ccp2_init:
  1485   00002B                     lcd_4bit_send_string_pos@ret:
  1486                           	callstack 0
  1487                           
  1488                           ; 1 bytes @ 0x2A
  1489   00002B                     	ds	3
  1490   00002E                     ___fldiv@sign:
  1491                           	callstack 0
  1492                           
  1493                           ; 1 bytes @ 0x2D
  1494   00002E                     	ds	1
  1495   00002F                     ccp1_init@ret:
  1496                           	callstack 0
  1497   00002F                     ccp2_init@ret:
  1498                           	callstack 0
  1499   00002F                     sprintf@ap:
  1500                           	callstack 0
  1501   00002F                     ___fldiv@new_exp:
  1502                           	callstack 0
  1503                           
  1504                           ; 2 bytes @ 0x2E
  1505   00002F                     	ds	1
  1506   000030                     sprintf@f:
  1507                           	callstack 0
  1508                           
  1509                           ; 12 bytes @ 0x2F
  1510   000030                     	ds	1
  1511   000031                     ___fldiv@grs:
  1512                           	callstack 0
  1513                           
  1514                           ; 4 bytes @ 0x30
  1515   000031                     	ds	4
  1516   000035                     ___fldiv@bexp:
  1517                           	callstack 0
  1518                           
  1519                           ; 1 bytes @ 0x34
  1520   000035                     	ds	1
  1521   000036                     ___fldiv@aexp:
  1522                           	callstack 0
  1523                           
  1524                           ; 1 bytes @ 0x35
  1525   000036                     	ds	1
  1526   000037                     ?___fladd:
  1527                           	callstack 0
  1528   000037                     ___fladd@b:
  1529                           	callstack 0
  1530                           
  1531                           ; 4 bytes @ 0x36
  1532   000037                     	ds	4
  1533   00003B                     ___fladd@a:
  1534                           	callstack 0
  1535                           
  1536                           ; 4 bytes @ 0x3A
  1537   00003B                     	ds	1
  1538   00003C                     convert_uint8_to_string@str:
  1539                           	callstack 0
  1540                           
  1541                           ; 1 bytes @ 0x3B
  1542   00003C                     	ds	1
  1543   00003D                     convert_uint8_to_string@value:
  1544                           	callstack 0
  1545                           
  1546                           ; 1 bytes @ 0x3C
  1547   00003D                     	ds	1
  1548   00003E                     convert_uint8_to_string@ret:
  1549                           	callstack 0
  1550                           
  1551                           ; 1 bytes @ 0x3D
  1552   00003E                     	ds	1
  1553   00003F                     ??___fladd:
  1554                           
  1555                           ; 1 bytes @ 0x3E
  1556   00003F                     	ds	4
  1557   000043                     ___fladd@signs:
  1558                           	callstack 0
  1559                           
  1560                           ; 1 bytes @ 0x42
  1561   000043                     	ds	1
  1562   000044                     ___fladd@aexp:
  1563                           	callstack 0
  1564                           
  1565                           ; 1 bytes @ 0x43
  1566   000044                     	ds	1
  1567   000045                     ___fladd@bexp:
  1568                           	callstack 0
  1569                           
  1570                           ; 1 bytes @ 0x44
  1571   000045                     	ds	1
  1572   000046                     ___fladd@grs:
  1573                           	callstack 0
  1574                           
  1575                           ; 1 bytes @ 0x45
  1576   000046                     	ds	1
  1577   000047                     ?___flmul:
  1578                           	callstack 0
  1579   000047                     ___flmul@b:
  1580                           	callstack 0
  1581                           
  1582                           ; 4 bytes @ 0x46
  1583   000047                     	ds	4
  1584   00004B                     ___flmul@a:
  1585                           	callstack 0
  1586                           
  1587                           ; 4 bytes @ 0x4A
  1588   00004B                     	ds	4
  1589   00004F                     ??___flmul:
  1590                           
  1591                           ; 1 bytes @ 0x4E
  1592   00004F                     	ds	4
  1593   000053                     ___flmul@sign:
  1594                           	callstack 0
  1595                           
  1596                           ; 1 bytes @ 0x52
  1597   000053                     	ds	1
  1598   000054                     ___flmul@aexp:
  1599                           	callstack 0
  1600                           
  1601                           ; 1 bytes @ 0x53
  1602   000054                     	ds	1
  1603   000055                     ___flmul@grs:
  1604                           	callstack 0
  1605                           
  1606                           ; 4 bytes @ 0x54
  1607   000055                     	ds	4
  1608   000059                     ___flmul@bexp:
  1609                           	callstack 0
  1610                           
  1611                           ; 1 bytes @ 0x58
  1612   000059                     	ds	1
  1613   00005A                     ___flmul@prod:
  1614                           	callstack 0
  1615                           
  1616                           ; 4 bytes @ 0x59
  1617   00005A                     	ds	4
  1618   00005E                     ___flmul@temp:
  1619                           	callstack 0
  1620                           
  1621                           ; 2 bytes @ 0x5D
  1622   00005E                     	ds	2
  1623   000060                     
  1624                           ; 1 bytes @ 0x5F
  1625 ;;
  1626 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1627 ;;
  1628 ;; *************** function _main *****************
  1629 ;; Defined at:
  1630 ;;		line 94 in file "main.c"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;		None
  1633 ;; Auto vars:     Size  Location     Type
  1634 ;;  i               1   16[BANK1 ] unsigned char 
  1635 ;; Return value:  Size  Location     Type
  1636 ;;                  2  130[None  ] int 
  1637 ;; Registers used:
  1638 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1645 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1647 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1648 ;;Total ram usage:        1 bytes
  1649 ;; Hardware stack levels required when called: 10
  1650 ;; This function calls:
  1651 ;;		_ADC_get_conversion_blocking
  1652 ;;		_GPIO_pIN_WRITE_LOGIC
  1653 ;;		_MSSP_I2C_Master_call_slave
  1654 ;;		_ccp1_pwm_set_duty
  1655 ;;		_ccp2_pwm_set_duty
  1656 ;;		_convert_uint8_to_string
  1657 ;;		_ds1307_read_values
  1658 ;;		_intitialized_functions
  1659 ;;		_lcd_4bit_send_char_data_pos
  1660 ;;		_lcd_4bit_send_string_pos
  1661 ;;		_morot_stop
  1662 ;;		_morot_turn_left
  1663 ;;		_morot_turn_right
  1664 ;;		_tc74_read_value
  1665 ;;		_transfer_0x_d
  1666 ;;		_usart_ASYNC_write_byte_blocking
  1667 ;; This function is called by:
  1668 ;;		Startup code after reset
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           	psect	text0
  1673   00103A                     __ptext0:
  1674                           	callstack 0
  1675   00103A                     _main:
  1676                           	callstack 21
  1677   00103A                     
  1678                           ;main.c: 99:     intitialized_functions();
  1679   00103A  EC0F  F023         	call	_intitialized_functions	;wreg free
  1680   00103E                     
  1681                           ;main.c: 100:     ret = lcd_4bit_send_string_pos(&lcd_4bit,1,5,"author house ");
  1682   00103E  0EEC               	movlw	low _lcd_4bit
  1683   001040  6E26               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1684   001042  0E01               	movlw	1
  1685   001044  6E27               	movwf	lcd_4bit_send_string_pos@row^0,c
  1686   001046  0E05               	movlw	5
  1687   001048  6E28               	movwf	lcd_4bit_send_string_pos@column^0,c
  1688   00104A  0E20               	movlw	low STR_1
  1689   00104C  6E29               	movwf	lcd_4bit_send_string_pos@str^0,c
  1690   00104E  5029               	movf	lcd_4bit_send_string_pos@str^0,w,c
  1691   001050  A4D8               	btfss	status,2,c
  1692   001052  0E10               	movlw	high __smallconst
  1693   001054  6E2A               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1694   001056  ECA6  F027         	call	_lcd_4bit_send_string_pos	;wreg free
  1695   00105A  0100               	movlb	0	; () banked
  1696   00105C  6FFF               	movwf	_ret& (0+255),b
  1697   00105E                     
  1698                           ; BSR set to: 0
  1699                           ;main.c: 101:     ret = lcd_4bit_send_string_pos(&lcd_4bit,2,2,"data : ");
  1700   00105E  0EEC               	movlw	low _lcd_4bit
  1701   001060  6E26               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1702   001062  0E02               	movlw	2
  1703   001064  6E27               	movwf	lcd_4bit_send_string_pos@row^0,c
  1704   001066  0E02               	movlw	2
  1705   001068  6E28               	movwf	lcd_4bit_send_string_pos@column^0,c
  1706   00106A  0E2E               	movlw	low STR_2
  1707   00106C  6E29               	movwf	lcd_4bit_send_string_pos@str^0,c
  1708   00106E  5029               	movf	lcd_4bit_send_string_pos@str^0,w,c
  1709   001070  A4D8               	btfss	status,2,c
  1710   001072  0E10               	movlw	high __smallconst
  1711   001074  6E2A               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1712   001076  ECA6  F027         	call	_lcd_4bit_send_string_pos	;wreg free
  1713   00107A  0100               	movlb	0	; () banked
  1714   00107C  6FFF               	movwf	_ret& (0+255),b
  1715   00107E                     
  1716                           ; BSR set to: 0
  1717                           ;main.c: 102:     ret = lcd_4bit_send_string_pos(&lcd_4bit,3,2,"temperature : ");
  1718   00107E  0EEC               	movlw	low _lcd_4bit
  1719   001080  6E26               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1720   001082  0E03               	movlw	3
  1721   001084  6E27               	movwf	lcd_4bit_send_string_pos@row^0,c
  1722   001086  0E02               	movlw	2
  1723   001088  6E28               	movwf	lcd_4bit_send_string_pos@column^0,c
  1724   00108A  0E11               	movlw	low STR_3
  1725   00108C  6E29               	movwf	lcd_4bit_send_string_pos@str^0,c
  1726   00108E  5029               	movf	lcd_4bit_send_string_pos@str^0,w,c
  1727   001090  A4D8               	btfss	status,2,c
  1728   001092  0E10               	movlw	high __smallconst
  1729   001094  6E2A               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1730   001096  ECA6  F027         	call	_lcd_4bit_send_string_pos	;wreg free
  1731   00109A  0100               	movlb	0	; () banked
  1732   00109C  6FFF               	movwf	_ret& (0+255),b
  1733   00109E                     
  1734                           ; BSR set to: 0
  1735                           ;main.c: 106:     ret = usart_ASYNC_write_byte_blocking('E');
  1736   00109E  0E45               	movlw	69
  1737   0010A0  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  1738   0010A4  0100               	movlb	0	; () banked
  1739   0010A6  6FFF               	movwf	_ret& (0+255),b
  1740   0010A8                     
  1741                           ; BSR set to: 0
  1742                           ;main.c: 107:     ret = usart_ASYNC_write_byte_blocking('N');
  1743   0010A8  0E4E               	movlw	78
  1744   0010AA  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  1745   0010AE  0100               	movlb	0	; () banked
  1746   0010B0  6FFF               	movwf	_ret& (0+255),b
  1747   0010B2                     
  1748                           ; BSR set to: 0
  1749                           ;main.c: 108:     ret = usart_ASYNC_write_byte_blocking('T');
  1750   0010B2  0E54               	movlw	84
  1751   0010B4  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  1752   0010B8  0100               	movlb	0	; () banked
  1753   0010BA  6FFF               	movwf	_ret& (0+255),b
  1754   0010BC                     
  1755                           ; BSR set to: 0
  1756                           ;main.c: 109:     ret = usart_ASYNC_write_byte_blocking('E');
  1757   0010BC  0E45               	movlw	69
  1758   0010BE  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  1759   0010C2  0100               	movlb	0	; () banked
  1760   0010C4  6FFF               	movwf	_ret& (0+255),b
  1761   0010C6                     
  1762                           ; BSR set to: 0
  1763                           ;main.c: 110:     ret = usart_ASYNC_write_byte_blocking('R');
  1764   0010C6  0E52               	movlw	82
  1765   0010C8  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  1766   0010CC  0100               	movlb	0	; () banked
  1767   0010CE  6FFF               	movwf	_ret& (0+255),b
  1768   0010D0                     
  1769                           ; BSR set to: 0
  1770                           ;main.c: 111:     ret = usart_ASYNC_write_byte_blocking(' ');
  1771   0010D0  0E20               	movlw	32
  1772   0010D2  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  1773   0010D6  0100               	movlb	0	; () banked
  1774   0010D8  6FFF               	movwf	_ret& (0+255),b
  1775   0010DA                     
  1776                           ; BSR set to: 0
  1777                           ;main.c: 112:     ret = usart_ASYNC_write_byte_blocking('P');
  1778   0010DA  0E50               	movlw	80
  1779   0010DC  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  1780   0010E0  0100               	movlb	0	; () banked
  1781   0010E2  6FFF               	movwf	_ret& (0+255),b
  1782   0010E4                     
  1783                           ; BSR set to: 0
  1784                           ;main.c: 113:     ret = usart_ASYNC_write_byte_blocking('A');
  1785   0010E4  0E41               	movlw	65
  1786   0010E6  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  1787   0010EA  0100               	movlb	0	; () banked
  1788   0010EC  6FFF               	movwf	_ret& (0+255),b
  1789   0010EE                     
  1790                           ; BSR set to: 0
  1791                           ;main.c: 114:     ret = usart_ASYNC_write_byte_blocking('S');
  1792   0010EE  0E53               	movlw	83
  1793   0010F0  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  1794   0010F4  0100               	movlb	0	; () banked
  1795   0010F6  6FFF               	movwf	_ret& (0+255),b
  1796   0010F8                     
  1797                           ; BSR set to: 0
  1798                           ;main.c: 115:     ret = usart_ASYNC_write_byte_blocking('S');
  1799   0010F8  0E53               	movlw	83
  1800   0010FA  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  1801   0010FE  0100               	movlb	0	; () banked
  1802   001100  6FFF               	movwf	_ret& (0+255),b
  1803   001102                     
  1804                           ; BSR set to: 0
  1805                           ;main.c: 116:     ret = usart_ASYNC_write_byte_blocking('W');
  1806   001102  0E57               	movlw	87
  1807   001104  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  1808   001108  0100               	movlb	0	; () banked
  1809   00110A  6FFF               	movwf	_ret& (0+255),b
  1810   00110C                     
  1811                           ; BSR set to: 0
  1812                           ;main.c: 117:     ret = usart_ASYNC_write_byte_blocking('O');
  1813   00110C  0E4F               	movlw	79
  1814   00110E  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  1815   001112  0100               	movlb	0	; () banked
  1816   001114  6FFF               	movwf	_ret& (0+255),b
  1817   001116                     
  1818                           ; BSR set to: 0
  1819                           ;main.c: 118:     ret = usart_ASYNC_write_byte_blocking('R');
  1820   001116  0E52               	movlw	82
  1821   001118  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  1822   00111C  0100               	movlb	0	; () banked
  1823   00111E  6FFF               	movwf	_ret& (0+255),b
  1824   001120                     
  1825                           ; BSR set to: 0
  1826                           ;main.c: 119:     ret = usart_ASYNC_write_byte_blocking('D');
  1827   001120  0E44               	movlw	68
  1828   001122  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  1829   001126  0100               	movlb	0	; () banked
  1830   001128  6FFF               	movwf	_ret& (0+255),b
  1831   00112A                     
  1832                           ; BSR set to: 0
  1833                           ;main.c: 120:     ret = usart_ASYNC_write_byte_blocking(' ');
  1834   00112A  0E20               	movlw	32
  1835   00112C  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  1836   001130  0100               	movlb	0	; () banked
  1837   001132  6FFF               	movwf	_ret& (0+255),b
  1838   001134                     
  1839                           ; BSR set to: 0
  1840                           ;main.c: 122:     ds1307_read_values(&mssp_i2c,0xD0,ds13_data,&i2c_ack);
  1841   001134  0E31               	movlw	low _mssp_i2c
  1842   001136  6E1B               	movwf	ds1307_read_values@i2c_obj^0,c
  1843   001138  0E01               	movlw	high _mssp_i2c
  1844   00113A  6E1C               	movwf	(ds1307_read_values@i2c_obj+1)^0,c
  1845   00113C  0ED0               	movlw	208
  1846   00113E  6E1D               	movwf	ds1307_read_values@address_1^0,c
  1847   001140  0ED1               	movlw	low _ds13_data
  1848   001142  6E1E               	movwf	ds1307_read_values@return_data_array^0,c
  1849   001144  0E6B               	movlw	low _i2c_ack
  1850   001146  6E1F               	movwf	ds1307_read_values@_ack^0,c
  1851   001148  ECAC  F01D         	call	_ds1307_read_values	;wreg free
  1852   00114C                     
  1853                           ;main.c: 123:     MSSP_I2C_Master_call_slave(&mssp_i2c,0x60,ds13_data[0],&i2c_ack);
  1854   00114C  0E31               	movlw	low _mssp_i2c
  1855   00114E  6E14               	movwf	MSSP_I2C_Master_call_slave@i2c_obj^0,c
  1856   001150  0E01               	movlw	high _mssp_i2c
  1857   001152  6E15               	movwf	(MSSP_I2C_Master_call_slave@i2c_obj+1)^0,c
  1858   001154  0E60               	movlw	96
  1859   001156  6E16               	movwf	MSSP_I2C_Master_call_slave@address^0,c
  1860   001158  C0D1  F017         	movff	_ds13_data,MSSP_I2C_Master_call_slave@data	;volatile
  1861   00115C  0E6B               	movlw	low _i2c_ack
  1862   00115E  6E18               	movwf	MSSP_I2C_Master_call_slave@_ack^0,c
  1863   001160  EC42  F02D         	call	_MSSP_I2C_Master_call_slave	;wreg free
  1864   001164                     
  1865                           ;main.c: 124:     MSSP_I2C_Master_call_slave(&mssp_i2c,0x60,ds13_data[1],&i2c_ack);
  1866   001164  0E31               	movlw	low _mssp_i2c
  1867   001166  6E14               	movwf	MSSP_I2C_Master_call_slave@i2c_obj^0,c
  1868   001168  0E01               	movlw	high _mssp_i2c
  1869   00116A  6E15               	movwf	(MSSP_I2C_Master_call_slave@i2c_obj+1)^0,c
  1870   00116C  0E60               	movlw	96
  1871   00116E  6E16               	movwf	MSSP_I2C_Master_call_slave@address^0,c
  1872   001170  C0D2  F017         	movff	_ds13_data+1,MSSP_I2C_Master_call_slave@data	;volatile
  1873   001174  0E6B               	movlw	low _i2c_ack
  1874   001176  6E18               	movwf	MSSP_I2C_Master_call_slave@_ack^0,c
  1875   001178  EC42  F02D         	call	_MSSP_I2C_Master_call_slave	;wreg free
  1876   00117C                     
  1877                           ;main.c: 125:     MSSP_I2C_Master_call_slave(&mssp_i2c,0x60,ds13_data[2],&i2c_ack);
  1878   00117C  0E31               	movlw	low _mssp_i2c
  1879   00117E  6E14               	movwf	MSSP_I2C_Master_call_slave@i2c_obj^0,c
  1880   001180  0E01               	movlw	high _mssp_i2c
  1881   001182  6E15               	movwf	(MSSP_I2C_Master_call_slave@i2c_obj+1)^0,c
  1882   001184  0E60               	movlw	96
  1883   001186  6E16               	movwf	MSSP_I2C_Master_call_slave@address^0,c
  1884   001188  C0D3  F017         	movff	_ds13_data+2,MSSP_I2C_Master_call_slave@data	;volatile
  1885   00118C  0E6B               	movlw	low _i2c_ack
  1886   00118E  6E18               	movwf	MSSP_I2C_Master_call_slave@_ack^0,c
  1887   001190  EC42  F02D         	call	_MSSP_I2C_Master_call_slave	;wreg free
  1888   001194                     l12418:
  1889                           
  1890                           ;main.c: 127:     {;main.c: 129:         ret = ADC_get_conversion_blocking(&ADC_,ADC_CHA
      +                          NNEL_AN0,&ADC_VALUE);
  1891   001194  0E60               	movlw	low _ADC_
  1892   001196  6E18               	movwf	ADC_get_conversion_blocking@ADC_conf^0,c
  1893   001198  0E01               	movlw	high _ADC_
  1894   00119A  6E19               	movwf	(ADC_get_conversion_blocking@ADC_conf+1)^0,c
  1895   00119C  0E00               	movlw	0
  1896   00119E  6E1A               	movwf	ADC_get_conversion_blocking@ADC_CHANNAL_SELECT^0,c
  1897   0011A0  0ED7               	movlw	low _ADC_VALUE
  1898   0011A2  6E1B               	movwf	ADC_get_conversion_blocking@conversion_status^0,c
  1899   0011A4  EC8B  F029         	call	_ADC_get_conversion_blocking	;wreg free
  1900   0011A8  0100               	movlb	0	; () banked
  1901   0011AA  6FFF               	movwf	_ret& (0+255),b
  1902   0011AC                     
  1903                           ; BSR set to: 0
  1904                           ;main.c: 130:         if(ADC_VALUE > 512){
  1905   0011AC  05D7               	decf	_ADC_VALUE& (0+255),w,b
  1906   0011AE  0E02               	movlw	2
  1907   0011B0  59D8               	subwfb	(_ADC_VALUE+1)& (0+255),w,b
  1908   0011B2  A0D8               	btfss	status,0,c
  1909   0011B4  EFDE  F008         	goto	u13601
  1910   0011B8  EFE0  F008         	goto	u13600
  1911   0011BC                     u13601:
  1912   0011BC  EFEB  F008         	goto	l12424
  1913   0011C0                     u13600:
  1914   0011C0                     
  1915                           ; BSR set to: 0
  1916                           ;main.c: 131:             ret = GPIO_pIN_WRITE_LOGIC(&LED_ROOM_1,GPIO_HIGH);
  1917   0011C0  0E6F               	movlw	low _LED_ROOM_1
  1918   0011C2  6E10               	movwf	GPIO_pIN_WRITE_LOGIC@config_pin^0,c
  1919   0011C4  6A11               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  1920   0011C6  0E01               	movlw	1
  1921   0011C8  6E12               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  1922   0011CA  EC73  F01F         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  1923   0011CE  0100               	movlb	0	; () banked
  1924   0011D0  6FFF               	movwf	_ret& (0+255),b
  1925                           
  1926                           ;main.c: 132:         }else if(ADC_VALUE < 510){
  1927   0011D2  EFFF  F008         	goto	l12428
  1928   0011D6                     l12424:
  1929                           
  1930                           ; BSR set to: 0
  1931   0011D6  0EFE               	movlw	254
  1932   0011D8  5DD7               	subwf	_ADC_VALUE& (0+255),w,b
  1933   0011DA  0E01               	movlw	1
  1934   0011DC  59D8               	subwfb	(_ADC_VALUE+1)& (0+255),w,b
  1935   0011DE  B0D8               	btfsc	status,0,c
  1936   0011E0  EFF4  F008         	goto	u13611
  1937   0011E4  EFF6  F008         	goto	u13610
  1938   0011E8                     u13611:
  1939   0011E8  EFFF  F008         	goto	l12428
  1940   0011EC                     u13610:
  1941   0011EC                     
  1942                           ; BSR set to: 0
  1943                           ;main.c: 133:             ret = GPIO_pIN_WRITE_LOGIC(&LED_ROOM_1,GPIO_LOW);
  1944   0011EC  0E6F               	movlw	low _LED_ROOM_1
  1945   0011EE  6E10               	movwf	GPIO_pIN_WRITE_LOGIC@config_pin^0,c
  1946   0011F0  6A11               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  1947   0011F2  0E00               	movlw	0
  1948   0011F4  6E12               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  1949   0011F6  EC73  F01F         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  1950   0011FA  0100               	movlb	0	; () banked
  1951   0011FC  6FFF               	movwf	_ret& (0+255),b
  1952   0011FE                     l12428:
  1953                           
  1954                           ; BSR set to: 0
  1955                           ;main.c: 135:         ds1307_read_values(&mssp_i2c,0xD0,ds13_data,&i2c_ack);
  1956   0011FE  0E31               	movlw	low _mssp_i2c
  1957   001200  6E1B               	movwf	ds1307_read_values@i2c_obj^0,c
  1958   001202  0E01               	movlw	high _mssp_i2c
  1959   001204  6E1C               	movwf	(ds1307_read_values@i2c_obj+1)^0,c
  1960   001206  0ED0               	movlw	208
  1961   001208  6E1D               	movwf	ds1307_read_values@address_1^0,c
  1962   00120A  0ED1               	movlw	low _ds13_data
  1963   00120C  6E1E               	movwf	ds1307_read_values@return_data_array^0,c
  1964   00120E  0E6B               	movlw	low _i2c_ack
  1965   001210  6E1F               	movwf	ds1307_read_values@_ack^0,c
  1966   001212  ECAC  F01D         	call	_ds1307_read_values	;wreg free
  1967   001216                     
  1968                           ;main.c: 136:         for(uint8 i =0 ; i<6 ;i++){
  1969   001216  0E00               	movlw	0
  1970   001218  0101               	movlb	1	; () banked
  1971   00121A  6FAB               	movwf	main@i& (0+255),b
  1972   00121C                     l12432:
  1973                           
  1974                           ; BSR set to: 1
  1975   00121C  0E05               	movlw	5
  1976   00121E  65AB               	cpfsgt	main@i& (0+255),b
  1977   001220  EF14  F009         	goto	u13621
  1978   001224  EF16  F009         	goto	u13620
  1979   001228                     u13621:
  1980   001228  EF18  F009         	goto	l12436
  1981   00122C                     u13620:
  1982   00122C  EF28  F009         	goto	l12442
  1983   001230                     l12436:
  1984                           
  1985                           ; BSR set to: 1
  1986                           ;main.c: 137:             ds13_data_decimal[i]=transfer_0x_d(ds13_data[i]);
  1987   001230  51AB               	movf	main@i& (0+255),w,b
  1988   001232  0F60               	addlw	low _ds13_data_decimal
  1989   001234  6ED9               	movwf	fsr2l,c
  1990   001236  6ADA               	clrf	fsr2h,c
  1991   001238  51AB               	movf	main@i& (0+255),w,b
  1992   00123A  0FD1               	addlw	low _ds13_data
  1993   00123C  6EE1               	movwf	fsr1l,c
  1994   00123E  6AE2               	clrf	fsr1h,c
  1995   001240  50E7               	movf	indf1,w,c
  1996   001242  EC98  F02C         	call	_transfer_0x_d
  1997   001246  6EDF               	movwf	indf2,c
  1998   001248                     
  1999                           ;main.c: 138:         }
  2000   001248  0101               	movlb	1	; () banked
  2001   00124A  2BAB               	incf	main@i& (0+255),f,b
  2002   00124C  EF0E  F009         	goto	l12432
  2003   001250                     l12442:
  2004                           
  2005                           ; BSR set to: 1
  2006                           ;main.c: 139:         if((ds13_data_decimal[1] < 10) ){
  2007   001250  0E0A               	movlw	10
  2008   001252  6061               	cpfslt	(_ds13_data_decimal+1)^0,c	;volatile
  2009   001254  EF2E  F009         	goto	u13631
  2010   001258  EF30  F009         	goto	u13630
  2011   00125C                     u13631:
  2012   00125C  EF34  F009         	goto	l12446
  2013   001260                     u13630:
  2014   001260  EF9B  F009         	goto	l138
  2015   001264                     l12444:
  2016                           
  2017                           ; BSR set to: 1
  2018                           ;main.c: 141:         }else if((ds13_data_decimal[1] >= 10) && (ds13_data_decimal[1] < 2
      +                          0)){
  2019   001264  EF9B  F009         	goto	l138
  2020   001268                     l12446:
  2021                           
  2022                           ; BSR set to: 1
  2023   001268  0E09               	movlw	9
  2024   00126A  6461               	cpfsgt	(_ds13_data_decimal+1)^0,c	;volatile
  2025   00126C  EF3A  F009         	goto	u13641
  2026   001270  EF3C  F009         	goto	u13640
  2027   001274                     u13641:
  2028   001274  EF49  F009         	goto	l12452
  2029   001278                     u13640:
  2030   001278                     
  2031                           ; BSR set to: 1
  2032   001278  0E14               	movlw	20
  2033   00127A  6061               	cpfslt	(_ds13_data_decimal+1)^0,c	;volatile
  2034   00127C  EF42  F009         	goto	u13651
  2035   001280  EF44  F009         	goto	u13650
  2036   001284                     u13651:
  2037   001284  EF49  F009         	goto	l12452
  2038   001288                     u13650:
  2039   001288                     
  2040                           ; BSR set to: 1
  2041                           ;main.c: 142:             ds13_data_decimal[1] = ds13_data_decimal[1] - 6;
  2042   001288  5061               	movf	(_ds13_data_decimal+1)^0,w,c	;volatile
  2043   00128A  0FFA               	addlw	250
  2044   00128C  6E61               	movwf	(_ds13_data_decimal+1)^0,c	;volatile
  2045                           
  2046                           ;main.c: 143:         }else if((ds13_data_decimal[1] >= 20) && (ds13_data_decimal[1] < 3
      +                          0)){
  2047   00128E  EF9B  F009         	goto	l138
  2048   001292                     l12452:
  2049                           
  2050                           ; BSR set to: 1
  2051   001292  0E13               	movlw	19
  2052   001294  6461               	cpfsgt	(_ds13_data_decimal+1)^0,c	;volatile
  2053   001296  EF4F  F009         	goto	u13661
  2054   00129A  EF51  F009         	goto	u13660
  2055   00129E                     u13661:
  2056   00129E  EF5E  F009         	goto	l12458
  2057   0012A2                     u13660:
  2058   0012A2                     
  2059                           ; BSR set to: 1
  2060   0012A2  0E1E               	movlw	30
  2061   0012A4  6061               	cpfslt	(_ds13_data_decimal+1)^0,c	;volatile
  2062   0012A6  EF57  F009         	goto	u13671
  2063   0012AA  EF59  F009         	goto	u13670
  2064   0012AE                     u13671:
  2065   0012AE  EF5E  F009         	goto	l12458
  2066   0012B2                     u13670:
  2067   0012B2                     
  2068                           ; BSR set to: 1
  2069                           ;main.c: 144:             ds13_data_decimal[1] = ds13_data_decimal[1] - (6*2);
  2070   0012B2  5061               	movf	(_ds13_data_decimal+1)^0,w,c	;volatile
  2071   0012B4  0FF4               	addlw	244
  2072   0012B6  6E61               	movwf	(_ds13_data_decimal+1)^0,c	;volatile
  2073                           
  2074                           ;main.c: 145:         }else if((ds13_data_decimal[1] >= 30) && (ds13_data_decimal[1] < 4
      +                          0)){
  2075   0012B8  EF9B  F009         	goto	l138
  2076   0012BC                     l12458:
  2077                           
  2078                           ; BSR set to: 1
  2079   0012BC  0E1D               	movlw	29
  2080   0012BE  6461               	cpfsgt	(_ds13_data_decimal+1)^0,c	;volatile
  2081   0012C0  EF64  F009         	goto	u13681
  2082   0012C4  EF66  F009         	goto	u13680
  2083   0012C8                     u13681:
  2084   0012C8  EF73  F009         	goto	l12464
  2085   0012CC                     u13680:
  2086   0012CC                     
  2087                           ; BSR set to: 1
  2088   0012CC  0E28               	movlw	40
  2089   0012CE  6061               	cpfslt	(_ds13_data_decimal+1)^0,c	;volatile
  2090   0012D0  EF6C  F009         	goto	u13691
  2091   0012D4  EF6E  F009         	goto	u13690
  2092   0012D8                     u13691:
  2093   0012D8  EF73  F009         	goto	l12464
  2094   0012DC                     u13690:
  2095   0012DC                     
  2096                           ; BSR set to: 1
  2097                           ;main.c: 146:             ds13_data_decimal[1] = ds13_data_decimal[1] - (6*3);
  2098   0012DC  5061               	movf	(_ds13_data_decimal+1)^0,w,c	;volatile
  2099   0012DE  0FEE               	addlw	238
  2100   0012E0  6E61               	movwf	(_ds13_data_decimal+1)^0,c	;volatile
  2101                           
  2102                           ;main.c: 147:         }else if((ds13_data_decimal[1] >= 40) && (ds13_data_decimal[1] < 5
      +                          0)){
  2103   0012E2  EF9B  F009         	goto	l138
  2104   0012E6                     l12464:
  2105                           
  2106                           ; BSR set to: 1
  2107   0012E6  0E27               	movlw	39
  2108   0012E8  6461               	cpfsgt	(_ds13_data_decimal+1)^0,c	;volatile
  2109   0012EA  EF79  F009         	goto	u13701
  2110   0012EE  EF7B  F009         	goto	u13700
  2111   0012F2                     u13701:
  2112   0012F2  EF88  F009         	goto	l12470
  2113   0012F6                     u13700:
  2114   0012F6                     
  2115                           ; BSR set to: 1
  2116   0012F6  0E32               	movlw	50
  2117   0012F8  6061               	cpfslt	(_ds13_data_decimal+1)^0,c	;volatile
  2118   0012FA  EF81  F009         	goto	u13711
  2119   0012FE  EF83  F009         	goto	u13710
  2120   001302                     u13711:
  2121   001302  EF88  F009         	goto	l12470
  2122   001306                     u13710:
  2123   001306                     
  2124                           ; BSR set to: 1
  2125                           ;main.c: 148:             ds13_data_decimal[1] = ds13_data_decimal[1] - 6*4;
  2126   001306  5061               	movf	(_ds13_data_decimal+1)^0,w,c	;volatile
  2127   001308  0FE8               	addlw	232
  2128   00130A  6E61               	movwf	(_ds13_data_decimal+1)^0,c	;volatile
  2129                           
  2130                           ;main.c: 149:         }else if((ds13_data_decimal[1] >= 50) && (ds13_data_decimal[1] < 6
      +                          0)){
  2131   00130C  EF9B  F009         	goto	l138
  2132   001310                     l12470:
  2133                           
  2134                           ; BSR set to: 1
  2135   001310  0E31               	movlw	49
  2136   001312  6461               	cpfsgt	(_ds13_data_decimal+1)^0,c	;volatile
  2137   001314  EF8E  F009         	goto	u13721
  2138   001318  EF90  F009         	goto	u13720
  2139   00131C                     u13721:
  2140   00131C  EF32  F009         	goto	l12444
  2141   001320                     u13720:
  2142   001320                     
  2143                           ; BSR set to: 1
  2144   001320  0E3C               	movlw	60
  2145   001322  6061               	cpfslt	(_ds13_data_decimal+1)^0,c	;volatile
  2146   001324  EF96  F009         	goto	u13731
  2147   001328  EF98  F009         	goto	u13730
  2148   00132C                     u13731:
  2149   00132C  EF32  F009         	goto	l12444
  2150   001330                     u13730:
  2151   001330                     
  2152                           ; BSR set to: 1
  2153                           ;main.c: 150:             ds13_data_decimal[1] = ds13_data_decimal[1] - 6*5;
  2154   001330  5061               	movf	(_ds13_data_decimal+1)^0,w,c	;volatile
  2155   001332  0FE2               	addlw	226
  2156   001334  6E61               	movwf	(_ds13_data_decimal+1)^0,c	;volatile
  2157   001336                     l138:
  2158                           
  2159                           ; BSR set to: 1
  2160                           ;main.c: 154:         if((ds13_data_decimal[2] < 10) ){
  2161   001336  0E0A               	movlw	10
  2162   001338  6062               	cpfslt	(_ds13_data_decimal+2)^0,c	;volatile
  2163   00133A  EFA1  F009         	goto	u13741
  2164   00133E  EFA3  F009         	goto	u13740
  2165   001342                     u13741:
  2166   001342  EFA7  F009         	goto	l12478
  2167   001346                     u13740:
  2168   001346  EF0E  F00A         	goto	l149
  2169   00134A                     l12476:
  2170                           
  2171                           ; BSR set to: 1
  2172                           ;main.c: 156:         }else if((ds13_data_decimal[2] >= 10) && (ds13_data_decimal[2] < 2
      +                          0)){
  2173   00134A  EF0E  F00A         	goto	l149
  2174   00134E                     l12478:
  2175                           
  2176                           ; BSR set to: 1
  2177   00134E  0E09               	movlw	9
  2178   001350  6462               	cpfsgt	(_ds13_data_decimal+2)^0,c	;volatile
  2179   001352  EFAD  F009         	goto	u13751
  2180   001356  EFAF  F009         	goto	u13750
  2181   00135A                     u13751:
  2182   00135A  EFBC  F009         	goto	l12484
  2183   00135E                     u13750:
  2184   00135E                     
  2185                           ; BSR set to: 1
  2186   00135E  0E14               	movlw	20
  2187   001360  6062               	cpfslt	(_ds13_data_decimal+2)^0,c	;volatile
  2188   001362  EFB5  F009         	goto	u13761
  2189   001366  EFB7  F009         	goto	u13760
  2190   00136A                     u13761:
  2191   00136A  EFBC  F009         	goto	l12484
  2192   00136E                     u13760:
  2193   00136E                     
  2194                           ; BSR set to: 1
  2195                           ;main.c: 157:             ds13_data_decimal[2] = ds13_data_decimal[2] - 6;
  2196   00136E  5062               	movf	(_ds13_data_decimal+2)^0,w,c	;volatile
  2197   001370  0FFA               	addlw	250
  2198   001372  6E62               	movwf	(_ds13_data_decimal+2)^0,c	;volatile
  2199                           
  2200                           ;main.c: 158:         }else if((ds13_data_decimal[2] >= 20) && (ds13_data_decimal[2] < 3
      +                          0)){
  2201   001374  EF0E  F00A         	goto	l149
  2202   001378                     l12484:
  2203                           
  2204                           ; BSR set to: 1
  2205   001378  0E13               	movlw	19
  2206   00137A  6462               	cpfsgt	(_ds13_data_decimal+2)^0,c	;volatile
  2207   00137C  EFC2  F009         	goto	u13771
  2208   001380  EFC4  F009         	goto	u13770
  2209   001384                     u13771:
  2210   001384  EFD1  F009         	goto	l12490
  2211   001388                     u13770:
  2212   001388                     
  2213                           ; BSR set to: 1
  2214   001388  0E1E               	movlw	30
  2215   00138A  6062               	cpfslt	(_ds13_data_decimal+2)^0,c	;volatile
  2216   00138C  EFCA  F009         	goto	u13781
  2217   001390  EFCC  F009         	goto	u13780
  2218   001394                     u13781:
  2219   001394  EFD1  F009         	goto	l12490
  2220   001398                     u13780:
  2221   001398                     
  2222                           ; BSR set to: 1
  2223                           ;main.c: 159:             ds13_data_decimal[2] = ds13_data_decimal[2] - 6*2;
  2224   001398  5062               	movf	(_ds13_data_decimal+2)^0,w,c	;volatile
  2225   00139A  0FF4               	addlw	244
  2226   00139C  6E62               	movwf	(_ds13_data_decimal+2)^0,c	;volatile
  2227                           
  2228                           ;main.c: 160:         }else if((ds13_data_decimal[2] >= 30) && (ds13_data_decimal[2] < 4
      +                          0)){
  2229   00139E  EF0E  F00A         	goto	l149
  2230   0013A2                     l12490:
  2231                           
  2232                           ; BSR set to: 1
  2233   0013A2  0E1D               	movlw	29
  2234   0013A4  6462               	cpfsgt	(_ds13_data_decimal+2)^0,c	;volatile
  2235   0013A6  EFD7  F009         	goto	u13791
  2236   0013AA  EFD9  F009         	goto	u13790
  2237   0013AE                     u13791:
  2238   0013AE  EFE6  F009         	goto	l12496
  2239   0013B2                     u13790:
  2240   0013B2                     
  2241                           ; BSR set to: 1
  2242   0013B2  0E28               	movlw	40
  2243   0013B4  6062               	cpfslt	(_ds13_data_decimal+2)^0,c	;volatile
  2244   0013B6  EFDF  F009         	goto	u13801
  2245   0013BA  EFE1  F009         	goto	u13800
  2246   0013BE                     u13801:
  2247   0013BE  EFE6  F009         	goto	l12496
  2248   0013C2                     u13800:
  2249   0013C2                     
  2250                           ; BSR set to: 1
  2251                           ;main.c: 161:             ds13_data_decimal[2] = ds13_data_decimal[2] - 6*3;
  2252   0013C2  5062               	movf	(_ds13_data_decimal+2)^0,w,c	;volatile
  2253   0013C4  0FEE               	addlw	238
  2254   0013C6  6E62               	movwf	(_ds13_data_decimal+2)^0,c	;volatile
  2255                           
  2256                           ;main.c: 162:         }else if((ds13_data_decimal[2] >= 40) && (ds13_data_decimal[2] < 5
      +                          0)){
  2257   0013C8  EF0E  F00A         	goto	l149
  2258   0013CC                     l12496:
  2259                           
  2260                           ; BSR set to: 1
  2261   0013CC  0E27               	movlw	39
  2262   0013CE  6462               	cpfsgt	(_ds13_data_decimal+2)^0,c	;volatile
  2263   0013D0  EFEC  F009         	goto	u13811
  2264   0013D4  EFEE  F009         	goto	u13810
  2265   0013D8                     u13811:
  2266   0013D8  EFFB  F009         	goto	l12502
  2267   0013DC                     u13810:
  2268   0013DC                     
  2269                           ; BSR set to: 1
  2270   0013DC  0E32               	movlw	50
  2271   0013DE  6062               	cpfslt	(_ds13_data_decimal+2)^0,c	;volatile
  2272   0013E0  EFF4  F009         	goto	u13821
  2273   0013E4  EFF6  F009         	goto	u13820
  2274   0013E8                     u13821:
  2275   0013E8  EFFB  F009         	goto	l12502
  2276   0013EC                     u13820:
  2277   0013EC                     
  2278                           ; BSR set to: 1
  2279                           ;main.c: 163:             ds13_data_decimal[2] = ds13_data_decimal[2] - 6*4;
  2280   0013EC  5062               	movf	(_ds13_data_decimal+2)^0,w,c	;volatile
  2281   0013EE  0FE8               	addlw	232
  2282   0013F0  6E62               	movwf	(_ds13_data_decimal+2)^0,c	;volatile
  2283                           
  2284                           ;main.c: 164:         }else if((ds13_data_decimal[2] >= 50) && (ds13_data_decimal[2] < 6
      +                          0)){
  2285   0013F2  EF0E  F00A         	goto	l149
  2286   0013F6                     l12502:
  2287                           
  2288                           ; BSR set to: 1
  2289   0013F6  0E31               	movlw	49
  2290   0013F8  6462               	cpfsgt	(_ds13_data_decimal+2)^0,c	;volatile
  2291   0013FA  EF01  F00A         	goto	u13831
  2292   0013FE  EF03  F00A         	goto	u13830
  2293   001402                     u13831:
  2294   001402  EFA5  F009         	goto	l12476
  2295   001406                     u13830:
  2296   001406                     
  2297                           ; BSR set to: 1
  2298   001406  0E3C               	movlw	60
  2299   001408  6062               	cpfslt	(_ds13_data_decimal+2)^0,c	;volatile
  2300   00140A  EF09  F00A         	goto	u13841
  2301   00140E  EF0B  F00A         	goto	u13840
  2302   001412                     u13841:
  2303   001412  EFA5  F009         	goto	l12476
  2304   001416                     u13840:
  2305   001416                     
  2306                           ; BSR set to: 1
  2307                           ;main.c: 165:             ds13_data_decimal[2] = ds13_data_decimal[2] - 6*5;
  2308   001416  5062               	movf	(_ds13_data_decimal+2)^0,w,c	;volatile
  2309   001418  0FE2               	addlw	226
  2310   00141A  6E62               	movwf	(_ds13_data_decimal+2)^0,c	;volatile
  2311   00141C                     l149:
  2312                           
  2313                           ; BSR set to: 1
  2314                           ;main.c: 169:         if((ds13_data_decimal[3] < 10) ){
  2315   00141C  0E0A               	movlw	10
  2316   00141E  6063               	cpfslt	(_ds13_data_decimal+3)^0,c	;volatile
  2317   001420  EF14  F00A         	goto	u13851
  2318   001424  EF16  F00A         	goto	u13850
  2319   001428                     u13851:
  2320   001428  EF1A  F00A         	goto	l12510
  2321   00142C                     u13850:
  2322   00142C  EF81  F00A         	goto	l160
  2323   001430                     l12508:
  2324                           
  2325                           ; BSR set to: 1
  2326                           ;main.c: 171:         }else if((ds13_data_decimal[3] >= 10) && (ds13_data_decimal[3] < 2
      +                          0)){
  2327   001430  EF81  F00A         	goto	l160
  2328   001434                     l12510:
  2329                           
  2330                           ; BSR set to: 1
  2331   001434  0E09               	movlw	9
  2332   001436  6463               	cpfsgt	(_ds13_data_decimal+3)^0,c	;volatile
  2333   001438  EF20  F00A         	goto	u13861
  2334   00143C  EF22  F00A         	goto	u13860
  2335   001440                     u13861:
  2336   001440  EF2F  F00A         	goto	l12516
  2337   001444                     u13860:
  2338   001444                     
  2339                           ; BSR set to: 1
  2340   001444  0E14               	movlw	20
  2341   001446  6063               	cpfslt	(_ds13_data_decimal+3)^0,c	;volatile
  2342   001448  EF28  F00A         	goto	u13871
  2343   00144C  EF2A  F00A         	goto	u13870
  2344   001450                     u13871:
  2345   001450  EF2F  F00A         	goto	l12516
  2346   001454                     u13870:
  2347   001454                     
  2348                           ; BSR set to: 1
  2349                           ;main.c: 172:             ds13_data_decimal[3] = ds13_data_decimal[3] - 6;
  2350   001454  5063               	movf	(_ds13_data_decimal+3)^0,w,c	;volatile
  2351   001456  0FFA               	addlw	250
  2352   001458  6E63               	movwf	(_ds13_data_decimal+3)^0,c	;volatile
  2353                           
  2354                           ;main.c: 173:         }else if((ds13_data_decimal[3] >= 20) && (ds13_data_decimal[3] < 3
      +                          0)){
  2355   00145A  EF81  F00A         	goto	l160
  2356   00145E                     l12516:
  2357                           
  2358                           ; BSR set to: 1
  2359   00145E  0E13               	movlw	19
  2360   001460  6463               	cpfsgt	(_ds13_data_decimal+3)^0,c	;volatile
  2361   001462  EF35  F00A         	goto	u13881
  2362   001466  EF37  F00A         	goto	u13880
  2363   00146A                     u13881:
  2364   00146A  EF44  F00A         	goto	l12522
  2365   00146E                     u13880:
  2366   00146E                     
  2367                           ; BSR set to: 1
  2368   00146E  0E1E               	movlw	30
  2369   001470  6063               	cpfslt	(_ds13_data_decimal+3)^0,c	;volatile
  2370   001472  EF3D  F00A         	goto	u13891
  2371   001476  EF3F  F00A         	goto	u13890
  2372   00147A                     u13891:
  2373   00147A  EF44  F00A         	goto	l12522
  2374   00147E                     u13890:
  2375   00147E                     
  2376                           ; BSR set to: 1
  2377                           ;main.c: 174:             ds13_data_decimal[3] = ds13_data_decimal[3] - 12;
  2378   00147E  5063               	movf	(_ds13_data_decimal+3)^0,w,c	;volatile
  2379   001480  0FF4               	addlw	244
  2380   001482  6E63               	movwf	(_ds13_data_decimal+3)^0,c	;volatile
  2381                           
  2382                           ;main.c: 175:         }else if((ds13_data_decimal[3] >= 30) && (ds13_data_decimal[3] < 4
      +                          0)){
  2383   001484  EF81  F00A         	goto	l160
  2384   001488                     l12522:
  2385                           
  2386                           ; BSR set to: 1
  2387   001488  0E1D               	movlw	29
  2388   00148A  6463               	cpfsgt	(_ds13_data_decimal+3)^0,c	;volatile
  2389   00148C  EF4A  F00A         	goto	u13901
  2390   001490  EF4C  F00A         	goto	u13900
  2391   001494                     u13901:
  2392   001494  EF59  F00A         	goto	l12528
  2393   001498                     u13900:
  2394   001498                     
  2395                           ; BSR set to: 1
  2396   001498  0E28               	movlw	40
  2397   00149A  6063               	cpfslt	(_ds13_data_decimal+3)^0,c	;volatile
  2398   00149C  EF52  F00A         	goto	u13911
  2399   0014A0  EF54  F00A         	goto	u13910
  2400   0014A4                     u13911:
  2401   0014A4  EF59  F00A         	goto	l12528
  2402   0014A8                     u13910:
  2403   0014A8                     
  2404                           ; BSR set to: 1
  2405                           ;main.c: 176:             ds13_data_decimal[3] = ds13_data_decimal[3] - 18;
  2406   0014A8  5063               	movf	(_ds13_data_decimal+3)^0,w,c	;volatile
  2407   0014AA  0FEE               	addlw	238
  2408   0014AC  6E63               	movwf	(_ds13_data_decimal+3)^0,c	;volatile
  2409                           
  2410                           ;main.c: 177:         }else if((ds13_data_decimal[3] >= 40) && (ds13_data_decimal[3] < 5
      +                          0)){
  2411   0014AE  EF81  F00A         	goto	l160
  2412   0014B2                     l12528:
  2413                           
  2414                           ; BSR set to: 1
  2415   0014B2  0E27               	movlw	39
  2416   0014B4  6463               	cpfsgt	(_ds13_data_decimal+3)^0,c	;volatile
  2417   0014B6  EF5F  F00A         	goto	u13921
  2418   0014BA  EF61  F00A         	goto	u13920
  2419   0014BE                     u13921:
  2420   0014BE  EF6E  F00A         	goto	l12534
  2421   0014C2                     u13920:
  2422   0014C2                     
  2423                           ; BSR set to: 1
  2424   0014C2  0E32               	movlw	50
  2425   0014C4  6063               	cpfslt	(_ds13_data_decimal+3)^0,c	;volatile
  2426   0014C6  EF67  F00A         	goto	u13931
  2427   0014CA  EF69  F00A         	goto	u13930
  2428   0014CE                     u13931:
  2429   0014CE  EF6E  F00A         	goto	l12534
  2430   0014D2                     u13930:
  2431   0014D2                     
  2432                           ; BSR set to: 1
  2433                           ;main.c: 178:             ds13_data_decimal[3] = ds13_data_decimal[3] - 24;
  2434   0014D2  5063               	movf	(_ds13_data_decimal+3)^0,w,c	;volatile
  2435   0014D4  0FE8               	addlw	232
  2436   0014D6  6E63               	movwf	(_ds13_data_decimal+3)^0,c	;volatile
  2437                           
  2438                           ;main.c: 179:         }else if((ds13_data_decimal[3] >= 50) && (ds13_data_decimal[3] < 6
      +                          0)){
  2439   0014D8  EF81  F00A         	goto	l160
  2440   0014DC                     l12534:
  2441                           
  2442                           ; BSR set to: 1
  2443   0014DC  0E31               	movlw	49
  2444   0014DE  6463               	cpfsgt	(_ds13_data_decimal+3)^0,c	;volatile
  2445   0014E0  EF74  F00A         	goto	u13941
  2446   0014E4  EF76  F00A         	goto	u13940
  2447   0014E8                     u13941:
  2448   0014E8  EF18  F00A         	goto	l12508
  2449   0014EC                     u13940:
  2450   0014EC                     
  2451                           ; BSR set to: 1
  2452   0014EC  0E3C               	movlw	60
  2453   0014EE  6063               	cpfslt	(_ds13_data_decimal+3)^0,c	;volatile
  2454   0014F0  EF7C  F00A         	goto	u13951
  2455   0014F4  EF7E  F00A         	goto	u13950
  2456   0014F8                     u13951:
  2457   0014F8  EF18  F00A         	goto	l12508
  2458   0014FC                     u13950:
  2459   0014FC                     
  2460                           ; BSR set to: 1
  2461                           ;main.c: 180:             ds13_data_decimal[3] = ds13_data_decimal[3] - 30;
  2462   0014FC  5063               	movf	(_ds13_data_decimal+3)^0,w,c	;volatile
  2463   0014FE  0FE2               	addlw	226
  2464   001500  6E63               	movwf	(_ds13_data_decimal+3)^0,c	;volatile
  2465   001502                     l160:
  2466                           
  2467                           ; BSR set to: 1
  2468                           ;main.c: 184:         if((ds13_data_decimal[4] < 10) ){
  2469   001502  0E0A               	movlw	10
  2470   001504  6064               	cpfslt	(_ds13_data_decimal+4)^0,c	;volatile
  2471   001506  EF87  F00A         	goto	u13961
  2472   00150A  EF89  F00A         	goto	u13960
  2473   00150E                     u13961:
  2474   00150E  EF8D  F00A         	goto	l12542
  2475   001512                     u13960:
  2476   001512  EFF4  F00A         	goto	l171
  2477   001516                     l12540:
  2478                           
  2479                           ; BSR set to: 1
  2480                           ;main.c: 186:         }else if((ds13_data_decimal[4] >= 10) && (ds13_data_decimal[4] < 2
      +                          0)){
  2481   001516  EFF4  F00A         	goto	l171
  2482   00151A                     l12542:
  2483                           
  2484                           ; BSR set to: 1
  2485   00151A  0E09               	movlw	9
  2486   00151C  6464               	cpfsgt	(_ds13_data_decimal+4)^0,c	;volatile
  2487   00151E  EF93  F00A         	goto	u13971
  2488   001522  EF95  F00A         	goto	u13970
  2489   001526                     u13971:
  2490   001526  EFA2  F00A         	goto	l12548
  2491   00152A                     u13970:
  2492   00152A                     
  2493                           ; BSR set to: 1
  2494   00152A  0E14               	movlw	20
  2495   00152C  6064               	cpfslt	(_ds13_data_decimal+4)^0,c	;volatile
  2496   00152E  EF9B  F00A         	goto	u13981
  2497   001532  EF9D  F00A         	goto	u13980
  2498   001536                     u13981:
  2499   001536  EFA2  F00A         	goto	l12548
  2500   00153A                     u13980:
  2501   00153A                     
  2502                           ; BSR set to: 1
  2503                           ;main.c: 187:             ds13_data_decimal[4] = ds13_data_decimal[4] - 6;
  2504   00153A  5064               	movf	(_ds13_data_decimal+4)^0,w,c	;volatile
  2505   00153C  0FFA               	addlw	250
  2506   00153E  6E64               	movwf	(_ds13_data_decimal+4)^0,c	;volatile
  2507                           
  2508                           ;main.c: 188:         }else if((ds13_data_decimal[4] >= 20) && (ds13_data_decimal[4] < 3
      +                          0)){
  2509   001540  EFF4  F00A         	goto	l171
  2510   001544                     l12548:
  2511                           
  2512                           ; BSR set to: 1
  2513   001544  0E13               	movlw	19
  2514   001546  6464               	cpfsgt	(_ds13_data_decimal+4)^0,c	;volatile
  2515   001548  EFA8  F00A         	goto	u13991
  2516   00154C  EFAA  F00A         	goto	u13990
  2517   001550                     u13991:
  2518   001550  EFB7  F00A         	goto	l12554
  2519   001554                     u13990:
  2520   001554                     
  2521                           ; BSR set to: 1
  2522   001554  0E1E               	movlw	30
  2523   001556  6064               	cpfslt	(_ds13_data_decimal+4)^0,c	;volatile
  2524   001558  EFB0  F00A         	goto	u14001
  2525   00155C  EFB2  F00A         	goto	u14000
  2526   001560                     u14001:
  2527   001560  EFB7  F00A         	goto	l12554
  2528   001564                     u14000:
  2529   001564                     
  2530                           ; BSR set to: 1
  2531                           ;main.c: 189:             ds13_data_decimal[4] = ds13_data_decimal[4] - 12;
  2532   001564  5064               	movf	(_ds13_data_decimal+4)^0,w,c	;volatile
  2533   001566  0FF4               	addlw	244
  2534   001568  6E64               	movwf	(_ds13_data_decimal+4)^0,c	;volatile
  2535                           
  2536                           ;main.c: 190:         }else if((ds13_data_decimal[4] >= 30) && (ds13_data_decimal[4] < 4
      +                          0)){
  2537   00156A  EFF4  F00A         	goto	l171
  2538   00156E                     l12554:
  2539                           
  2540                           ; BSR set to: 1
  2541   00156E  0E1D               	movlw	29
  2542   001570  6464               	cpfsgt	(_ds13_data_decimal+4)^0,c	;volatile
  2543   001572  EFBD  F00A         	goto	u14011
  2544   001576  EFBF  F00A         	goto	u14010
  2545   00157A                     u14011:
  2546   00157A  EFCC  F00A         	goto	l12560
  2547   00157E                     u14010:
  2548   00157E                     
  2549                           ; BSR set to: 1
  2550   00157E  0E28               	movlw	40
  2551   001580  6064               	cpfslt	(_ds13_data_decimal+4)^0,c	;volatile
  2552   001582  EFC5  F00A         	goto	u14021
  2553   001586  EFC7  F00A         	goto	u14020
  2554   00158A                     u14021:
  2555   00158A  EFCC  F00A         	goto	l12560
  2556   00158E                     u14020:
  2557   00158E                     
  2558                           ; BSR set to: 1
  2559                           ;main.c: 191:             ds13_data_decimal[4] = ds13_data_decimal[4] - 18;
  2560   00158E  5064               	movf	(_ds13_data_decimal+4)^0,w,c	;volatile
  2561   001590  0FEE               	addlw	238
  2562   001592  6E64               	movwf	(_ds13_data_decimal+4)^0,c	;volatile
  2563                           
  2564                           ;main.c: 192:         }else if((ds13_data_decimal[4] >= 40) && (ds13_data_decimal[4] < 5
      +                          0)){
  2565   001594  EFF4  F00A         	goto	l171
  2566   001598                     l12560:
  2567                           
  2568                           ; BSR set to: 1
  2569   001598  0E27               	movlw	39
  2570   00159A  6464               	cpfsgt	(_ds13_data_decimal+4)^0,c	;volatile
  2571   00159C  EFD2  F00A         	goto	u14031
  2572   0015A0  EFD4  F00A         	goto	u14030
  2573   0015A4                     u14031:
  2574   0015A4  EFE1  F00A         	goto	l12566
  2575   0015A8                     u14030:
  2576   0015A8                     
  2577                           ; BSR set to: 1
  2578   0015A8  0E32               	movlw	50
  2579   0015AA  6064               	cpfslt	(_ds13_data_decimal+4)^0,c	;volatile
  2580   0015AC  EFDA  F00A         	goto	u14041
  2581   0015B0  EFDC  F00A         	goto	u14040
  2582   0015B4                     u14041:
  2583   0015B4  EFE1  F00A         	goto	l12566
  2584   0015B8                     u14040:
  2585   0015B8                     
  2586                           ; BSR set to: 1
  2587                           ;main.c: 193:             ds13_data_decimal[4] = ds13_data_decimal[4] - 24;
  2588   0015B8  5064               	movf	(_ds13_data_decimal+4)^0,w,c	;volatile
  2589   0015BA  0FE8               	addlw	232
  2590   0015BC  6E64               	movwf	(_ds13_data_decimal+4)^0,c	;volatile
  2591                           
  2592                           ;main.c: 194:         }else if((ds13_data_decimal[4] >= 50) && (ds13_data_decimal[4] < 6
      +                          0)){
  2593   0015BE  EFF4  F00A         	goto	l171
  2594   0015C2                     l12566:
  2595                           
  2596                           ; BSR set to: 1
  2597   0015C2  0E31               	movlw	49
  2598   0015C4  6464               	cpfsgt	(_ds13_data_decimal+4)^0,c	;volatile
  2599   0015C6  EFE7  F00A         	goto	u14051
  2600   0015CA  EFE9  F00A         	goto	u14050
  2601   0015CE                     u14051:
  2602   0015CE  EF8B  F00A         	goto	l12540
  2603   0015D2                     u14050:
  2604   0015D2                     
  2605                           ; BSR set to: 1
  2606   0015D2  0E3C               	movlw	60
  2607   0015D4  6064               	cpfslt	(_ds13_data_decimal+4)^0,c	;volatile
  2608   0015D6  EFEF  F00A         	goto	u14061
  2609   0015DA  EFF1  F00A         	goto	u14060
  2610   0015DE                     u14061:
  2611   0015DE  EF8B  F00A         	goto	l12540
  2612   0015E2                     u14060:
  2613   0015E2                     
  2614                           ; BSR set to: 1
  2615                           ;main.c: 195:             ds13_data_decimal[4] = ds13_data_decimal[4] - 30;
  2616   0015E2  5064               	movf	(_ds13_data_decimal+4)^0,w,c	;volatile
  2617   0015E4  0FE2               	addlw	226
  2618   0015E6  6E64               	movwf	(_ds13_data_decimal+4)^0,c	;volatile
  2619   0015E8                     l171:
  2620                           
  2621                           ; BSR set to: 1
  2622                           ;main.c: 198:          if((ds13_data_decimal[0] < 10) ){
  2623   0015E8  0E0A               	movlw	10
  2624   0015EA  6060               	cpfslt	_ds13_data_decimal^0,c	;volatile
  2625   0015EC  EFFA  F00A         	goto	u14071
  2626   0015F0  EFFC  F00A         	goto	u14070
  2627   0015F4                     u14071:
  2628   0015F4  EF00  F00B         	goto	l12574
  2629   0015F8                     u14070:
  2630   0015F8  EF67  F00B         	goto	l182
  2631   0015FC                     l12572:
  2632                           
  2633                           ;main.c: 200:         }else if((ds13_data_decimal[0] >= 10) && (ds13_data_decimal[0] < 2
      +                          0)){
  2634   0015FC  EF67  F00B         	goto	l182
  2635   001600                     l12574:
  2636                           
  2637                           ; BSR set to: 1
  2638   001600  0E09               	movlw	9
  2639   001602  6460               	cpfsgt	_ds13_data_decimal^0,c	;volatile
  2640   001604  EF06  F00B         	goto	u14081
  2641   001608  EF08  F00B         	goto	u14080
  2642   00160C                     u14081:
  2643   00160C  EF15  F00B         	goto	l12580
  2644   001610                     u14080:
  2645   001610                     
  2646                           ; BSR set to: 1
  2647   001610  0E14               	movlw	20
  2648   001612  6060               	cpfslt	_ds13_data_decimal^0,c	;volatile
  2649   001614  EF0E  F00B         	goto	u14091
  2650   001618  EF10  F00B         	goto	u14090
  2651   00161C                     u14091:
  2652   00161C  EF15  F00B         	goto	l12580
  2653   001620                     u14090:
  2654   001620                     
  2655                           ; BSR set to: 1
  2656                           ;main.c: 201:             ds13_data_decimal[0] = ds13_data_decimal[0] - 6;
  2657   001620  5060               	movf	_ds13_data_decimal^0,w,c	;volatile
  2658   001622  0FFA               	addlw	250
  2659   001624  6E60               	movwf	_ds13_data_decimal^0,c	;volatile
  2660                           
  2661                           ;main.c: 202:         }else if((ds13_data_decimal[0] >= 20) && (ds13_data_decimal[0] < 3
      +                          0)){
  2662   001626  EF67  F00B         	goto	l182
  2663   00162A                     l12580:
  2664                           
  2665                           ; BSR set to: 1
  2666   00162A  0E13               	movlw	19
  2667   00162C  6460               	cpfsgt	_ds13_data_decimal^0,c	;volatile
  2668   00162E  EF1B  F00B         	goto	u14101
  2669   001632  EF1D  F00B         	goto	u14100
  2670   001636                     u14101:
  2671   001636  EF2A  F00B         	goto	l12586
  2672   00163A                     u14100:
  2673   00163A                     
  2674                           ; BSR set to: 1
  2675   00163A  0E1E               	movlw	30
  2676   00163C  6060               	cpfslt	_ds13_data_decimal^0,c	;volatile
  2677   00163E  EF23  F00B         	goto	u14111
  2678   001642  EF25  F00B         	goto	u14110
  2679   001646                     u14111:
  2680   001646  EF2A  F00B         	goto	l12586
  2681   00164A                     u14110:
  2682   00164A                     
  2683                           ; BSR set to: 1
  2684                           ;main.c: 203:             ds13_data_decimal[0] = ds13_data_decimal[0] - 12;
  2685   00164A  5060               	movf	_ds13_data_decimal^0,w,c	;volatile
  2686   00164C  0FF4               	addlw	244
  2687   00164E  6E60               	movwf	_ds13_data_decimal^0,c	;volatile
  2688                           
  2689                           ;main.c: 204:         }else if((ds13_data_decimal[0] >= 30) && (ds13_data_decimal[0] < 4
      +                          0)){
  2690   001650  EF67  F00B         	goto	l182
  2691   001654                     l12586:
  2692                           
  2693                           ; BSR set to: 1
  2694   001654  0E1D               	movlw	29
  2695   001656  6460               	cpfsgt	_ds13_data_decimal^0,c	;volatile
  2696   001658  EF30  F00B         	goto	u14121
  2697   00165C  EF32  F00B         	goto	u14120
  2698   001660                     u14121:
  2699   001660  EF3F  F00B         	goto	l12592
  2700   001664                     u14120:
  2701   001664                     
  2702                           ; BSR set to: 1
  2703   001664  0E28               	movlw	40
  2704   001666  6060               	cpfslt	_ds13_data_decimal^0,c	;volatile
  2705   001668  EF38  F00B         	goto	u14131
  2706   00166C  EF3A  F00B         	goto	u14130
  2707   001670                     u14131:
  2708   001670  EF3F  F00B         	goto	l12592
  2709   001674                     u14130:
  2710   001674                     
  2711                           ; BSR set to: 1
  2712                           ;main.c: 205:             ds13_data_decimal[0] = ds13_data_decimal[0] - 18;
  2713   001674  5060               	movf	_ds13_data_decimal^0,w,c	;volatile
  2714   001676  0FEE               	addlw	238
  2715   001678  6E60               	movwf	_ds13_data_decimal^0,c	;volatile
  2716                           
  2717                           ;main.c: 206:         }else if((ds13_data_decimal[0] >= 40) && (ds13_data_decimal[0] < 5
      +                          0)){
  2718   00167A  EF67  F00B         	goto	l182
  2719   00167E                     l12592:
  2720                           
  2721                           ; BSR set to: 1
  2722   00167E  0E27               	movlw	39
  2723   001680  6460               	cpfsgt	_ds13_data_decimal^0,c	;volatile
  2724   001682  EF45  F00B         	goto	u14141
  2725   001686  EF47  F00B         	goto	u14140
  2726   00168A                     u14141:
  2727   00168A  EF54  F00B         	goto	l12598
  2728   00168E                     u14140:
  2729   00168E                     
  2730                           ; BSR set to: 1
  2731   00168E  0E32               	movlw	50
  2732   001690  6060               	cpfslt	_ds13_data_decimal^0,c	;volatile
  2733   001692  EF4D  F00B         	goto	u14151
  2734   001696  EF4F  F00B         	goto	u14150
  2735   00169A                     u14151:
  2736   00169A  EF54  F00B         	goto	l12598
  2737   00169E                     u14150:
  2738   00169E                     
  2739                           ; BSR set to: 1
  2740                           ;main.c: 207:             ds13_data_decimal[0] = ds13_data_decimal[0] - 24;
  2741   00169E  5060               	movf	_ds13_data_decimal^0,w,c	;volatile
  2742   0016A0  0FE8               	addlw	232
  2743   0016A2  6E60               	movwf	_ds13_data_decimal^0,c	;volatile
  2744                           
  2745                           ;main.c: 208:         }else if((ds13_data_decimal[0] >= 50) && (ds13_data_decimal[0] < 6
      +                          0)){
  2746   0016A4  EF67  F00B         	goto	l182
  2747   0016A8                     l12598:
  2748                           
  2749                           ; BSR set to: 1
  2750   0016A8  0E31               	movlw	49
  2751   0016AA  6460               	cpfsgt	_ds13_data_decimal^0,c	;volatile
  2752   0016AC  EF5A  F00B         	goto	u14161
  2753   0016B0  EF5C  F00B         	goto	u14160
  2754   0016B4                     u14161:
  2755   0016B4  EFFE  F00A         	goto	l12572
  2756   0016B8                     u14160:
  2757   0016B8                     
  2758                           ; BSR set to: 1
  2759   0016B8  0E3C               	movlw	60
  2760   0016BA  6060               	cpfslt	_ds13_data_decimal^0,c	;volatile
  2761   0016BC  EF62  F00B         	goto	u14171
  2762   0016C0  EF64  F00B         	goto	u14170
  2763   0016C4                     u14171:
  2764   0016C4  EFFE  F00A         	goto	l12572
  2765   0016C8                     u14170:
  2766   0016C8                     
  2767                           ; BSR set to: 1
  2768                           ;main.c: 209:             ds13_data_decimal[0] = ds13_data_decimal[0] - 30;
  2769   0016C8  5060               	movf	_ds13_data_decimal^0,w,c	;volatile
  2770   0016CA  0FE2               	addlw	226
  2771   0016CC  6E60               	movwf	_ds13_data_decimal^0,c	;volatile
  2772   0016CE                     l182:
  2773                           
  2774                           ;main.c: 212:          if((ds13_data_decimal[5] < 10) ){
  2775   0016CE  0E0A               	movlw	10
  2776   0016D0  6065               	cpfslt	(_ds13_data_decimal+5)^0,c	;volatile
  2777   0016D2  EF6D  F00B         	goto	u14181
  2778   0016D6  EF6F  F00B         	goto	u14180
  2779   0016DA                     u14181:
  2780   0016DA  EF73  F00B         	goto	l12606
  2781   0016DE                     u14180:
  2782   0016DE  EFDA  F00B         	goto	l12636
  2783   0016E2                     l12604:
  2784                           
  2785                           ;main.c: 214:         }else if((ds13_data_decimal[5] >= 10) && (ds13_data_decimal[5] < 2
      +                          0)){
  2786   0016E2  EFDA  F00B         	goto	l12636
  2787   0016E6                     l12606:
  2788   0016E6  0E09               	movlw	9
  2789   0016E8  6465               	cpfsgt	(_ds13_data_decimal+5)^0,c	;volatile
  2790   0016EA  EF79  F00B         	goto	u14191
  2791   0016EE  EF7B  F00B         	goto	u14190
  2792   0016F2                     u14191:
  2793   0016F2  EF88  F00B         	goto	l12612
  2794   0016F6                     u14190:
  2795   0016F6  0E14               	movlw	20
  2796   0016F8  6065               	cpfslt	(_ds13_data_decimal+5)^0,c	;volatile
  2797   0016FA  EF81  F00B         	goto	u14201
  2798   0016FE  EF83  F00B         	goto	u14200
  2799   001702                     u14201:
  2800   001702  EF88  F00B         	goto	l12612
  2801   001706                     u14200:
  2802   001706                     
  2803                           ;main.c: 215:             ds13_data_decimal[5] = ds13_data_decimal[5] - 6;
  2804   001706  5065               	movf	(_ds13_data_decimal+5)^0,w,c	;volatile
  2805   001708  0FFA               	addlw	250
  2806   00170A  6E65               	movwf	(_ds13_data_decimal+5)^0,c	;volatile
  2807                           
  2808                           ;main.c: 216:         }else if((ds13_data_decimal[5] >= 20) && (ds13_data_decimal[5] < 3
      +                          0)){
  2809   00170C  EFDA  F00B         	goto	l12636
  2810   001710                     l12612:
  2811   001710  0E13               	movlw	19
  2812   001712  6465               	cpfsgt	(_ds13_data_decimal+5)^0,c	;volatile
  2813   001714  EF8E  F00B         	goto	u14211
  2814   001718  EF90  F00B         	goto	u14210
  2815   00171C                     u14211:
  2816   00171C  EF9D  F00B         	goto	l12618
  2817   001720                     u14210:
  2818   001720  0E1E               	movlw	30
  2819   001722  6065               	cpfslt	(_ds13_data_decimal+5)^0,c	;volatile
  2820   001724  EF96  F00B         	goto	u14221
  2821   001728  EF98  F00B         	goto	u14220
  2822   00172C                     u14221:
  2823   00172C  EF9D  F00B         	goto	l12618
  2824   001730                     u14220:
  2825   001730                     
  2826                           ;main.c: 217:             ds13_data_decimal[5] = ds13_data_decimal[5] - 12;
  2827   001730  5065               	movf	(_ds13_data_decimal+5)^0,w,c	;volatile
  2828   001732  0FF4               	addlw	244
  2829   001734  6E65               	movwf	(_ds13_data_decimal+5)^0,c	;volatile
  2830                           
  2831                           ;main.c: 218:         }else if((ds13_data_decimal[5] >= 30) && (ds13_data_decimal[5] < 4
      +                          0)){
  2832   001736  EFDA  F00B         	goto	l12636
  2833   00173A                     l12618:
  2834   00173A  0E1D               	movlw	29
  2835   00173C  6465               	cpfsgt	(_ds13_data_decimal+5)^0,c	;volatile
  2836   00173E  EFA3  F00B         	goto	u14231
  2837   001742  EFA5  F00B         	goto	u14230
  2838   001746                     u14231:
  2839   001746  EFB2  F00B         	goto	l12624
  2840   00174A                     u14230:
  2841   00174A  0E28               	movlw	40
  2842   00174C  6065               	cpfslt	(_ds13_data_decimal+5)^0,c	;volatile
  2843   00174E  EFAB  F00B         	goto	u14241
  2844   001752  EFAD  F00B         	goto	u14240
  2845   001756                     u14241:
  2846   001756  EFB2  F00B         	goto	l12624
  2847   00175A                     u14240:
  2848   00175A                     
  2849                           ;main.c: 219:             ds13_data_decimal[5] = ds13_data_decimal[5] - 18-48;
  2850   00175A  5065               	movf	(_ds13_data_decimal+5)^0,w,c	;volatile
  2851   00175C  0FBE               	addlw	190
  2852   00175E  6E65               	movwf	(_ds13_data_decimal+5)^0,c	;volatile
  2853                           
  2854                           ;main.c: 220:         }else if((ds13_data_decimal[5] >= 40) && (ds13_data_decimal[5] < 5
      +                          0)){
  2855   001760  EFDA  F00B         	goto	l12636
  2856   001764                     l12624:
  2857   001764  0E27               	movlw	39
  2858   001766  6465               	cpfsgt	(_ds13_data_decimal+5)^0,c	;volatile
  2859   001768  EFB8  F00B         	goto	u14251
  2860   00176C  EFBA  F00B         	goto	u14250
  2861   001770                     u14251:
  2862   001770  EFC7  F00B         	goto	l12630
  2863   001774                     u14250:
  2864   001774  0E32               	movlw	50
  2865   001776  6065               	cpfslt	(_ds13_data_decimal+5)^0,c	;volatile
  2866   001778  EFC0  F00B         	goto	u14261
  2867   00177C  EFC2  F00B         	goto	u14260
  2868   001780                     u14261:
  2869   001780  EFC7  F00B         	goto	l12630
  2870   001784                     u14260:
  2871   001784                     
  2872                           ;main.c: 221:             ds13_data_decimal[5] = ds13_data_decimal[5] - 24;
  2873   001784  5065               	movf	(_ds13_data_decimal+5)^0,w,c	;volatile
  2874   001786  0FE8               	addlw	232
  2875   001788  6E65               	movwf	(_ds13_data_decimal+5)^0,c	;volatile
  2876                           
  2877                           ;main.c: 222:         }else if((ds13_data_decimal[5] >= 50) && (ds13_data_decimal[5] < 6
      +                          0)){
  2878   00178A  EFDA  F00B         	goto	l12636
  2879   00178E                     l12630:
  2880   00178E  0E31               	movlw	49
  2881   001790  6465               	cpfsgt	(_ds13_data_decimal+5)^0,c	;volatile
  2882   001792  EFCD  F00B         	goto	u14271
  2883   001796  EFCF  F00B         	goto	u14270
  2884   00179A                     u14271:
  2885   00179A  EF71  F00B         	goto	l12604
  2886   00179E                     u14270:
  2887   00179E  0E3C               	movlw	60
  2888   0017A0  6065               	cpfslt	(_ds13_data_decimal+5)^0,c	;volatile
  2889   0017A2  EFD5  F00B         	goto	u14281
  2890   0017A6  EFD7  F00B         	goto	u14280
  2891   0017AA                     u14281:
  2892   0017AA  EF71  F00B         	goto	l12604
  2893   0017AE                     u14280:
  2894   0017AE                     
  2895                           ;main.c: 223:             ds13_data_decimal[5] = ds13_data_decimal[5] - 30;
  2896   0017AE  5065               	movf	(_ds13_data_decimal+5)^0,w,c	;volatile
  2897   0017B0  0FE2               	addlw	226
  2898   0017B2  6E65               	movwf	(_ds13_data_decimal+5)^0,c	;volatile
  2899   0017B4                     l12636:
  2900                           
  2901                           ;main.c: 227:         ret = convert_uint8_to_string(ds13_data_decimal[3],&addd);
  2902   0017B4  0E69               	movlw	low _addd
  2903   0017B6  6E3C               	movwf	convert_uint8_to_string@str^0,c
  2904   0017B8  5063               	movf	(_ds13_data_decimal+3)^0,w,c	;volatile
  2905   0017BA  EC02  F02C         	call	_convert_uint8_to_string
  2906   0017BE  0100               	movlb	0	; () banked
  2907   0017C0  6FFF               	movwf	_ret& (0+255),b
  2908   0017C2                     
  2909                           ; BSR set to: 0
  2910                           ;main.c: 228:         ret = lcd_4bit_send_string_pos(&lcd_4bit,2,8,&addd);
  2911   0017C2  0EEC               	movlw	low _lcd_4bit
  2912   0017C4  6E26               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  2913   0017C6  0E02               	movlw	2
  2914   0017C8  6E27               	movwf	lcd_4bit_send_string_pos@row^0,c
  2915   0017CA  0E08               	movlw	8
  2916   0017CC  6E28               	movwf	lcd_4bit_send_string_pos@column^0,c
  2917   0017CE  0E69               	movlw	low _addd
  2918   0017D0  6E29               	movwf	lcd_4bit_send_string_pos@str^0,c
  2919   0017D2  6A2A               	clrf	(lcd_4bit_send_string_pos@str+1)^0,c
  2920   0017D4  ECA6  F027         	call	_lcd_4bit_send_string_pos	;wreg free
  2921   0017D8  0100               	movlb	0	; () banked
  2922   0017DA  6FFF               	movwf	_ret& (0+255),b
  2923   0017DC                     
  2924                           ; BSR set to: 0
  2925                           ;main.c: 229:         ret = lcd_4bit_send_char_data_pos(&lcd_4bit,2,11,'/');
  2926   0017DC  0EEC               	movlw	low _lcd_4bit
  2927   0017DE  6E26               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  2928   0017E0  0E02               	movlw	2
  2929   0017E2  6E27               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  2930   0017E4  0E0B               	movlw	11
  2931   0017E6  6E28               	movwf	lcd_4bit_send_char_data_pos@column^0,c
  2932   0017E8  0E2F               	movlw	47
  2933   0017EA  6E29               	movwf	lcd_4bit_send_char_data_pos@data^0,c
  2934   0017EC  ECC1  F02D         	call	_lcd_4bit_send_char_data_pos	;wreg free
  2935   0017F0  0100               	movlb	0	; () banked
  2936   0017F2  6FFF               	movwf	_ret& (0+255),b
  2937   0017F4                     
  2938                           ; BSR set to: 0
  2939                           ;main.c: 230:         ret = convert_uint8_to_string(ds13_data_decimal[4],&addd);
  2940   0017F4  0E69               	movlw	low _addd
  2941   0017F6  6E3C               	movwf	convert_uint8_to_string@str^0,c
  2942   0017F8  5064               	movf	(_ds13_data_decimal+4)^0,w,c	;volatile
  2943   0017FA  EC02  F02C         	call	_convert_uint8_to_string
  2944   0017FE  0100               	movlb	0	; () banked
  2945   001800  6FFF               	movwf	_ret& (0+255),b
  2946   001802                     
  2947                           ; BSR set to: 0
  2948                           ;main.c: 231:         ret = lcd_4bit_send_string_pos(&lcd_4bit,2,12,&addd);
  2949   001802  0EEC               	movlw	low _lcd_4bit
  2950   001804  6E26               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  2951   001806  0E02               	movlw	2
  2952   001808  6E27               	movwf	lcd_4bit_send_string_pos@row^0,c
  2953   00180A  0E0C               	movlw	12
  2954   00180C  6E28               	movwf	lcd_4bit_send_string_pos@column^0,c
  2955   00180E  0E69               	movlw	low _addd
  2956   001810  6E29               	movwf	lcd_4bit_send_string_pos@str^0,c
  2957   001812  6A2A               	clrf	(lcd_4bit_send_string_pos@str+1)^0,c
  2958   001814  ECA6  F027         	call	_lcd_4bit_send_string_pos	;wreg free
  2959   001818  0100               	movlb	0	; () banked
  2960   00181A  6FFF               	movwf	_ret& (0+255),b
  2961   00181C                     
  2962                           ; BSR set to: 0
  2963                           ;main.c: 232:         ret = lcd_4bit_send_char_data_pos(&lcd_4bit,2,14,'/');
  2964   00181C  0EEC               	movlw	low _lcd_4bit
  2965   00181E  6E26               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  2966   001820  0E02               	movlw	2
  2967   001822  6E27               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  2968   001824  0E0E               	movlw	14
  2969   001826  6E28               	movwf	lcd_4bit_send_char_data_pos@column^0,c
  2970   001828  0E2F               	movlw	47
  2971   00182A  6E29               	movwf	lcd_4bit_send_char_data_pos@data^0,c
  2972   00182C  ECC1  F02D         	call	_lcd_4bit_send_char_data_pos	;wreg free
  2973   001830  0100               	movlb	0	; () banked
  2974   001832  6FFF               	movwf	_ret& (0+255),b
  2975   001834                     
  2976                           ; BSR set to: 0
  2977                           ;main.c: 233:         ret = convert_uint8_to_string(ds13_data_decimal[5],&addd);
  2978   001834  0E69               	movlw	low _addd
  2979   001836  6E3C               	movwf	convert_uint8_to_string@str^0,c
  2980   001838  5065               	movf	(_ds13_data_decimal+5)^0,w,c	;volatile
  2981   00183A  EC02  F02C         	call	_convert_uint8_to_string
  2982   00183E  0100               	movlb	0	; () banked
  2983   001840  6FFF               	movwf	_ret& (0+255),b
  2984   001842                     
  2985                           ; BSR set to: 0
  2986                           ;main.c: 234:         ret = lcd_4bit_send_string_pos(&lcd_4bit,2,15,&addd);
  2987   001842  0EEC               	movlw	low _lcd_4bit
  2988   001844  6E26               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  2989   001846  0E02               	movlw	2
  2990   001848  6E27               	movwf	lcd_4bit_send_string_pos@row^0,c
  2991   00184A  0E0F               	movlw	15
  2992   00184C  6E28               	movwf	lcd_4bit_send_string_pos@column^0,c
  2993   00184E  0E69               	movlw	low _addd
  2994   001850  6E29               	movwf	lcd_4bit_send_string_pos@str^0,c
  2995   001852  6A2A               	clrf	(lcd_4bit_send_string_pos@str+1)^0,c
  2996   001854  ECA6  F027         	call	_lcd_4bit_send_string_pos	;wreg free
  2997   001858  0100               	movlb	0	; () banked
  2998   00185A  6FFF               	movwf	_ret& (0+255),b
  2999   00185C                     
  3000                           ; BSR set to: 0
  3001                           ;main.c: 237:         tc74_read_value(&mssp_i2c,(uint8)0X9E,(uint8)0x00,&tc74,&i2c_ack);
  3002   00185C  0E31               	movlw	low _mssp_i2c
  3003   00185E  6E1B               	movwf	tc74_read_value@i2c_obj^0,c
  3004   001860  0E01               	movlw	high _mssp_i2c
  3005   001862  6E1C               	movwf	(tc74_read_value@i2c_obj+1)^0,c
  3006   001864  0E9E               	movlw	158
  3007   001866  6E1D               	movwf	tc74_read_value@i2c_data_1^0,c
  3008   001868  0E00               	movlw	0
  3009   00186A  6E1E               	movwf	tc74_read_value@i2c_data_2^0,c
  3010   00186C  0E6A               	movlw	low _tc74
  3011   00186E  6E1F               	movwf	tc74_read_value@ret_data^0,c
  3012   001870  0E6B               	movlw	low _i2c_ack
  3013   001872  6E20               	movwf	tc74_read_value@_ack^0,c
  3014   001874  EC8B  F02E         	call	_tc74_read_value	;wreg free
  3015   001878                     
  3016                           ;main.c: 238:         tc74_ref =tc74;
  3017   001878  C06A  F068         	movff	_tc74,_tc74_ref	;volatile
  3018   00187C                     
  3019                           ;main.c: 239:         ret = convert_uint8_to_string(tc74_ref,&addd);
  3020   00187C  0E69               	movlw	low _addd
  3021   00187E  6E3C               	movwf	convert_uint8_to_string@str^0,c
  3022   001880  5068               	movf	_tc74_ref^0,w,c	;volatile
  3023   001882  EC02  F02C         	call	_convert_uint8_to_string
  3024   001886  0100               	movlb	0	; () banked
  3025   001888  6FFF               	movwf	_ret& (0+255),b
  3026   00188A                     
  3027                           ; BSR set to: 0
  3028                           ;main.c: 240:         ret = lcd_4bit_send_string_pos(&lcd_4bit,3,15,&addd);
  3029   00188A  0EEC               	movlw	low _lcd_4bit
  3030   00188C  6E26               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  3031   00188E  0E03               	movlw	3
  3032   001890  6E27               	movwf	lcd_4bit_send_string_pos@row^0,c
  3033   001892  0E0F               	movlw	15
  3034   001894  6E28               	movwf	lcd_4bit_send_string_pos@column^0,c
  3035   001896  0E69               	movlw	low _addd
  3036   001898  6E29               	movwf	lcd_4bit_send_string_pos@str^0,c
  3037   00189A  6A2A               	clrf	(lcd_4bit_send_string_pos@str+1)^0,c
  3038   00189C  ECA6  F027         	call	_lcd_4bit_send_string_pos	;wreg free
  3039   0018A0  0100               	movlb	0	; () banked
  3040   0018A2  6FFF               	movwf	_ret& (0+255),b
  3041   0018A4                     
  3042                           ; BSR set to: 0
  3043                           ;main.c: 241:         if((tc74_ref > 25) && (tc74_ref <= 27)){
  3044   0018A4  0E19               	movlw	25
  3045   0018A6  6468               	cpfsgt	_tc74_ref^0,c	;volatile
  3046   0018A8  EF58  F00C         	goto	u14291
  3047   0018AC  EF5A  F00C         	goto	u14290
  3048   0018B0                     u14291:
  3049   0018B0  EF7E  F00C         	goto	l12674
  3050   0018B4                     u14290:
  3051   0018B4                     
  3052                           ; BSR set to: 0
  3053   0018B4  0E1C               	movlw	28
  3054   0018B6  6068               	cpfslt	_tc74_ref^0,c	;volatile
  3055   0018B8  EF60  F00C         	goto	u14301
  3056   0018BC  EF62  F00C         	goto	u14300
  3057   0018C0                     u14301:
  3058   0018C0  EF7E  F00C         	goto	l12674
  3059   0018C4                     u14300:
  3060   0018C4                     
  3061                           ; BSR set to: 0
  3062                           ;main.c: 242:             ret = morot_turn_right(&motor_1);
  3063   0018C4  0EF4               	movlw	low _motor_1
  3064   0018C6  6E19               	movwf	morot_turn_right@motor_pin^0,c
  3065   0018C8  ECBA  F02C         	call	_morot_turn_right	;wreg free
  3066   0018CC  0100               	movlb	0	; () banked
  3067   0018CE  6FFF               	movwf	_ret& (0+255),b
  3068                           
  3069                           ;main.c: 243:             ret = morot_turn_left(&motor_2);
  3070   0018D0  0EF2               	movlw	low _motor_2
  3071   0018D2  6E19               	movwf	morot_turn_left@motor_pin^0,c
  3072   0018D4  ECDC  F02C         	call	_morot_turn_left	;wreg free
  3073   0018D8  0100               	movlb	0	; () banked
  3074   0018DA  6FFF               	movwf	_ret& (0+255),b
  3075   0018DC                     
  3076                           ; BSR set to: 0
  3077                           ;main.c: 244:             ccp1_pwm_set_duty(80);
  3078   0018DC  0E50               	movlw	80
  3079   0018DE  EC1C  F021         	call	_ccp1_pwm_set_duty
  3080   0018E2                     
  3081                           ;main.c: 245:             ccp2_pwm_set_duty(20);
  3082   0018E2  0E14               	movlw	20
  3083   0018E4  EC8F  F020         	call	_ccp2_pwm_set_duty
  3084   0018E8                     
  3085                           ;main.c: 246:             (CCP1CONbits.CCP1M =0x0E);
  3086   0018E8  50BD               	movf	189,w,c	;volatile
  3087   0018EA  0BF0               	andlw	-16
  3088   0018EC  090E               	iorlw	14
  3089   0018EE  6EBD               	movwf	189,c	;volatile
  3090   0018F0                     
  3091                           ;main.c: 247:             (CCP2CONbits.CCP2M =0x0E);
  3092   0018F0  50BA               	movf	186,w,c	;volatile
  3093   0018F2  0BF0               	andlw	-16
  3094   0018F4  090E               	iorlw	14
  3095   0018F6  6EBA               	movwf	186,c	;volatile
  3096                           
  3097                           ;main.c: 248:            }else if((tc74_ref > 27) && (tc74_ref <= 30)){
  3098   0018F8  EF0A  F00D         	goto	l12720
  3099   0018FC                     l12674:
  3100                           
  3101                           ; BSR set to: 0
  3102   0018FC  0E1B               	movlw	27
  3103   0018FE  6468               	cpfsgt	_tc74_ref^0,c	;volatile
  3104   001900  EF84  F00C         	goto	u14311
  3105   001904  EF86  F00C         	goto	u14310
  3106   001908                     u14311:
  3107   001908  EFAA  F00C         	goto	l12688
  3108   00190C                     u14310:
  3109   00190C                     
  3110                           ; BSR set to: 0
  3111   00190C  0E1F               	movlw	31
  3112   00190E  6068               	cpfslt	_tc74_ref^0,c	;volatile
  3113   001910  EF8C  F00C         	goto	u14321
  3114   001914  EF8E  F00C         	goto	u14320
  3115   001918                     u14321:
  3116   001918  EFAA  F00C         	goto	l12688
  3117   00191C                     u14320:
  3118   00191C                     
  3119                           ; BSR set to: 0
  3120                           ;main.c: 249:             ret = morot_turn_right(&motor_1);
  3121   00191C  0EF4               	movlw	low _motor_1
  3122   00191E  6E19               	movwf	morot_turn_right@motor_pin^0,c
  3123   001920  ECBA  F02C         	call	_morot_turn_right	;wreg free
  3124   001924  0100               	movlb	0	; () banked
  3125   001926  6FFF               	movwf	_ret& (0+255),b
  3126                           
  3127                           ;main.c: 250:             ret = morot_turn_left(&motor_2);
  3128   001928  0EF2               	movlw	low _motor_2
  3129   00192A  6E19               	movwf	morot_turn_left@motor_pin^0,c
  3130   00192C  ECDC  F02C         	call	_morot_turn_left	;wreg free
  3131   001930  0100               	movlb	0	; () banked
  3132   001932  6FFF               	movwf	_ret& (0+255),b
  3133   001934                     
  3134                           ; BSR set to: 0
  3135                           ;main.c: 251:             ccp1_pwm_set_duty(50);
  3136   001934  0E32               	movlw	50
  3137   001936  EC1C  F021         	call	_ccp1_pwm_set_duty
  3138   00193A                     
  3139                           ;main.c: 252:             ccp2_pwm_set_duty(50);
  3140   00193A  0E32               	movlw	50
  3141   00193C  EC8F  F020         	call	_ccp2_pwm_set_duty
  3142   001940                     
  3143                           ;main.c: 253:             (CCP1CONbits.CCP1M =0x0E);
  3144   001940  50BD               	movf	189,w,c	;volatile
  3145   001942  0BF0               	andlw	-16
  3146   001944  090E               	iorlw	14
  3147   001946  6EBD               	movwf	189,c	;volatile
  3148   001948                     
  3149                           ;main.c: 254:             (CCP2CONbits.CCP2M =0x0E);
  3150   001948  50BA               	movf	186,w,c	;volatile
  3151   00194A  0BF0               	andlw	-16
  3152   00194C  090E               	iorlw	14
  3153   00194E  6EBA               	movwf	186,c	;volatile
  3154                           
  3155                           ;main.c: 255:             }
  3156   001950  EF0A  F00D         	goto	l12720
  3157   001954                     l12688:
  3158                           
  3159                           ; BSR set to: 0
  3160   001954  0E1E               	movlw	30
  3161   001956  6468               	cpfsgt	_tc74_ref^0,c	;volatile
  3162   001958  EFB0  F00C         	goto	u14331
  3163   00195C  EFB2  F00C         	goto	u14330
  3164   001960                     u14331:
  3165   001960  EFD6  F00C         	goto	l12702
  3166   001964                     u14330:
  3167   001964                     
  3168                           ; BSR set to: 0
  3169   001964  0E22               	movlw	34
  3170   001966  6068               	cpfslt	_tc74_ref^0,c	;volatile
  3171   001968  EFB8  F00C         	goto	u14341
  3172   00196C  EFBA  F00C         	goto	u14340
  3173   001970                     u14341:
  3174   001970  EFD6  F00C         	goto	l12702
  3175   001974                     u14340:
  3176   001974                     
  3177                           ; BSR set to: 0
  3178                           ;main.c: 257:             ret = morot_turn_right(&motor_1);
  3179   001974  0EF4               	movlw	low _motor_1
  3180   001976  6E19               	movwf	morot_turn_right@motor_pin^0,c
  3181   001978  ECBA  F02C         	call	_morot_turn_right	;wreg free
  3182   00197C  0100               	movlb	0	; () banked
  3183   00197E  6FFF               	movwf	_ret& (0+255),b
  3184                           
  3185                           ;main.c: 258:             ret = morot_turn_left(&motor_2);
  3186   001980  0EF2               	movlw	low _motor_2
  3187   001982  6E19               	movwf	morot_turn_left@motor_pin^0,c
  3188   001984  ECDC  F02C         	call	_morot_turn_left	;wreg free
  3189   001988  0100               	movlb	0	; () banked
  3190   00198A  6FFF               	movwf	_ret& (0+255),b
  3191   00198C                     
  3192                           ; BSR set to: 0
  3193                           ;main.c: 259:             ccp1_pwm_set_duty(20);
  3194   00198C  0E14               	movlw	20
  3195   00198E  EC1C  F021         	call	_ccp1_pwm_set_duty
  3196   001992                     
  3197                           ;main.c: 260:             ccp2_pwm_set_duty(80);
  3198   001992  0E50               	movlw	80
  3199   001994  EC8F  F020         	call	_ccp2_pwm_set_duty
  3200   001998                     
  3201                           ;main.c: 261:             (CCP1CONbits.CCP1M =0x0E);
  3202   001998  50BD               	movf	189,w,c	;volatile
  3203   00199A  0BF0               	andlw	-16
  3204   00199C  090E               	iorlw	14
  3205   00199E  6EBD               	movwf	189,c	;volatile
  3206   0019A0                     
  3207                           ;main.c: 262:             (CCP2CONbits.CCP2M =0x0E);
  3208   0019A0  50BA               	movf	186,w,c	;volatile
  3209   0019A2  0BF0               	andlw	-16
  3210   0019A4  090E               	iorlw	14
  3211   0019A6  6EBA               	movwf	186,c	;volatile
  3212                           
  3213                           ;main.c: 263:             }
  3214   0019A8  EF0A  F00D         	goto	l12720
  3215   0019AC                     l12702:
  3216                           
  3217                           ; BSR set to: 0
  3218   0019AC  0E21               	movlw	33
  3219   0019AE  6468               	cpfsgt	_tc74_ref^0,c	;volatile
  3220   0019B0  EFDC  F00C         	goto	u14351
  3221   0019B4  EFDE  F00C         	goto	u14350
  3222   0019B8                     u14351:
  3223   0019B8  EFFA  F00C         	goto	l12714
  3224   0019BC                     u14350:
  3225   0019BC                     
  3226                           ; BSR set to: 0
  3227                           ;main.c: 265:             ret = morot_turn_right(&motor_1);
  3228   0019BC  0EF4               	movlw	low _motor_1
  3229   0019BE  6E19               	movwf	morot_turn_right@motor_pin^0,c
  3230   0019C0  ECBA  F02C         	call	_morot_turn_right	;wreg free
  3231   0019C4  0100               	movlb	0	; () banked
  3232   0019C6  6FFF               	movwf	_ret& (0+255),b
  3233                           
  3234                           ;main.c: 266:             ret = morot_turn_left(&motor_2);
  3235   0019C8  0EF2               	movlw	low _motor_2
  3236   0019CA  6E19               	movwf	morot_turn_left@motor_pin^0,c
  3237   0019CC  ECDC  F02C         	call	_morot_turn_left	;wreg free
  3238   0019D0  0100               	movlb	0	; () banked
  3239   0019D2  6FFF               	movwf	_ret& (0+255),b
  3240   0019D4                     
  3241                           ; BSR set to: 0
  3242                           ;main.c: 267:             ccp1_pwm_set_duty(1);
  3243   0019D4  0E01               	movlw	1
  3244   0019D6  EC1C  F021         	call	_ccp1_pwm_set_duty
  3245   0019DA                     
  3246                           ;main.c: 268:             ccp2_pwm_set_duty(100);
  3247   0019DA  0E64               	movlw	100
  3248   0019DC  EC8F  F020         	call	_ccp2_pwm_set_duty
  3249   0019E0                     
  3250                           ;main.c: 269:             (CCP1CONbits.CCP1M =0x0E);
  3251   0019E0  50BD               	movf	189,w,c	;volatile
  3252   0019E2  0BF0               	andlw	-16
  3253   0019E4  090E               	iorlw	14
  3254   0019E6  6EBD               	movwf	189,c	;volatile
  3255   0019E8                     
  3256                           ;main.c: 270:             (CCP2CONbits.CCP2M =0x0E);
  3257   0019E8  50BA               	movf	186,w,c	;volatile
  3258   0019EA  0BF0               	andlw	-16
  3259   0019EC  090E               	iorlw	14
  3260   0019EE  6EBA               	movwf	186,c	;volatile
  3261                           
  3262                           ;main.c: 271:             }
  3263   0019F0  EF0A  F00D         	goto	l12720
  3264   0019F4                     l12714:
  3265                           
  3266                           ; BSR set to: 0
  3267                           ;main.c: 273:             ret = morot_stop(&motor_1);
  3268   0019F4  0EF4               	movlw	low _motor_1
  3269   0019F6  6E19               	movwf	morot_stop@motor_pin^0,c
  3270   0019F8  ECFE  F02C         	call	_morot_stop	;wreg free
  3271   0019FC  0100               	movlb	0	; () banked
  3272   0019FE  6FFF               	movwf	_ret& (0+255),b
  3273                           
  3274                           ;main.c: 274:             ret = morot_stop(&motor_2);
  3275   001A00  0EF2               	movlw	low _motor_2
  3276   001A02  6E19               	movwf	morot_stop@motor_pin^0,c
  3277   001A04  ECFE  F02C         	call	_morot_stop	;wreg free
  3278   001A08  0100               	movlb	0	; () banked
  3279   001A0A  6FFF               	movwf	_ret& (0+255),b
  3280   001A0C                     
  3281                           ; BSR set to: 0
  3282                           ;main.c: 275:             (CCP1CONbits.CCP1M =0);
  3283   001A0C  0EF0               	movlw	-16
  3284   001A0E  16BD               	andwf	189,f,c	;volatile
  3285   001A10                     
  3286                           ; BSR set to: 0
  3287                           ;main.c: 276:             (CCP2CONbits.CCP2M =0);
  3288   001A10  0EF0               	movlw	-16
  3289   001A12  16BA               	andwf	186,f,c	;volatile
  3290   001A14                     l12720:
  3291                           
  3292                           ;main.c: 279:         if(usart_data[6] != 0){
  3293   001A14  0100               	movlb	0	; () banked
  3294   001A16  51D0               	movf	(_usart_data+6)& (0+255),w,b	;volatile
  3295   001A18  B4D8               	btfsc	status,2,c
  3296   001A1A  EF11  F00D         	goto	u14361
  3297   001A1E  EF13  F00D         	goto	u14360
  3298   001A22                     u14361:
  3299   001A22  EFCA  F008         	goto	l12418
  3300   001A26                     u14360:
  3301   001A26                     
  3302                           ; BSR set to: 0
  3303                           ;main.c: 280:             if((usart_data[6] == 'd') && (usart_data[5] == 'e') && (usart_
      +                          data[4] == 'm') && (usart_data[3] == 'a') &&
  3304   001A26  0E64               	movlw	100
  3305   001A28  19D0               	xorwf	(_usart_data+6)& (0+255),w,b	;volatile
  3306   001A2A  A4D8               	btfss	status,2,c
  3307   001A2C  EF1A  F00D         	goto	u14371
  3308   001A30  EF1C  F00D         	goto	u14370
  3309   001A34                     u14371:
  3310   001A34  EFB7  F00D         	goto	l12742
  3311   001A38                     u14370:
  3312   001A38                     
  3313                           ; BSR set to: 0
  3314   001A38  0E65               	movlw	101
  3315   001A3A  19CF               	xorwf	(_usart_data+5)& (0+255),w,b	;volatile
  3316   001A3C  A4D8               	btfss	status,2,c
  3317   001A3E  EF23  F00D         	goto	u14381
  3318   001A42  EF25  F00D         	goto	u14380
  3319   001A46                     u14381:
  3320   001A46  EFB7  F00D         	goto	l12742
  3321   001A4A                     u14380:
  3322   001A4A                     
  3323                           ; BSR set to: 0
  3324   001A4A  0E6D               	movlw	109
  3325   001A4C  19CE               	xorwf	(_usart_data+4)& (0+255),w,b	;volatile
  3326   001A4E  A4D8               	btfss	status,2,c
  3327   001A50  EF2C  F00D         	goto	u14391
  3328   001A54  EF2E  F00D         	goto	u14390
  3329   001A58                     u14391:
  3330   001A58  EFB7  F00D         	goto	l12742
  3331   001A5C                     u14390:
  3332   001A5C                     
  3333                           ; BSR set to: 0
  3334   001A5C  0E61               	movlw	97
  3335   001A5E  19CD               	xorwf	(_usart_data+3)& (0+255),w,b	;volatile
  3336   001A60  A4D8               	btfss	status,2,c
  3337   001A62  EF35  F00D         	goto	u14401
  3338   001A66  EF37  F00D         	goto	u14400
  3339   001A6A                     u14401:
  3340   001A6A  EFB7  F00D         	goto	l12742
  3341   001A6E                     u14400:
  3342   001A6E                     
  3343                           ; BSR set to: 0
  3344   001A6E  0E68               	movlw	104
  3345   001A70  19CC               	xorwf	(_usart_data+2)& (0+255),w,b	;volatile
  3346   001A72  A4D8               	btfss	status,2,c
  3347   001A74  EF3E  F00D         	goto	u14411
  3348   001A78  EF40  F00D         	goto	u14410
  3349   001A7C                     u14411:
  3350   001A7C  EFB7  F00D         	goto	l12742
  3351   001A80                     u14410:
  3352   001A80                     
  3353                           ; BSR set to: 0
  3354   001A80  0E6F               	movlw	111
  3355   001A82  19CB               	xorwf	(_usart_data+1)& (0+255),w,b	;volatile
  3356   001A84  A4D8               	btfss	status,2,c
  3357   001A86  EF47  F00D         	goto	u14421
  3358   001A8A  EF49  F00D         	goto	u14420
  3359   001A8E                     u14421:
  3360   001A8E  EFB7  F00D         	goto	l12742
  3361   001A92                     u14420:
  3362   001A92                     
  3363                           ; BSR set to: 0
  3364   001A92  0E6D               	movlw	109
  3365   001A94  19CA               	xorwf	_usart_data& (0+255),w,b	;volatile
  3366   001A96  A4D8               	btfss	status,2,c
  3367   001A98  EF50  F00D         	goto	u14431
  3368   001A9C  EF52  F00D         	goto	u14430
  3369   001AA0                     u14431:
  3370   001AA0  EFB7  F00D         	goto	l12742
  3371   001AA4                     u14430:
  3372   001AA4                     
  3373                           ; BSR set to: 0
  3374                           ;main.c: 281:                     (usart_data[2] == 'h') && (usart_data[1] == 'o') && (u
      +                          sart_data[0] == 'm') ){;main.c: 282:                 ret = usart_ASYNC_write_byte_blocki
      +                          ng('\r');
  3375   001AA4  0E0D               	movlw	13
  3376   001AA6  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3377   001AAA  0100               	movlb	0	; () banked
  3378   001AAC  6FFF               	movwf	_ret& (0+255),b
  3379                           
  3380                           ;main.c: 283:                 ret = usart_ASYNC_write_byte_blocking('P');
  3381   001AAE  0E50               	movlw	80
  3382   001AB0  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3383   001AB4  0100               	movlb	0	; () banked
  3384   001AB6  6FFF               	movwf	_ret& (0+255),b
  3385                           
  3386                           ;main.c: 284:                 ret = usart_ASYNC_write_byte_blocking('A');
  3387   001AB8  0E41               	movlw	65
  3388   001ABA  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3389   001ABE  0100               	movlb	0	; () banked
  3390   001AC0  6FFF               	movwf	_ret& (0+255),b
  3391                           
  3392                           ;main.c: 285:                 ret = usart_ASYNC_write_byte_blocking('S');
  3393   001AC2  0E53               	movlw	83
  3394   001AC4  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3395   001AC8  0100               	movlb	0	; () banked
  3396   001ACA  6FFF               	movwf	_ret& (0+255),b
  3397                           
  3398                           ;main.c: 286:                 ret = usart_ASYNC_write_byte_blocking('S');
  3399   001ACC  0E53               	movlw	83
  3400   001ACE  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3401   001AD2  0100               	movlb	0	; () banked
  3402   001AD4  6FFF               	movwf	_ret& (0+255),b
  3403                           
  3404                           ;main.c: 287:                 ret = usart_ASYNC_write_byte_blocking('W');
  3405   001AD6  0E57               	movlw	87
  3406   001AD8  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3407   001ADC  0100               	movlb	0	; () banked
  3408   001ADE  6FFF               	movwf	_ret& (0+255),b
  3409                           
  3410                           ;main.c: 288:                 ret = usart_ASYNC_write_byte_blocking('O');
  3411   001AE0  0E4F               	movlw	79
  3412   001AE2  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3413   001AE6  0100               	movlb	0	; () banked
  3414   001AE8  6FFF               	movwf	_ret& (0+255),b
  3415                           
  3416                           ;main.c: 289:                 ret = usart_ASYNC_write_byte_blocking('R');
  3417   001AEA  0E52               	movlw	82
  3418   001AEC  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3419   001AF0  0100               	movlb	0	; () banked
  3420   001AF2  6FFF               	movwf	_ret& (0+255),b
  3421                           
  3422                           ;main.c: 290:                 ret = usart_ASYNC_write_byte_blocking('D');
  3423   001AF4  0E44               	movlw	68
  3424   001AF6  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3425   001AFA  0100               	movlb	0	; () banked
  3426   001AFC  6FFF               	movwf	_ret& (0+255),b
  3427                           
  3428                           ;main.c: 291:                 ret = usart_ASYNC_write_byte_blocking(' ');
  3429   001AFE  0E20               	movlw	32
  3430   001B00  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3431   001B04  0100               	movlb	0	; () banked
  3432   001B06  6FFF               	movwf	_ret& (0+255),b
  3433                           
  3434                           ;main.c: 292:                 ret = usart_ASYNC_write_byte_blocking('C');
  3435   001B08  0E43               	movlw	67
  3436   001B0A  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3437   001B0E  0100               	movlb	0	; () banked
  3438   001B10  6FFF               	movwf	_ret& (0+255),b
  3439                           
  3440                           ;main.c: 293:                 ret = usart_ASYNC_write_byte_blocking('O');
  3441   001B12  0E4F               	movlw	79
  3442   001B14  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3443   001B18  0100               	movlb	0	; () banked
  3444   001B1A  6FFF               	movwf	_ret& (0+255),b
  3445                           
  3446                           ;main.c: 294:                 ret = usart_ASYNC_write_byte_blocking('R');
  3447   001B1C  0E52               	movlw	82
  3448   001B1E  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3449   001B22  0100               	movlb	0	; () banked
  3450   001B24  6FFF               	movwf	_ret& (0+255),b
  3451                           
  3452                           ;main.c: 295:                 ret = usart_ASYNC_write_byte_blocking('R');
  3453   001B26  0E52               	movlw	82
  3454   001B28  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3455   001B2C  0100               	movlb	0	; () banked
  3456   001B2E  6FFF               	movwf	_ret& (0+255),b
  3457                           
  3458                           ;main.c: 296:                 ret = usart_ASYNC_write_byte_blocking('E');
  3459   001B30  0E45               	movlw	69
  3460   001B32  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3461   001B36  0100               	movlb	0	; () banked
  3462   001B38  6FFF               	movwf	_ret& (0+255),b
  3463                           
  3464                           ;main.c: 297:                 ret = usart_ASYNC_write_byte_blocking('C');
  3465   001B3A  0E43               	movlw	67
  3466   001B3C  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3467   001B40  0100               	movlb	0	; () banked
  3468   001B42  6FFF               	movwf	_ret& (0+255),b
  3469                           
  3470                           ;main.c: 298:                 ret = usart_ASYNC_write_byte_blocking('T');
  3471   001B44  0E54               	movlw	84
  3472   001B46  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3473   001B4A  0100               	movlb	0	; () banked
  3474   001B4C  6FFF               	movwf	_ret& (0+255),b
  3475   001B4E                     
  3476                           ; BSR set to: 0
  3477                           ;main.c: 299:                 usart_data[6] = 0;
  3478   001B4E  0E00               	movlw	0
  3479   001B50  6FD0               	movwf	(_usart_data+6)& (0+255),b	;volatile
  3480   001B52                     
  3481                           ; BSR set to: 0
  3482                           ;main.c: 300:                 MSSP_I2C_Master_call_slave(&mssp_i2c,0x60,'a',&i2c_ack);
  3483   001B52  0E31               	movlw	low _mssp_i2c
  3484   001B54  6E14               	movwf	MSSP_I2C_Master_call_slave@i2c_obj^0,c
  3485   001B56  0E01               	movlw	high _mssp_i2c
  3486   001B58  6E15               	movwf	(MSSP_I2C_Master_call_slave@i2c_obj+1)^0,c
  3487   001B5A  0E60               	movlw	96
  3488   001B5C  6E16               	movwf	MSSP_I2C_Master_call_slave@address^0,c
  3489   001B5E  0E61               	movlw	97
  3490   001B60  6E17               	movwf	MSSP_I2C_Master_call_slave@data^0,c
  3491   001B62  0E6B               	movlw	low _i2c_ack
  3492   001B64  6E18               	movwf	MSSP_I2C_Master_call_slave@_ack^0,c
  3493   001B66  EC42  F02D         	call	_MSSP_I2C_Master_call_slave	;wreg free
  3494                           
  3495                           ;main.c: 301:             }else if((usart_data[6] == 'e') && (usart_data[5] == 'e') && (
      +                          usart_data[4] == 'e') && (usart_data[3] == 't') &&
  3496   001B6A  EFCA  F008         	goto	l12418
  3497   001B6E                     l12742:
  3498                           
  3499                           ; BSR set to: 0
  3500   001B6E  0E65               	movlw	101
  3501   001B70  19D0               	xorwf	(_usart_data+6)& (0+255),w,b	;volatile
  3502   001B72  A4D8               	btfss	status,2,c
  3503   001B74  EFBE  F00D         	goto	u14441
  3504   001B78  EFC0  F00D         	goto	u14440
  3505   001B7C                     u14441:
  3506   001B7C  EF24  F00E         	goto	l12762
  3507   001B80                     u14440:
  3508   001B80                     
  3509                           ; BSR set to: 0
  3510   001B80  0E65               	movlw	101
  3511   001B82  19CF               	xorwf	(_usart_data+5)& (0+255),w,b	;volatile
  3512   001B84  A4D8               	btfss	status,2,c
  3513   001B86  EFC7  F00D         	goto	u14451
  3514   001B8A  EFC9  F00D         	goto	u14450
  3515   001B8E                     u14451:
  3516   001B8E  EF24  F00E         	goto	l12762
  3517   001B92                     u14450:
  3518   001B92                     
  3519                           ; BSR set to: 0
  3520   001B92  0E65               	movlw	101
  3521   001B94  19CE               	xorwf	(_usart_data+4)& (0+255),w,b	;volatile
  3522   001B96  A4D8               	btfss	status,2,c
  3523   001B98  EFD0  F00D         	goto	u14461
  3524   001B9C  EFD2  F00D         	goto	u14460
  3525   001BA0                     u14461:
  3526   001BA0  EF24  F00E         	goto	l12762
  3527   001BA4                     u14460:
  3528   001BA4                     
  3529                           ; BSR set to: 0
  3530   001BA4  0E74               	movlw	116
  3531   001BA6  19CD               	xorwf	(_usart_data+3)& (0+255),w,b	;volatile
  3532   001BA8  A4D8               	btfss	status,2,c
  3533   001BAA  EFD9  F00D         	goto	u14471
  3534   001BAE  EFDB  F00D         	goto	u14470
  3535   001BB2                     u14471:
  3536   001BB2  EF24  F00E         	goto	l12762
  3537   001BB6                     u14470:
  3538   001BB6                     
  3539                           ; BSR set to: 0
  3540   001BB6  0E69               	movlw	105
  3541   001BB8  19CC               	xorwf	(_usart_data+2)& (0+255),w,b	;volatile
  3542   001BBA  A4D8               	btfss	status,2,c
  3543   001BBC  EFE2  F00D         	goto	u14481
  3544   001BC0  EFE4  F00D         	goto	u14480
  3545   001BC4                     u14481:
  3546   001BC4  EF24  F00E         	goto	l12762
  3547   001BC8                     u14480:
  3548   001BC8                     
  3549                           ; BSR set to: 0
  3550   001BC8  0E78               	movlw	120
  3551   001BCA  19CB               	xorwf	(_usart_data+1)& (0+255),w,b	;volatile
  3552   001BCC  A4D8               	btfss	status,2,c
  3553   001BCE  EFEB  F00D         	goto	u14491
  3554   001BD2  EFED  F00D         	goto	u14490
  3555   001BD6                     u14491:
  3556   001BD6  EF24  F00E         	goto	l12762
  3557   001BDA                     u14490:
  3558   001BDA                     
  3559                           ; BSR set to: 0
  3560   001BDA  0E65               	movlw	101
  3561   001BDC  19CA               	xorwf	_usart_data& (0+255),w,b	;volatile
  3562   001BDE  A4D8               	btfss	status,2,c
  3563   001BE0  EFF4  F00D         	goto	u14501
  3564   001BE4  EFF6  F00D         	goto	u14500
  3565   001BE8                     u14501:
  3566   001BE8  EF24  F00E         	goto	l12762
  3567   001BEC                     u14500:
  3568   001BEC                     
  3569                           ; BSR set to: 0
  3570                           ;main.c: 302:                     (usart_data[2] == 'i') && (usart_data[1] == 'x') && (u
      +                          sart_data[0] == 'e') ){;main.c: 303:                 ret = usart_ASYNC_write_byte_blocki
      +                          ng('\r');
  3571   001BEC  0E0D               	movlw	13
  3572   001BEE  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3573   001BF2  0100               	movlb	0	; () banked
  3574   001BF4  6FFF               	movwf	_ret& (0+255),b
  3575                           
  3576                           ;main.c: 304:                     ret = usart_ASYNC_write_byte_blocking('E');
  3577   001BF6  0E45               	movlw	69
  3578   001BF8  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3579   001BFC  0100               	movlb	0	; () banked
  3580   001BFE  6FFF               	movwf	_ret& (0+255),b
  3581                           
  3582                           ;main.c: 305:                 ret = usart_ASYNC_write_byte_blocking('x');
  3583   001C00  0E78               	movlw	120
  3584   001C02  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3585   001C06  0100               	movlb	0	; () banked
  3586   001C08  6FFF               	movwf	_ret& (0+255),b
  3587                           
  3588                           ;main.c: 306:                 ret = usart_ASYNC_write_byte_blocking('i');
  3589   001C0A  0E69               	movlw	105
  3590   001C0C  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3591   001C10  0100               	movlb	0	; () banked
  3592   001C12  6FFF               	movwf	_ret& (0+255),b
  3593                           
  3594                           ;main.c: 307:                 ret = usart_ASYNC_write_byte_blocking('t');
  3595   001C14  0E74               	movlw	116
  3596   001C16  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3597   001C1A  0100               	movlb	0	; () banked
  3598   001C1C  6FFF               	movwf	_ret& (0+255),b
  3599                           
  3600                           ;main.c: 308:                 ret = usart_ASYNC_write_byte_blocking(' ');
  3601   001C1E  0E20               	movlw	32
  3602   001C20  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3603   001C24  0100               	movlb	0	; () banked
  3604   001C26  6FFF               	movwf	_ret& (0+255),b
  3605   001C28                     l12758:
  3606                           
  3607                           ; BSR set to: 0
  3608                           ;main.c: 309:                 usart_data[6] = 0;
  3609   001C28  0E00               	movlw	0
  3610   001C2A  6FD0               	movwf	(_usart_data+6)& (0+255),b	;volatile
  3611   001C2C                     
  3612                           ; BSR set to: 0
  3613                           ;main.c: 310:                 MSSP_I2C_Master_call_slave(&mssp_i2c,0x60,'c',&i2c_ack);
  3614   001C2C  0E31               	movlw	low _mssp_i2c
  3615   001C2E  6E14               	movwf	MSSP_I2C_Master_call_slave@i2c_obj^0,c
  3616   001C30  0E01               	movlw	high _mssp_i2c
  3617   001C32  6E15               	movwf	(MSSP_I2C_Master_call_slave@i2c_obj+1)^0,c
  3618   001C34  0E60               	movlw	96
  3619   001C36  6E16               	movwf	MSSP_I2C_Master_call_slave@address^0,c
  3620   001C38  0E63               	movlw	99
  3621   001C3A  6E17               	movwf	MSSP_I2C_Master_call_slave@data^0,c
  3622   001C3C  0E6B               	movlw	low _i2c_ack
  3623   001C3E  6E18               	movwf	MSSP_I2C_Master_call_slave@_ack^0,c
  3624   001C40  EC42  F02D         	call	_MSSP_I2C_Master_call_slave	;wreg free
  3625                           
  3626                           ;main.c: 311:             }else{
  3627   001C44  EFCA  F008         	goto	l12418
  3628   001C48                     l12762:
  3629                           
  3630                           ; BSR set to: 0
  3631                           ;main.c: 312:                 ret = usart_ASYNC_write_byte_blocking('\r');
  3632   001C48  0E0D               	movlw	13
  3633   001C4A  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3634   001C4E  0100               	movlb	0	; () banked
  3635   001C50  6FFF               	movwf	_ret& (0+255),b
  3636                           
  3637                           ;main.c: 313:                 ret = usart_ASYNC_write_byte_blocking('P');
  3638   001C52  0E50               	movlw	80
  3639   001C54  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3640   001C58  0100               	movlb	0	; () banked
  3641   001C5A  6FFF               	movwf	_ret& (0+255),b
  3642                           
  3643                           ;main.c: 314:                 ret = usart_ASYNC_write_byte_blocking('A');
  3644   001C5C  0E41               	movlw	65
  3645   001C5E  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3646   001C62  0100               	movlb	0	; () banked
  3647   001C64  6FFF               	movwf	_ret& (0+255),b
  3648                           
  3649                           ;main.c: 315:                 ret = usart_ASYNC_write_byte_blocking('S');
  3650   001C66  0E53               	movlw	83
  3651   001C68  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3652   001C6C  0100               	movlb	0	; () banked
  3653   001C6E  6FFF               	movwf	_ret& (0+255),b
  3654                           
  3655                           ;main.c: 316:                 ret = usart_ASYNC_write_byte_blocking('S');
  3656   001C70  0E53               	movlw	83
  3657   001C72  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3658   001C76  0100               	movlb	0	; () banked
  3659   001C78  6FFF               	movwf	_ret& (0+255),b
  3660                           
  3661                           ;main.c: 317:                 ret = usart_ASYNC_write_byte_blocking('W');
  3662   001C7A  0E57               	movlw	87
  3663   001C7C  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3664   001C80  0100               	movlb	0	; () banked
  3665   001C82  6FFF               	movwf	_ret& (0+255),b
  3666                           
  3667                           ;main.c: 318:                 ret = usart_ASYNC_write_byte_blocking('O');
  3668   001C84  0E4F               	movlw	79
  3669   001C86  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3670   001C8A  0100               	movlb	0	; () banked
  3671   001C8C  6FFF               	movwf	_ret& (0+255),b
  3672                           
  3673                           ;main.c: 319:                 ret = usart_ASYNC_write_byte_blocking('R');
  3674   001C8E  0E52               	movlw	82
  3675   001C90  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3676   001C94  0100               	movlb	0	; () banked
  3677   001C96  6FFF               	movwf	_ret& (0+255),b
  3678                           
  3679                           ;main.c: 320:                 ret = usart_ASYNC_write_byte_blocking('D');
  3680   001C98  0E44               	movlw	68
  3681   001C9A  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3682   001C9E  0100               	movlb	0	; () banked
  3683   001CA0  6FFF               	movwf	_ret& (0+255),b
  3684                           
  3685                           ;main.c: 321:                 ret = usart_ASYNC_write_byte_blocking(' ');
  3686   001CA2  0E20               	movlw	32
  3687   001CA4  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3688   001CA8  0100               	movlb	0	; () banked
  3689   001CAA  6FFF               	movwf	_ret& (0+255),b
  3690                           
  3691                           ;main.c: 322:                 ret = usart_ASYNC_write_byte_blocking('W');
  3692   001CAC  0E57               	movlw	87
  3693   001CAE  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3694   001CB2  0100               	movlb	0	; () banked
  3695   001CB4  6FFF               	movwf	_ret& (0+255),b
  3696                           
  3697                           ;main.c: 323:                 ret = usart_ASYNC_write_byte_blocking('R');
  3698   001CB6  0E52               	movlw	82
  3699   001CB8  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3700   001CBC  0100               	movlb	0	; () banked
  3701   001CBE  6FFF               	movwf	_ret& (0+255),b
  3702                           
  3703                           ;main.c: 324:                 ret = usart_ASYNC_write_byte_blocking('O');
  3704   001CC0  0E4F               	movlw	79
  3705   001CC2  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3706   001CC6  0100               	movlb	0	; () banked
  3707   001CC8  6FFF               	movwf	_ret& (0+255),b
  3708                           
  3709                           ;main.c: 325:                 ret = usart_ASYNC_write_byte_blocking('N');
  3710   001CCA  0E4E               	movlw	78
  3711   001CCC  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3712   001CD0  0100               	movlb	0	; () banked
  3713   001CD2  6FFF               	movwf	_ret& (0+255),b
  3714                           
  3715                           ;main.c: 326:                 ret = usart_ASYNC_write_byte_blocking('G');
  3716   001CD4  0E47               	movlw	71
  3717   001CD6  EC19  F030         	call	_usart_ASYNC_write_byte_blocking
  3718   001CDA  0100               	movlb	0	; () banked
  3719   001CDC  6FFF               	movwf	_ret& (0+255),b
  3720   001CDE  EF14  F00E         	goto	l12758
  3721   001CE2  EF07  F000         	goto	start
  3722   001CE6                     __end_of_main:
  3723                           	callstack 0
  3724                           
  3725 ;; *************** function _usart_ASYNC_write_byte_blocking *****************
  3726 ;; Defined at:
  3727 ;;		line 78 in file "MKAL_layer/USART/hal_usart.c"
  3728 ;; Parameters:    Size  Location     Type
  3729 ;;  data            1    wreg     unsigned char 
  3730 ;; Auto vars:     Size  Location     Type
  3731 ;;  data            1   15[COMRAM] unsigned char 
  3732 ;;  ret             1    0        unsigned char 
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  1    wreg      unsigned char 
  3735 ;; Registers used:
  3736 ;;		wreg, status,2
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3743 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3745 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3746 ;;Total ram usage:        1 bytes
  3747 ;; Hardware stack levels used: 1
  3748 ;; Hardware stack levels required when called: 4
  3749 ;; This function calls:
  3750 ;;		Nothing
  3751 ;; This function is called by:
  3752 ;;		_main
  3753 ;;		_usart_ASYNC_write_string_blocking
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757                           	psect	text1
  3758   006032                     __ptext1:
  3759                           	callstack 0
  3760   006032                     _usart_ASYNC_write_byte_blocking:
  3761                           	callstack 26
  3762                           
  3763                           ; BSR set to: 0
  3764                           ;incstack = 0
  3765                           ;usart_ASYNC_write_byte_blocking@data stored from wreg
  3766   006032  6E10               	movwf	usart_ASYNC_write_byte_blocking@data^0,c
  3767   006034                     l1781:
  3768   006034  A2AC               	btfss	172,1,c	;volatile
  3769   006036  EF1F  F030         	goto	u13371
  3770   00603A  EF21  F030         	goto	u13370
  3771   00603E                     u13371:
  3772   00603E  EF1A  F030         	goto	l1781
  3773   006042                     u13370:
  3774   006042                     
  3775                           ;MKAL_layer/USART/hal_usart.c: 82:         (PIE1bits.TXIE = 1);
  3776   006042  889D               	bsf	157,4,c	;volatile
  3777   006044                     
  3778                           ;MKAL_layer/USART/hal_usart.c: 84:         TXREG = data;
  3779   006044  C010  FFAD         	movff	usart_ASYNC_write_byte_blocking@data,4013	;volatile
  3780   006048                     
  3781                           ;MKAL_layer/USART/hal_usart.c: 86:     return ret;
  3782   006048  0E01               	movlw	1
  3783   00604A  0012               	return		;funcret
  3784   00604C                     __end_of_usart_ASYNC_write_byte_blocking:
  3785                           	callstack 0
  3786                           
  3787 ;; *************** function _transfer_0x_d *****************
  3788 ;; Defined at:
  3789 ;;		line 380 in file "main.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;  num             1    wreg     unsigned char 
  3792 ;; Auto vars:     Size  Location     Type
  3793 ;;  num             1   23[COMRAM] unsigned char 
  3794 ;;  h_bit           1   25[COMRAM] unsigned char 
  3795 ;;  l_bit           1   24[COMRAM] unsigned char 
  3796 ;; Return value:  Size  Location     Type
  3797 ;;                  1    wreg      unsigned char 
  3798 ;; Registers used:
  3799 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3800 ;; Tracked objects:
  3801 ;;		On entry : 0/0
  3802 ;;		On exit  : 0/0
  3803 ;;		Unchanged: 0/0
  3804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3806 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3808 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3809 ;;Total ram usage:        3 bytes
  3810 ;; Hardware stack levels used: 1
  3811 ;; Hardware stack levels required when called: 5
  3812 ;; This function calls:
  3813 ;;		___awdiv
  3814 ;;		___awmod
  3815 ;; This function is called by:
  3816 ;;		_main
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820                           	psect	text2
  3821   005930                     __ptext2:
  3822                           	callstack 0
  3823   005930                     _transfer_0x_d:
  3824                           	callstack 25
  3825                           
  3826                           ;incstack = 0
  3827                           ;transfer_0x_d@num stored from wreg
  3828   005930  6E18               	movwf	transfer_0x_d@num^0,c
  3829   005932                     
  3830                           ;main.c: 381:     uint8 l_bit = num%10;
  3831   005932  C018  F010         	movff	transfer_0x_d@num,___awmod@dividend
  3832   005936  6A11               	clrf	(___awmod@dividend+1)^0,c
  3833   005938  0E00               	movlw	0
  3834   00593A  6E13               	movwf	(___awmod@divisor+1)^0,c
  3835   00593C  0E0A               	movlw	10
  3836   00593E  6E12               	movwf	___awmod@divisor^0,c
  3837   005940  EC66  F025         	call	___awmod	;wreg free
  3838   005944  5010               	movf	?___awmod^0,w,c
  3839   005946  6E19               	movwf	transfer_0x_d@l_bit^0,c
  3840                           
  3841                           ;main.c: 382:     uint8 h_bit = num/10;
  3842   005948  C018  F010         	movff	transfer_0x_d@num,___awdiv@dividend
  3843   00594C  6A11               	clrf	(___awdiv@dividend+1)^0,c
  3844   00594E  0E00               	movlw	0
  3845   005950  6E13               	movwf	(___awdiv@divisor+1)^0,c
  3846   005952  0E0A               	movlw	10
  3847   005954  6E12               	movwf	___awdiv@divisor^0,c
  3848   005956  ECE4  F023         	call	___awdiv	;wreg free
  3849   00595A  5010               	movf	?___awdiv^0,w,c
  3850   00595C  6E1A               	movwf	transfer_0x_d@h_bit^0,c
  3851   00595E                     
  3852                           ;main.c: 383:     l_bit = l_bit*1;
  3853   00595E  5019               	movf	transfer_0x_d@l_bit^0,w,c
  3854   005960  0D01               	mullw	1
  3855   005962  CFF3 F019          	movff	prodl,transfer_0x_d@l_bit
  3856   005966                     
  3857                           ;main.c: 384:     h_bit = h_bit*16;
  3858   005966  501A               	movf	transfer_0x_d@h_bit^0,w,c
  3859   005968  0D10               	mullw	16
  3860   00596A  CFF3 F01A          	movff	prodl,transfer_0x_d@h_bit
  3861   00596E                     
  3862                           ;main.c: 385:     return (l_bit+h_bit);
  3863   00596E  5019               	movf	transfer_0x_d@l_bit^0,w,c
  3864   005970  241A               	addwf	transfer_0x_d@h_bit^0,w,c
  3865   005972  0012               	return		;funcret
  3866   005974                     __end_of_transfer_0x_d:
  3867                           	callstack 0
  3868                           
  3869 ;; *************** function _tc74_read_value *****************
  3870 ;; Defined at:
  3871 ;;		line 11 in file "ECU_layer/TC74/hal_tc74.c"
  3872 ;; Parameters:    Size  Location     Type
  3873 ;;  i2c_obj         2   26[COMRAM] PTR const struct .
  3874 ;;		 -> mssp_i2c(15), 
  3875 ;;  i2c_data_1      1   28[COMRAM] unsigned char 
  3876 ;;  i2c_data_2      1   29[COMRAM] unsigned char 
  3877 ;;  ret_data        1   30[COMRAM] PTR unsigned char 
  3878 ;;		 -> tc74(1), 
  3879 ;;  _ack            1   31[COMRAM] PTR unsigned char 
  3880 ;;		 -> i2c_ack(1), 
  3881 ;; Auto vars:     Size  Location     Type
  3882 ;;		None
  3883 ;; Return value:  Size  Location     Type
  3884 ;;                  1    wreg      void 
  3885 ;; Registers used:
  3886 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3887 ;; Tracked objects:
  3888 ;;		On entry : 0/0
  3889 ;;		On exit  : 0/0
  3890 ;;		Unchanged: 0/0
  3891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3892 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3895 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3896 ;;Total ram usage:        6 bytes
  3897 ;; Hardware stack levels used: 1
  3898 ;; Hardware stack levels required when called: 6
  3899 ;; This function calls:
  3900 ;;		_MSSP_I2C_Master_Send_Start
  3901 ;;		_MSSP_I2C_Master_Send_Stop
  3902 ;;		_MSSP_I2C_Master_read_data_in_register
  3903 ;; This function is called by:
  3904 ;;		_main
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908                           	psect	text3
  3909   005D16                     __ptext3:
  3910                           	callstack 0
  3911   005D16                     _tc74_read_value:
  3912                           	callstack 24
  3913   005D16                     
  3914                           ;ECU_layer/TC74/hal_tc74.c: 13:     MSSP_I2C_Master_Send_Start(i2c_obj);
  3915   005D16  C01B  F010         	movff	tc74_read_value@i2c_obj,MSSP_I2C_Master_Send_Start@i2c_obj
  3916   005D1A  C01C  F011         	movff	tc74_read_value@i2c_obj+1,MSSP_I2C_Master_Send_Start@i2c_obj+1
  3917   005D1E  EC53  F02E         	call	_MSSP_I2C_Master_Send_Start	;wreg free
  3918   005D22                     
  3919                           ;ECU_layer/TC74/hal_tc74.c: 14:     MSSP_I2C_Master_read_data_in_register(i2c_obj,i2c_da
      +                          ta_1,i2c_data_2,ret_data,_ack);
  3920   005D22  C01B  F014         	movff	tc74_read_value@i2c_obj,MSSP_I2C_Master_read_data_in_register@i2c_obj
  3921   005D26  C01C  F015         	movff	tc74_read_value@i2c_obj+1,MSSP_I2C_Master_read_data_in_register@i2c_obj+1
  3922   005D2A  C01D  F016         	movff	tc74_read_value@i2c_data_1,MSSP_I2C_Master_read_data_in_register@i2c_data_1
  3923   005D2E  C01E  F017         	movff	tc74_read_value@i2c_data_2,MSSP_I2C_Master_read_data_in_register@i2c_data_2
  3924   005D32  C01F  F018         	movff	tc74_read_value@ret_data,MSSP_I2C_Master_read_data_in_register@ret_data
  3925   005D36  C020  F019         	movff	tc74_read_value@_ack,MSSP_I2C_Master_read_data_in_register@_ack
  3926   005D3A  ECF1  F027         	call	_MSSP_I2C_Master_read_data_in_register	;wreg free
  3927   005D3E                     
  3928                           ;ECU_layer/TC74/hal_tc74.c: 15:     MSSP_I2C_Master_Send_Stop(i2c_obj);
  3929   005D3E  C01B  F010         	movff	tc74_read_value@i2c_obj,MSSP_I2C_Master_Send_Stop@i2c_obj
  3930   005D42  C01C  F011         	movff	tc74_read_value@i2c_obj+1,MSSP_I2C_Master_Send_Stop@i2c_obj+1
  3931   005D46  EC37  F02E         	call	_MSSP_I2C_Master_Send_Stop	;wreg free
  3932   005D4A  0012               	return		;funcret
  3933   005D4C                     __end_of_tc74_read_value:
  3934                           	callstack 0
  3935                           
  3936 ;; *************** function _morot_turn_right *****************
  3937 ;; Defined at:
  3938 ;;		line 20 in file "ECU_layer/DC_MOTOR/ecu_dc_motor.c"
  3939 ;; Parameters:    Size  Location     Type
  3940 ;;  motor_pin       1   24[COMRAM] PTR const struct .
  3941 ;;		 -> motor_1(2), 
  3942 ;; Auto vars:     Size  Location     Type
  3943 ;;  ret             1   26[COMRAM] unsigned char 
  3944 ;; Return value:  Size  Location     Type
  3945 ;;                  1    wreg      unsigned char 
  3946 ;; Registers used:
  3947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3948 ;; Tracked objects:
  3949 ;;		On entry : 0/0
  3950 ;;		On exit  : 0/0
  3951 ;;		Unchanged: 0/0
  3952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3953 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3954 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3955 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3956 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3957 ;;Total ram usage:        3 bytes
  3958 ;; Hardware stack levels used: 1
  3959 ;; Hardware stack levels required when called: 5
  3960 ;; This function calls:
  3961 ;;		_GPIO_pIN_WRITE_LOGIC
  3962 ;; This function is called by:
  3963 ;;		_main
  3964 ;; This function uses a non-reentrant model
  3965 ;;
  3966                           
  3967                           	psect	text4
  3968   005974                     __ptext4:
  3969                           	callstack 0
  3970   005974                     _morot_turn_right:
  3971                           	callstack 25
  3972   005974                     
  3973                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 22:     if (((void*)0) == motor_pin){
  3974   005974  5019               	movf	morot_turn_right@motor_pin^0,w,c
  3975   005976  A4D8               	btfss	status,2,c
  3976   005978  EFC0  F02C         	goto	u13431
  3977   00597C  EFC2  F02C         	goto	u13430
  3978   005980                     u13431:
  3979   005980  EFC6  F02C         	goto	l12228
  3980   005984                     u13430:
  3981   005984                     
  3982                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 23:         ret =(Std_ReturnType)0x00;
  3983   005984  0E00               	movlw	0
  3984   005986  6E1B               	movwf	morot_turn_right@ret^0,c
  3985                           
  3986                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 24:     }
  3987   005988  EFDA  F02C         	goto	l12230
  3988   00598C                     l12228:
  3989                           
  3990                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 26:     {;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 27:    
      +                               ret =GPIO_pIN_WRITE_LOGIC(&(motor_pin->motor_pin_config[0]),GPIO_HIGH);
  3991   00598C  C019  F010         	movff	morot_turn_right@motor_pin,GPIO_pIN_WRITE_LOGIC@config_pin
  3992   005990  6A11               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  3993   005992  0E01               	movlw	1
  3994   005994  6E12               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  3995   005996  EC73  F01F         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  3996   00599A  6E1B               	movwf	morot_turn_right@ret^0,c
  3997                           
  3998                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 28:         ret =GPIO_pIN_WRITE_LOGIC(&(motor_pin->m
      +                          otor_pin_config[1]),GPIO_LOW);
  3999   00599C  C019  F01A         	movff	morot_turn_right@motor_pin,??_morot_turn_right
  4000   0059A0  0E01               	movlw	1
  4001   0059A2  261A               	addwf	??_morot_turn_right^0,f,c
  4002   0059A4  C01A  F010         	movff	??_morot_turn_right,GPIO_pIN_WRITE_LOGIC@config_pin
  4003   0059A8  6A11               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  4004   0059AA  0E00               	movlw	0
  4005   0059AC  6E12               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  4006   0059AE  EC73  F01F         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  4007   0059B2  6E1B               	movwf	morot_turn_right@ret^0,c
  4008   0059B4                     l12230:
  4009                           
  4010                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 30:      return ret ;
  4011   0059B4  501B               	movf	morot_turn_right@ret^0,w,c
  4012   0059B6  0012               	return		;funcret
  4013   0059B8                     __end_of_morot_turn_right:
  4014                           	callstack 0
  4015                           
  4016 ;; *************** function _morot_turn_left *****************
  4017 ;; Defined at:
  4018 ;;		line 33 in file "ECU_layer/DC_MOTOR/ecu_dc_motor.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;  motor_pin       1   24[COMRAM] PTR const struct .
  4021 ;;		 -> motor_2(2), 
  4022 ;; Auto vars:     Size  Location     Type
  4023 ;;  ret             1   26[COMRAM] unsigned char 
  4024 ;; Return value:  Size  Location     Type
  4025 ;;                  1    wreg      unsigned char 
  4026 ;; Registers used:
  4027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4028 ;; Tracked objects:
  4029 ;;		On entry : 0/0
  4030 ;;		On exit  : 0/0
  4031 ;;		Unchanged: 0/0
  4032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4033 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4034 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4035 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4036 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4037 ;;Total ram usage:        3 bytes
  4038 ;; Hardware stack levels used: 1
  4039 ;; Hardware stack levels required when called: 5
  4040 ;; This function calls:
  4041 ;;		_GPIO_pIN_WRITE_LOGIC
  4042 ;; This function is called by:
  4043 ;;		_main
  4044 ;; This function uses a non-reentrant model
  4045 ;;
  4046                           
  4047                           	psect	text5
  4048   0059B8                     __ptext5:
  4049                           	callstack 0
  4050   0059B8                     _morot_turn_left:
  4051                           	callstack 25
  4052   0059B8                     
  4053                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 35:     if (((void*)0) == motor_pin){
  4054   0059B8  5019               	movf	morot_turn_left@motor_pin^0,w,c
  4055   0059BA  A4D8               	btfss	status,2,c
  4056   0059BC  EFE2  F02C         	goto	u13441
  4057   0059C0  EFE4  F02C         	goto	u13440
  4058   0059C4                     u13441:
  4059   0059C4  EFE8  F02C         	goto	l12238
  4060   0059C8                     u13440:
  4061   0059C8                     
  4062                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 36:         ret =(Std_ReturnType)0x00;
  4063   0059C8  0E00               	movlw	0
  4064   0059CA  6E1B               	movwf	morot_turn_left@ret^0,c
  4065                           
  4066                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 37:     }
  4067   0059CC  EFFC  F02C         	goto	l12240
  4068   0059D0                     l12238:
  4069                           
  4070                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 39:     {;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 40:    
      +                               ret =GPIO_pIN_WRITE_LOGIC(&(motor_pin->motor_pin_config[0]),GPIO_LOW);
  4071   0059D0  C019  F010         	movff	morot_turn_left@motor_pin,GPIO_pIN_WRITE_LOGIC@config_pin
  4072   0059D4  6A11               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  4073   0059D6  0E00               	movlw	0
  4074   0059D8  6E12               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  4075   0059DA  EC73  F01F         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  4076   0059DE  6E1B               	movwf	morot_turn_left@ret^0,c
  4077                           
  4078                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 41:         ret =GPIO_pIN_WRITE_LOGIC(&(motor_pin->m
      +                          otor_pin_config[1]),GPIO_HIGH);
  4079   0059E0  C019  F01A         	movff	morot_turn_left@motor_pin,??_morot_turn_left
  4080   0059E4  0E01               	movlw	1
  4081   0059E6  261A               	addwf	??_morot_turn_left^0,f,c
  4082   0059E8  C01A  F010         	movff	??_morot_turn_left,GPIO_pIN_WRITE_LOGIC@config_pin
  4083   0059EC  6A11               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  4084   0059EE  0E01               	movlw	1
  4085   0059F0  6E12               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  4086   0059F2  EC73  F01F         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  4087   0059F6  6E1B               	movwf	morot_turn_left@ret^0,c
  4088   0059F8                     l12240:
  4089                           
  4090                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 43:     return ret ;
  4091   0059F8  501B               	movf	morot_turn_left@ret^0,w,c
  4092   0059FA  0012               	return		;funcret
  4093   0059FC                     __end_of_morot_turn_left:
  4094                           	callstack 0
  4095                           
  4096 ;; *************** function _morot_stop *****************
  4097 ;; Defined at:
  4098 ;;		line 46 in file "ECU_layer/DC_MOTOR/ecu_dc_motor.c"
  4099 ;; Parameters:    Size  Location     Type
  4100 ;;  motor_pin       1   24[COMRAM] PTR const struct .
  4101 ;;		 -> motor_2(2), motor_1(2), 
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;  ret             1   26[COMRAM] unsigned char 
  4104 ;; Return value:  Size  Location     Type
  4105 ;;                  1    wreg      unsigned char 
  4106 ;; Registers used:
  4107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4113 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4114 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4115 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4116 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4117 ;;Total ram usage:        3 bytes
  4118 ;; Hardware stack levels used: 1
  4119 ;; Hardware stack levels required when called: 5
  4120 ;; This function calls:
  4121 ;;		_GPIO_pIN_WRITE_LOGIC
  4122 ;; This function is called by:
  4123 ;;		_main
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127                           	psect	text6
  4128   0059FC                     __ptext6:
  4129                           	callstack 0
  4130   0059FC                     _morot_stop:
  4131                           	callstack 25
  4132   0059FC                     
  4133                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 48:     if (((void*)0) == motor_pin){
  4134   0059FC  5019               	movf	morot_stop@motor_pin^0,w,c
  4135   0059FE  A4D8               	btfss	status,2,c
  4136   005A00  EF04  F02D         	goto	u13451
  4137   005A04  EF06  F02D         	goto	u13450
  4138   005A08                     u13451:
  4139   005A08  EF0A  F02D         	goto	l12284
  4140   005A0C                     u13450:
  4141   005A0C                     
  4142                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 49:         ret =(Std_ReturnType)0x00;
  4143   005A0C  0E00               	movlw	0
  4144   005A0E  6E1B               	movwf	morot_stop@ret^0,c
  4145                           
  4146                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 50:     }
  4147   005A10  EF1E  F02D         	goto	l12286
  4148   005A14                     l12284:
  4149                           
  4150                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 52:     {;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 53:    
      +                               ret =GPIO_pIN_WRITE_LOGIC(&(motor_pin->motor_pin_config[0]),GPIO_LOW);
  4151   005A14  C019  F010         	movff	morot_stop@motor_pin,GPIO_pIN_WRITE_LOGIC@config_pin
  4152   005A18  6A11               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  4153   005A1A  0E00               	movlw	0
  4154   005A1C  6E12               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  4155   005A1E  EC73  F01F         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  4156   005A22  6E1B               	movwf	morot_stop@ret^0,c
  4157                           
  4158                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 54:         ret =GPIO_pIN_WRITE_LOGIC(&(motor_pin->m
      +                          otor_pin_config[1]),GPIO_LOW);
  4159   005A24  C019  F01A         	movff	morot_stop@motor_pin,??_morot_stop
  4160   005A28  0E01               	movlw	1
  4161   005A2A  261A               	addwf	??_morot_stop^0,f,c
  4162   005A2C  C01A  F010         	movff	??_morot_stop,GPIO_pIN_WRITE_LOGIC@config_pin
  4163   005A30  6A11               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  4164   005A32  0E00               	movlw	0
  4165   005A34  6E12               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  4166   005A36  EC73  F01F         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  4167   005A3A  6E1B               	movwf	morot_stop@ret^0,c
  4168   005A3C                     l12286:
  4169                           
  4170                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 56:     return ret ;
  4171   005A3C  501B               	movf	morot_stop@ret^0,w,c
  4172   005A3E  0012               	return		;funcret
  4173   005A40                     __end_of_morot_stop:
  4174                           	callstack 0
  4175                           
  4176 ;; *************** function _lcd_4bit_send_string_pos *****************
  4177 ;; Defined at:
  4178 ;;		line 162 in file "ECU_layer/chr_lcd/ecu_chr_lcd.c"
  4179 ;; Parameters:    Size  Location     Type
  4180 ;;  lcd             1   37[COMRAM] PTR const struct .
  4181 ;;		 -> lcd_4bit(6), 
  4182 ;;  row             1   38[COMRAM] unsigned char 
  4183 ;;  column          1   39[COMRAM] unsigned char 
  4184 ;;  str             2   40[COMRAM] PTR unsigned char 
  4185 ;;		 -> addd(1), STR_3(15), STR_2(8), STR_1(14), 
  4186 ;; Auto vars:     Size  Location     Type
  4187 ;;  ret             1   42[COMRAM] unsigned char 
  4188 ;; Return value:  Size  Location     Type
  4189 ;;                  1    wreg      unsigned char 
  4190 ;; Registers used:
  4191 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4192 ;; Tracked objects:
  4193 ;;		On entry : 0/0
  4194 ;;		On exit  : 0/0
  4195 ;;		Unchanged: 0/0
  4196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4197 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4198 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4200 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4201 ;;Total ram usage:        6 bytes
  4202 ;; Hardware stack levels used: 1
  4203 ;; Hardware stack levels required when called: 8
  4204 ;; This function calls:
  4205 ;;		_lcd_4bit_send_char_data
  4206 ;;		_lcd_4bit_set_cursor
  4207 ;; This function is called by:
  4208 ;;		_main
  4209 ;; This function uses a non-reentrant model
  4210 ;;
  4211                           
  4212                           	psect	text7
  4213   004F4C                     __ptext7:
  4214                           	callstack 0
  4215   004F4C                     _lcd_4bit_send_string_pos:
  4216                           	callstack 22
  4217   004F4C                     
  4218                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 164:     if(((void*)0) == lcd){
  4219   004F4C  5026               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
  4220   004F4E  A4D8               	btfss	status,2,c
  4221   004F50  EFAC  F027         	goto	u13331
  4222   004F54  EFAE  F027         	goto	u13330
  4223   004F58                     u13331:
  4224   004F58  EFB2  F027         	goto	l12102
  4225   004F5C                     u13330:
  4226   004F5C                     
  4227                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 165:         ret = 0;
  4228   004F5C  0E00               	movlw	0
  4229   004F5E  6E2B               	movwf	lcd_4bit_send_string_pos@ret^0,c
  4230                           
  4231                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 166:     }
  4232   004F60  EFEF  F027         	goto	l12110
  4233   004F64                     l12102:
  4234                           
  4235                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 168:         ret = lcd_4bit_set_cursor(lcd, row, colum
      +                          n);
  4236   004F64  C026  F020         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_cursor@lcd
  4237   004F68  C027  F021         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
  4238   004F6C  C028  F022         	movff	lcd_4bit_send_string_pos@column,lcd_4bit_set_cursor@coulmn
  4239   004F70  EC5A  F027         	call	_lcd_4bit_set_cursor	;wreg free
  4240   004F74  6E2B               	movwf	lcd_4bit_send_string_pos@ret^0,c
  4241                           
  4242                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 169:         while(*str){
  4243   004F76  EFD6  F027         	goto	l12108
  4244   004F7A                     l12104:
  4245                           
  4246                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 170:             ret = lcd_4bit_send_char_data(lcd, *s
      +                          tr++);
  4247   004F7A  C026  F01D         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_char_data@lcd
  4248   004F7E  C029  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  4249   004F82  C02A  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  4250   004F86  0E00               	movlw	low (__smallconst shr (0+16))
  4251   004F88  6EF8               	movwf	tblptru,c
  4252   004F8A  0E0F               	movlw	(high __ramtop+-1)
  4253   004F8C  64F7               	cpfsgt	tblptrh,c
  4254   004F8E  D003               	bra	u13347
  4255   004F90  0008               	tblrd		*
  4256   004F92  50F5               	movf	tablat,w,c
  4257   004F94  D005               	bra	u13340
  4258   004F96                     u13347:
  4259   004F96  CFF6 FFE9          	movff	tblptrl,fsr0l
  4260   004F9A  CFF7 FFEA          	movff	tblptrh,fsr0h
  4261   004F9E  50EF               	movf	indf0,w,c
  4262   004FA0                     u13340:
  4263   004FA0  6E1E               	movwf	lcd_4bit_send_char_data@data^0,c
  4264   004FA2  EC7A  F02B         	call	_lcd_4bit_send_char_data	;wreg free
  4265   004FA6  6E2B               	movwf	lcd_4bit_send_string_pos@ret^0,c
  4266   004FA8  4A29               	infsnz	lcd_4bit_send_string_pos@str^0,f,c
  4267   004FAA  2A2A               	incf	(lcd_4bit_send_string_pos@str+1)^0,f,c
  4268   004FAC                     l12108:
  4269                           
  4270                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 169:         while(*str){
  4271   004FAC  C029  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  4272   004FB0  C02A  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  4273   004FB4  0E00               	movlw	low (__smallconst shr (0+16))
  4274   004FB6  6EF8               	movwf	tblptru,c
  4275   004FB8  0E0F               	movlw	(high __ramtop+-1)
  4276   004FBA  64F7               	cpfsgt	tblptrh,c
  4277   004FBC  D003               	bra	u13357
  4278   004FBE  0008               	tblrd		*
  4279   004FC0  50F5               	movf	tablat,w,c
  4280   004FC2  D005               	bra	u13350
  4281   004FC4                     u13357:
  4282   004FC4  CFF6 FFE9          	movff	tblptrl,fsr0l
  4283   004FC8  CFF7 FFEA          	movff	tblptrh,fsr0h
  4284   004FCC  50EF               	movf	indf0,w,c
  4285   004FCE                     u13350:
  4286   004FCE  0900               	iorlw	0
  4287   004FD0  A4D8               	btfss	status,2,c
  4288   004FD2  EFED  F027         	goto	u13361
  4289   004FD6  EFEF  F027         	goto	u13360
  4290   004FDA                     u13361:
  4291   004FDA  EFBD  F027         	goto	l12104
  4292   004FDE                     u13360:
  4293   004FDE                     l12110:
  4294                           
  4295                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 173:     return ret;
  4296   004FDE  502B               	movf	lcd_4bit_send_string_pos@ret^0,w,c
  4297   004FE0  0012               	return		;funcret
  4298   004FE2                     __end_of_lcd_4bit_send_string_pos:
  4299                           	callstack 0
  4300                           
  4301 ;; *************** function _lcd_4bit_send_char_data_pos *****************
  4302 ;; Defined at:
  4303 ;;		line 119 in file "ECU_layer/chr_lcd/ecu_chr_lcd.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;  lcd             1   37[COMRAM] PTR const struct .
  4306 ;;		 -> lcd_4bit(6), 
  4307 ;;  row             1   38[COMRAM] unsigned char 
  4308 ;;  column          1   39[COMRAM] unsigned char 
  4309 ;;  data            1   40[COMRAM] unsigned char 
  4310 ;; Auto vars:     Size  Location     Type
  4311 ;;  ret             1   41[COMRAM] unsigned char 
  4312 ;; Return value:  Size  Location     Type
  4313 ;;                  1    wreg      unsigned char 
  4314 ;; Registers used:
  4315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4316 ;; Tracked objects:
  4317 ;;		On entry : 0/0
  4318 ;;		On exit  : 0/0
  4319 ;;		Unchanged: 0/0
  4320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4321 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4322 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4324 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4325 ;;Total ram usage:        5 bytes
  4326 ;; Hardware stack levels used: 1
  4327 ;; Hardware stack levels required when called: 8
  4328 ;; This function calls:
  4329 ;;		_lcd_4bit_send_char_data
  4330 ;;		_lcd_4bit_set_cursor
  4331 ;; This function is called by:
  4332 ;;		_main
  4333 ;;		_lcd_4bit_send_custom_char
  4334 ;; This function uses a non-reentrant model
  4335 ;;
  4336                           
  4337                           	psect	text8
  4338   005B82                     __ptext8:
  4339                           	callstack 0
  4340   005B82                     _lcd_4bit_send_char_data_pos:
  4341                           	callstack 22
  4342   005B82                     
  4343                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 121:     if(((void*)0) == lcd){
  4344   005B82  5026               	movf	lcd_4bit_send_char_data_pos@lcd^0,w,c
  4345   005B84  A4D8               	btfss	status,2,c
  4346   005B86  EFC7  F02D         	goto	u13421
  4347   005B8A  EFC9  F02D         	goto	u13420
  4348   005B8E                     u13421:
  4349   005B8E  EFCD  F02D         	goto	l12212
  4350   005B92                     u13420:
  4351   005B92                     
  4352                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 122:         ret = 0;
  4353   005B92  0E00               	movlw	0
  4354   005B94  6E2A               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  4355                           
  4356                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 123:     }
  4357   005B96  EFDD  F02D         	goto	l12214
  4358   005B9A                     l12212:
  4359                           
  4360                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 125:         ret = lcd_4bit_set_cursor(lcd, row, colum
      +                          n);
  4361   005B9A  C026  F020         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_set_cursor@lcd
  4362   005B9E  C027  F021         	movff	lcd_4bit_send_char_data_pos@row,lcd_4bit_set_cursor@row
  4363   005BA2  C028  F022         	movff	lcd_4bit_send_char_data_pos@column,lcd_4bit_set_cursor@coulmn
  4364   005BA6  EC5A  F027         	call	_lcd_4bit_set_cursor	;wreg free
  4365   005BAA  6E2A               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  4366                           
  4367                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 126:         ret = lcd_4bit_send_char_data(lcd, data);
  4368   005BAC  C026  F01D         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_send_char_data@lcd
  4369   005BB0  C029  F01E         	movff	lcd_4bit_send_char_data_pos@data,lcd_4bit_send_char_data@data
  4370   005BB4  EC7A  F02B         	call	_lcd_4bit_send_char_data	;wreg free
  4371   005BB8  6E2A               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  4372   005BBA                     l12214:
  4373                           
  4374                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 128:     return ret;
  4375   005BBA  502A               	movf	lcd_4bit_send_char_data_pos@ret^0,w,c
  4376   005BBC  0012               	return		;funcret
  4377   005BBE                     __end_of_lcd_4bit_send_char_data_pos:
  4378                           	callstack 0
  4379                           
  4380 ;; *************** function _lcd_4bit_set_cursor *****************
  4381 ;; Defined at:
  4382 ;;		line 534 in file "ECU_layer/chr_lcd/ecu_chr_lcd.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;  lcd             1   31[COMRAM] PTR const struct .
  4385 ;;		 -> lcd_4bit(6), 
  4386 ;;  row             1   32[COMRAM] unsigned char 
  4387 ;;  coulmn          1   33[COMRAM] unsigned char 
  4388 ;; Auto vars:     Size  Location     Type
  4389 ;;  ret             1   36[COMRAM] unsigned char 
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  1    wreg      unsigned char 
  4392 ;; Registers used:
  4393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4399 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4400 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4401 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4402 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4403 ;;Total ram usage:        6 bytes
  4404 ;; Hardware stack levels used: 1
  4405 ;; Hardware stack levels required when called: 7
  4406 ;; This function calls:
  4407 ;;		_lcd_4bit_send_command
  4408 ;; This function is called by:
  4409 ;;		_lcd_4bit_send_char_data_pos
  4410 ;;		_lcd_4bit_send_string_pos
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414                           	psect	text9
  4415   004EB4                     __ptext9:
  4416                           	callstack 0
  4417   004EB4                     _lcd_4bit_set_cursor:
  4418                           	callstack 22
  4419   004EB4                     
  4420                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 535:     Std_ReturnType ret = (Std_ReturnType)0x01;
  4421   004EB4  0E01               	movlw	1
  4422   004EB6  6E25               	movwf	lcd_4bit_set_cursor@ret^0,c
  4423   004EB8                     
  4424                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 536:     coulmn--;
  4425   004EB8  0622               	decf	lcd_4bit_set_cursor@coulmn^0,f,c
  4426                           
  4427                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 537:     switch(row){
  4428   004EBA  EF87  F027         	goto	l11798
  4429   004EBE                     l11790:
  4430   004EBE  C020  F01D         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  4431   004EC2  5022               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  4432   004EC4  0F80               	addlw	128
  4433   004EC6  6E1E               	movwf	lcd_4bit_send_command@command^0,c
  4434   004EC8  ECA9  F02B         	call	_lcd_4bit_send_command	;wreg free
  4435   004ECC  6E25               	movwf	lcd_4bit_set_cursor@ret^0,c
  4436   004ECE  EFA4  F027         	goto	l11800
  4437   004ED2                     l11792:
  4438   004ED2  C020  F01D         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  4439   004ED6  5022               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  4440   004ED8  0FC0               	addlw	192
  4441   004EDA  6E1E               	movwf	lcd_4bit_send_command@command^0,c
  4442   004EDC  ECA9  F02B         	call	_lcd_4bit_send_command	;wreg free
  4443   004EE0  6E25               	movwf	lcd_4bit_set_cursor@ret^0,c
  4444   004EE2  EFA4  F027         	goto	l11800
  4445   004EE6                     l11794:
  4446   004EE6  C020  F01D         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  4447   004EEA  5022               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  4448   004EEC  0F94               	addlw	148
  4449   004EEE  6E1E               	movwf	lcd_4bit_send_command@command^0,c
  4450   004EF0  ECA9  F02B         	call	_lcd_4bit_send_command	;wreg free
  4451   004EF4  6E25               	movwf	lcd_4bit_set_cursor@ret^0,c
  4452   004EF6  EFA4  F027         	goto	l11800
  4453   004EFA                     l11796:
  4454   004EFA  C020  F01D         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  4455   004EFE  5022               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  4456   004F00  0FD4               	addlw	212
  4457   004F02  6E1E               	movwf	lcd_4bit_send_command@command^0,c
  4458   004F04  ECA9  F02B         	call	_lcd_4bit_send_command	;wreg free
  4459   004F08  6E25               	movwf	lcd_4bit_set_cursor@ret^0,c
  4460   004F0A  EFA4  F027         	goto	l11800
  4461   004F0E                     l11798:
  4462   004F0E  5021               	movf	lcd_4bit_set_cursor@row^0,w,c
  4463   004F10  6E23               	movwf	??_lcd_4bit_set_cursor^0,c
  4464   004F12  6A24               	clrf	(??_lcd_4bit_set_cursor+1)^0,c
  4465                           
  4466                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4467                           ; Switch size 1, requested type "simple"
  4468                           ; Number of cases is 1, Range of values is 0 to 0
  4469                           ; switch strategies available:
  4470                           ; Name         Instructions Cycles
  4471                           ; simple_byte            4     3 (average)
  4472                           ;	Chosen strategy is simple_byte
  4473   004F14  5024               	movf	(??_lcd_4bit_set_cursor+1)^0,w,c
  4474   004F16  0A00               	xorlw	0	; case 0
  4475   004F18  B4D8               	btfsc	status,2,c
  4476   004F1A  EF91  F027         	goto	l13630
  4477   004F1E  EFA4  F027         	goto	l11800
  4478   004F22                     l13630:
  4479                           
  4480                           ; Switch size 1, requested type "simple"
  4481                           ; Number of cases is 4, Range of values is 1 to 4
  4482                           ; switch strategies available:
  4483                           ; Name         Instructions Cycles
  4484                           ; simple_byte           13     7 (average)
  4485                           ;	Chosen strategy is simple_byte
  4486   004F22  5023               	movf	??_lcd_4bit_set_cursor^0,w,c
  4487   004F24  0A01               	xorlw	1	; case 1
  4488   004F26  B4D8               	btfsc	status,2,c
  4489   004F28  EF5F  F027         	goto	l11790
  4490   004F2C  0A03               	xorlw	3	; case 2
  4491   004F2E  B4D8               	btfsc	status,2,c
  4492   004F30  EF69  F027         	goto	l11792
  4493   004F34  0A01               	xorlw	1	; case 3
  4494   004F36  B4D8               	btfsc	status,2,c
  4495   004F38  EF73  F027         	goto	l11794
  4496   004F3C  0A07               	xorlw	7	; case 4
  4497   004F3E  B4D8               	btfsc	status,2,c
  4498   004F40  EF7D  F027         	goto	l11796
  4499   004F44  EFA4  F027         	goto	l11800
  4500   004F48                     l11800:
  4501                           
  4502                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 544:     return ret;
  4503   004F48  5025               	movf	lcd_4bit_set_cursor@ret^0,w,c
  4504   004F4A  0012               	return		;funcret
  4505   004F4C                     __end_of_lcd_4bit_set_cursor:
  4506                           	callstack 0
  4507                           
  4508 ;; *************** function _lcd_4bit_send_char_data *****************
  4509 ;; Defined at:
  4510 ;;		line 88 in file "ECU_layer/chr_lcd/ecu_chr_lcd.c"
  4511 ;; Parameters:    Size  Location     Type
  4512 ;;  lcd             1   28[COMRAM] PTR const struct .
  4513 ;;		 -> lcd_4bit(6), 
  4514 ;;  data            1   29[COMRAM] unsigned char 
  4515 ;; Auto vars:     Size  Location     Type
  4516 ;;  ret             1   30[COMRAM] unsigned char 
  4517 ;; Return value:  Size  Location     Type
  4518 ;;                  1    wreg      unsigned char 
  4519 ;; Registers used:
  4520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4521 ;; Tracked objects:
  4522 ;;		On entry : 0/0
  4523 ;;		On exit  : 0/0
  4524 ;;		Unchanged: 0/0
  4525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4526 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4527 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4529 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4530 ;;Total ram usage:        3 bytes
  4531 ;; Hardware stack levels used: 1
  4532 ;; Hardware stack levels required when called: 6
  4533 ;; This function calls:
  4534 ;;		_GPIO_pIN_WRITE_LOGIC
  4535 ;;		_lcd_4bit_send_enable_signal
  4536 ;;		_lcd_send_4bits
  4537 ;; This function is called by:
  4538 ;;		_lcd_4bit_send_char_data_pos
  4539 ;;		_lcd_4bit_send_string_pos
  4540 ;;		_lcd_4bit_send_string
  4541 ;;		_lcd_4bit_send_custom_char
  4542 ;; This function uses a non-reentrant model
  4543 ;;
  4544                           
  4545                           	psect	text10
  4546   0056F4                     __ptext10:
  4547                           	callstack 0
  4548   0056F4                     _lcd_4bit_send_char_data:
  4549                           	callstack 23
  4550   0056F4                     
  4551                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 90:     if(((void*)0) == lcd){
  4552   0056F4  501D               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  4553   0056F6  A4D8               	btfss	status,2,c
  4554   0056F8  EF80  F02B         	goto	u12961
  4555   0056FC  EF82  F02B         	goto	u12960
  4556   005700                     u12961:
  4557   005700  EF86  F02B         	goto	l11780
  4558   005704                     u12960:
  4559   005704                     
  4560                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 91:         ret = 0;
  4561   005704  0E00               	movlw	0
  4562   005706  6E1F               	movwf	lcd_4bit_send_char_data@ret^0,c
  4563                           
  4564                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 92:     }
  4565   005708  EFA7  F02B         	goto	l11782
  4566   00570C                     l11780:
  4567                           
  4568                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 96:         ret = GPIO_pIN_WRITE_LOGIC(&(lcd->lcd_rs),
      +                           GPIO_HIGH);
  4569   00570C  C01D  F010         	movff	lcd_4bit_send_char_data@lcd,GPIO_pIN_WRITE_LOGIC@config_pin
  4570   005710  6A11               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  4571   005712  0E01               	movlw	1
  4572   005714  6E12               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  4573   005716  EC73  F01F         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  4574   00571A  6E1F               	movwf	lcd_4bit_send_char_data@ret^0,c
  4575                           
  4576                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 98:         ret = lcd_send_4bits(lcd, data >> 4);
  4577   00571C  C01D  F019         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  4578   005720  381E               	swapf	lcd_4bit_send_char_data@data^0,w,c
  4579   005722  0B0F               	andlw	15
  4580   005724  6E1A               	movwf	lcd_send_4bits@_data_command^0,c
  4581   005726  EC3A  F02A         	call	_lcd_send_4bits	;wreg free
  4582   00572A  6E1F               	movwf	lcd_4bit_send_char_data@ret^0,c
  4583                           
  4584                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 100:         ret = lcd_4bit_send_enable_signal(lcd);
  4585   00572C  C01D  F019         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  4586   005730  ECFD  F02D         	call	_lcd_4bit_send_enable_signal	;wreg free
  4587   005734  6E1F               	movwf	lcd_4bit_send_char_data@ret^0,c
  4588                           
  4589                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 102:         ret = lcd_send_4bits(lcd, data);
  4590   005736  C01D  F019         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  4591   00573A  C01E  F01A         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@_data_command
  4592   00573E  EC3A  F02A         	call	_lcd_send_4bits	;wreg free
  4593   005742  6E1F               	movwf	lcd_4bit_send_char_data@ret^0,c
  4594                           
  4595                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 104:         ret = lcd_4bit_send_enable_signal(lcd);
  4596   005744  C01D  F019         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  4597   005748  ECFD  F02D         	call	_lcd_4bit_send_enable_signal	;wreg free
  4598   00574C  6E1F               	movwf	lcd_4bit_send_char_data@ret^0,c
  4599   00574E                     l11782:
  4600                           
  4601                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 106:     return ret;
  4602   00574E  501F               	movf	lcd_4bit_send_char_data@ret^0,w,c
  4603   005750  0012               	return		;funcret
  4604   005752                     __end_of_lcd_4bit_send_char_data:
  4605                           	callstack 0
  4606                           
  4607 ;; *************** function _intitialized_functions *****************
  4608 ;; Defined at:
  4609 ;;		line 336 in file "main.c"
  4610 ;; Parameters:    Size  Location     Type
  4611 ;;		None
  4612 ;; Auto vars:     Size  Location     Type
  4613 ;;		None
  4614 ;; Return value:  Size  Location     Type
  4615 ;;                  1    wreg      void 
  4616 ;; Registers used:
  4617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4618 ;; Tracked objects:
  4619 ;;		On entry : 0/0
  4620 ;;		On exit  : 0/0
  4621 ;;		Unchanged: 0/0
  4622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4627 ;;Total ram usage:        0 bytes
  4628 ;; Hardware stack levels used: 1
  4629 ;; Hardware stack levels required when called: 8
  4630 ;; This function calls:
  4631 ;;		_ADC_inti
  4632 ;;		_GPIO_pIN_INTIALIZE
  4633 ;;		_Interrupt_Intx_Inti
  4634 ;;		_MSSP_I2C_Init
  4635 ;;		_Timer1_init
  4636 ;;		_Timer2_init
  4637 ;;		_ccp1_init
  4638 ;;		_ccp2_init
  4639 ;;		_lcd_4bit_intialize
  4640 ;;		_motor_intialize
  4641 ;;		_usart_ASYNC_init
  4642 ;; This function is called by:
  4643 ;;		_main
  4644 ;; This function uses a non-reentrant model
  4645 ;;
  4646                           
  4647                           	psect	text11
  4648   00461E                     __ptext11:
  4649                           	callstack 0
  4650   00461E                     _intitialized_functions:
  4651                           	callstack 22
  4652   00461E                     
  4653                           ;main.c: 337:     ret = ADC_inti(&ADC_);
  4654   00461E  0E60               	movlw	low _ADC_
  4655   004620  6E13               	movwf	ADC_inti@ADC_conf^0,c
  4656   004622  0E01               	movlw	high _ADC_
  4657   004624  6E14               	movwf	(ADC_inti@ADC_conf+1)^0,c
  4658   004626  ECA7  F024         	call	_ADC_inti	;wreg free
  4659   00462A  0100               	movlb	0	; () banked
  4660   00462C  6FFF               	movwf	_ret& (0+255),b
  4661                           
  4662                           ;main.c: 338:     ret = MSSP_I2C_Init(&mssp_i2c);
  4663   00462E  0E31               	movlw	low _mssp_i2c
  4664   004630  0101               	movlb	1	; () banked
  4665   004632  6F9F               	movwf	MSSP_I2C_Init@i2c_obj& (0+255),b
  4666   004634  0E01               	movlw	high _mssp_i2c
  4667   004636  6FA0               	movwf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),b
  4668   004638  EC5F  F01C         	call	_MSSP_I2C_Init	;wreg free
  4669   00463C  0100               	movlb	0	; () banked
  4670   00463E  6FFF               	movwf	_ret& (0+255),b
  4671   004640                     
  4672                           ; BSR set to: 0
  4673                           ;main.c: 339:     ret = lcd_4bit_intialize(&lcd_4bit);
  4674   004640  0EEC               	movlw	low _lcd_4bit
  4675   004642  6E20               	movwf	lcd_4bit_intialize@lcd^0,c
  4676   004644  EC26  F022         	call	_lcd_4bit_intialize	;wreg free
  4677   004648  0100               	movlb	0	; () banked
  4678   00464A  6FFF               	movwf	_ret& (0+255),b
  4679   00464C                     
  4680                           ; BSR set to: 0
  4681                           ;main.c: 340:     ret = GPIO_pIN_INTIALIZE(&LED_ROOM_1);
  4682   00464C  0E6F               	movlw	low _LED_ROOM_1
  4683   00464E  6E19               	movwf	GPIO_pIN_INTIALIZE@config_pin^0,c
  4684   004650  6A1A               	clrf	(GPIO_pIN_INTIALIZE@config_pin+1)^0,c
  4685   004652  ECA9  F02A         	call	_GPIO_pIN_INTIALIZE	;wreg free
  4686   004656  0100               	movlb	0	; () banked
  4687   004658  6FFF               	movwf	_ret& (0+255),b
  4688   00465A                     
  4689                           ; BSR set to: 0
  4690                           ;main.c: 341:     ret = GPIO_pIN_INTIALIZE(&leds_1);
  4691   00465A  0E6E               	movlw	low _leds_1
  4692   00465C  6E19               	movwf	GPIO_pIN_INTIALIZE@config_pin^0,c
  4693   00465E  6A1A               	clrf	(GPIO_pIN_INTIALIZE@config_pin+1)^0,c
  4694   004660  ECA9  F02A         	call	_GPIO_pIN_INTIALIZE	;wreg free
  4695   004664  0100               	movlb	0	; () banked
  4696   004666  6FFF               	movwf	_ret& (0+255),b
  4697   004668                     
  4698                           ; BSR set to: 0
  4699                           ;main.c: 342:     ret = Interrupt_Intx_Inti(&INT_0);
  4700   004668  0E5A               	movlw	low _INT_0
  4701   00466A  6E20               	movwf	Interrupt_Intx_Inti@INTERRUPT_INTX^0,c
  4702   00466C  0E01               	movlw	high _INT_0
  4703   00466E  6E21               	movwf	(Interrupt_Intx_Inti@INTERRUPT_INTX+1)^0,c
  4704   004670  EC72  F02A         	call	_Interrupt_Intx_Inti	;wreg free
  4705   004674  0100               	movlb	0	; () banked
  4706   004676  6FFF               	movwf	_ret& (0+255),b
  4707   004678                     
  4708                           ; BSR set to: 0
  4709                           ;main.c: 343:     ret = Interrupt_Intx_Inti(&INT_1);
  4710   004678  0E54               	movlw	low _INT_1
  4711   00467A  6E20               	movwf	Interrupt_Intx_Inti@INTERRUPT_INTX^0,c
  4712   00467C  0E01               	movlw	high _INT_1
  4713   00467E  6E21               	movwf	(Interrupt_Intx_Inti@INTERRUPT_INTX+1)^0,c
  4714   004680  EC72  F02A         	call	_Interrupt_Intx_Inti	;wreg free
  4715   004684  0100               	movlb	0	; () banked
  4716   004686  6FFF               	movwf	_ret& (0+255),b
  4717   004688                     
  4718                           ; BSR set to: 0
  4719                           ;main.c: 344:     ret = Timer1_init(&Timer1);
  4720   004688  0E66               	movlw	low _Timer1
  4721   00468A  6E12               	movwf	Timer1_init@Timer1^0,c
  4722   00468C  0E01               	movlw	high _Timer1
  4723   00468E  6E13               	movwf	(Timer1_init@Timer1+1)^0,c
  4724   004690  EC46  F024         	call	_Timer1_init	;wreg free
  4725   004694  0100               	movlb	0	; () banked
  4726   004696  6FFF               	movwf	_ret& (0+255),b
  4727                           
  4728                           ;main.c: 345:     ret = motor_intialize(&motor_1);
  4729   004698  0EF4               	movlw	low _motor_1
  4730   00469A  6E1D               	movwf	motor_intialize@motor_pin^0,c
  4731   00469C  ECDF  F02D         	call	_motor_intialize	;wreg free
  4732   0046A0  0100               	movlb	0	; () banked
  4733   0046A2  6FFF               	movwf	_ret& (0+255),b
  4734                           
  4735                           ;main.c: 346:     ret = motor_intialize(&motor_2);
  4736   0046A4  0EF2               	movlw	low _motor_2
  4737   0046A6  6E1D               	movwf	motor_intialize@motor_pin^0,c
  4738   0046A8  ECDF  F02D         	call	_motor_intialize	;wreg free
  4739   0046AC  0100               	movlb	0	; () banked
  4740   0046AE  6FFF               	movwf	_ret& (0+255),b
  4741   0046B0                     
  4742                           ; BSR set to: 0
  4743                           ;main.c: 347:     ret = usart_ASYNC_init(&usart_1);
  4744   0046B0  0E1F               	movlw	low _usart_1
  4745   0046B2  0101               	movlb	1	; () banked
  4746   0046B4  6FA9               	movwf	usart_ASYNC_init@usart& (0+255),b
  4747   0046B6  0E01               	movlw	high _usart_1
  4748   0046B8  6FAA               	movwf	(usart_ASYNC_init@usart+1)& (0+255),b
  4749   0046BA  ECD8  F02B         	call	_usart_ASYNC_init	;wreg free
  4750   0046BE  0100               	movlb	0	; () banked
  4751   0046C0  6FFF               	movwf	_ret& (0+255),b
  4752   0046C2                     
  4753                           ; BSR set to: 0
  4754                           ;main.c: 348:     ret = Timer2_init(&Timer2);
  4755   0046C2  0E97               	movlw	low _Timer2
  4756   0046C4  6E10               	movwf	Timer2_init@Timer2^0,c
  4757   0046C6  0E01               	movlw	high _Timer2
  4758   0046C8  6E11               	movwf	(Timer2_init@Timer2+1)^0,c
  4759   0046CA  EC0B  F027         	call	_Timer2_init	;wreg free
  4760   0046CE  0100               	movlb	0	; () banked
  4761   0046D0  6FFF               	movwf	_ret& (0+255),b
  4762                           
  4763                           ;main.c: 349:     ret = ccp1_init(&ccp1_);
  4764   0046D2  0E4A               	movlw	low _ccp1_
  4765   0046D4  6E29               	movwf	ccp1_init@ccp1_^0,c
  4766   0046D6  0E01               	movlw	high _ccp1_
  4767   0046D8  6E2A               	movwf	(ccp1_init@ccp1_+1)^0,c
  4768   0046DA  ECAB  F01B         	call	_ccp1_init	;wreg free
  4769   0046DE  0100               	movlb	0	; () banked
  4770   0046E0  6FFF               	movwf	_ret& (0+255),b
  4771                           
  4772                           ;main.c: 350:     ret = ccp2_init(&ccp2_);
  4773   0046E2  0E40               	movlw	low _ccp2_
  4774   0046E4  6E29               	movwf	ccp2_init@ccp2_^0,c
  4775   0046E6  0E01               	movlw	high _ccp2_
  4776   0046E8  6E2A               	movwf	(ccp2_init@ccp2_+1)^0,c
  4777   0046EA  ECF7  F01A         	call	_ccp2_init	;wreg free
  4778   0046EE  0100               	movlb	0	; () banked
  4779   0046F0  6FFF               	movwf	_ret& (0+255),b
  4780   0046F2                     
  4781                           ; BSR set to: 0
  4782   0046F2  0012               	return		;funcret
  4783   0046F4                     __end_of_intitialized_functions:
  4784                           	callstack 0
  4785                           
  4786 ;; *************** function _usart_ASYNC_init *****************
  4787 ;; Defined at:
  4788 ;;		line 21 in file "MKAL_layer/USART/hal_usart.c"
  4789 ;; Parameters:    Size  Location     Type
  4790 ;;  usart           2   14[BANK1 ] PTR const struct .
  4791 ;;		 -> usart_1(18), 
  4792 ;; Auto vars:     Size  Location     Type
  4793 ;;  ret             1    8[BANK0 ] unsigned char 
  4794 ;; Return value:  Size  Location     Type
  4795 ;;                  1    wreg      unsigned char 
  4796 ;; Registers used:
  4797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4798 ;; Tracked objects:
  4799 ;;		On entry : 0/0
  4800 ;;		On exit  : 0/0
  4801 ;;		Unchanged: 0/0
  4802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4803 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4804 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4806 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4807 ;;Total ram usage:        3 bytes
  4808 ;; Hardware stack levels used: 1
  4809 ;; Hardware stack levels required when called: 6
  4810 ;; This function calls:
  4811 ;;		_baudrate_calculate
  4812 ;;		_usart_async_rx_int
  4813 ;;		_usart_async_tx_int
  4814 ;; This function is called by:
  4815 ;;		_intitialized_functions
  4816 ;; This function uses a non-reentrant model
  4817 ;;
  4818                           
  4819                           	psect	text12
  4820   0057B0                     __ptext12:
  4821                           	callstack 0
  4822   0057B0                     _usart_ASYNC_init:
  4823                           	callstack 23
  4824   0057B0                     
  4825                           ;MKAL_layer/USART/hal_usart.c: 23:     if (((void*)0) == usart){
  4826   0057B0  0101               	movlb	1	; () banked
  4827   0057B2  51A9               	movf	usart_ASYNC_init@usart& (0+255),w,b
  4828   0057B4  11AA               	iorwf	(usart_ASYNC_init@usart+1)& (0+255),w,b
  4829   0057B6  A4D8               	btfss	status,2,c
  4830   0057B8  EFE0  F02B         	goto	u12771
  4831   0057BC  EFE2  F02B         	goto	u12770
  4832   0057C0                     u12771:
  4833   0057C0  EFE7  F02B         	goto	l1760
  4834   0057C4                     u12770:
  4835   0057C4                     
  4836                           ; BSR set to: 1
  4837                           ;MKAL_layer/USART/hal_usart.c: 24:         ret =(Std_ReturnType)0x00;
  4838   0057C4  0E00               	movlw	0
  4839   0057C6  0100               	movlb	0	; () banked
  4840   0057C8  6FFE               	movwf	usart_ASYNC_init@ret& (0+255),b
  4841                           
  4842                           ;MKAL_layer/USART/hal_usart.c: 25:     }
  4843   0057CA  EF00  F02C         	goto	l11626
  4844   0057CE                     l1760:
  4845                           
  4846                           ; BSR set to: 1
  4847                           ;MKAL_layer/USART/hal_usart.c: 27:     {;MKAL_layer/USART/hal_usart.c: 29:         RCSTA
      +                          bits.SPEN =0;
  4848   0057CE  9EAB               	bcf	171,7,c	;volatile
  4849   0057D0                     
  4850                           ; BSR set to: 1
  4851                           ;MKAL_layer/USART/hal_usart.c: 31:         baudrate_calculate(usart);
  4852   0057D0  C1A9  F19D         	movff	usart_ASYNC_init@usart,baudrate_calculate@usart
  4853   0057D4  C1AA  F19E         	movff	usart_ASYNC_init@usart+1,baudrate_calculate@usart+1
  4854   0057D8  EC73  F00E         	call	_baudrate_calculate	;wreg free
  4855   0057DC                     
  4856                           ;MKAL_layer/USART/hal_usart.c: 33:         TRISCbits.RC6 = GPIO_INPUT;
  4857   0057DC  8C94               	bsf	148,6,c	;volatile
  4858   0057DE                     
  4859                           ;MKAL_layer/USART/hal_usart.c: 34:         TRISCbits.RC7 = GPIO_INPUT;
  4860   0057DE  8E94               	bsf	148,7,c	;volatile
  4861                           
  4862                           ;MKAL_layer/USART/hal_usart.c: 35:         usart_async_tx_int(usart);
  4863   0057E0  C1A9  F010         	movff	usart_ASYNC_init@usart,usart_async_tx_int@usart
  4864   0057E4  C1AA  F011         	movff	usart_ASYNC_init@usart+1,usart_async_tx_int@usart+1
  4865   0057E8  EC7A  F023         	call	_usart_async_tx_int	;wreg free
  4866                           
  4867                           ;MKAL_layer/USART/hal_usart.c: 36:         usart_async_rx_int(usart);
  4868   0057EC  C1A9  F010         	movff	usart_ASYNC_init@usart,usart_async_rx_int@usart
  4869   0057F0  C1AA  F011         	movff	usart_ASYNC_init@usart+1,usart_async_rx_int@usart+1
  4870   0057F4  ECA9  F021         	call	_usart_async_rx_int	;wreg free
  4871   0057F8                     
  4872                           ;MKAL_layer/USART/hal_usart.c: 38:         RCSTAbits.SPEN =1;
  4873   0057F8  8EAB               	bsf	171,7,c	;volatile
  4874   0057FA                     
  4875                           ;MKAL_layer/USART/hal_usart.c: 39:         ret = (Std_ReturnType)0x01;
  4876   0057FA  0E01               	movlw	1
  4877   0057FC  0100               	movlb	0	; () banked
  4878   0057FE  6FFE               	movwf	usart_ASYNC_init@ret& (0+255),b
  4879   005800                     l11626:
  4880                           
  4881                           ; BSR set to: 0
  4882                           ;MKAL_layer/USART/hal_usart.c: 41:     return ret;
  4883   005800  51FE               	movf	usart_ASYNC_init@ret& (0+255),w,b
  4884   005802                     
  4885                           ; BSR set to: 0
  4886   005802  0012               	return		;funcret
  4887   005804                     __end_of_usart_ASYNC_init:
  4888                           	callstack 0
  4889                           
  4890 ;; *************** function _usart_async_tx_int *****************
  4891 ;; Defined at:
  4892 ;;		line 168 in file "MKAL_layer/USART/hal_usart.c"
  4893 ;; Parameters:    Size  Location     Type
  4894 ;;  usart           2   15[COMRAM] PTR const struct .
  4895 ;;		 -> usart_1(18), 
  4896 ;; Auto vars:     Size  Location     Type
  4897 ;;		None
  4898 ;; Return value:  Size  Location     Type
  4899 ;;                  1    wreg      void 
  4900 ;; Registers used:
  4901 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4902 ;; Tracked objects:
  4903 ;;		On entry : 0/0
  4904 ;;		On exit  : 0/0
  4905 ;;		Unchanged: 0/0
  4906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4907 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4910 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4911 ;;Total ram usage:        2 bytes
  4912 ;; Hardware stack levels used: 1
  4913 ;; Hardware stack levels required when called: 4
  4914 ;; This function calls:
  4915 ;;		Nothing
  4916 ;; This function is called by:
  4917 ;;		_usart_ASYNC_init
  4918 ;; This function uses a non-reentrant model
  4919 ;;
  4920                           
  4921                           	psect	text13
  4922   0046F4                     __ptext13:
  4923                           	callstack 0
  4924   0046F4                     _usart_async_tx_int:
  4925                           	callstack 24
  4926   0046F4                     
  4927                           ;MKAL_layer/USART/hal_usart.c: 169:     if(usart->usart_tx.usart_tx_enable == 1){
  4928   0046F4  EE20 F005          	lfsr	2,5
  4929   0046F8  5010               	movf	usart_async_tx_int@usart^0,w,c
  4930   0046FA  26D9               	addwf	fsr2l,f,c
  4931   0046FC  5011               	movf	(usart_async_tx_int@usart+1)^0,w,c
  4932   0046FE  22DA               	addwfc	fsr2h,f,c
  4933   004700  AADF               	btfss	indf2,5,c
  4934   004702  EF85  F023         	goto	u12401
  4935   004706  EF87  F023         	goto	u12400
  4936   00470A                     u12401:
  4937   00470A  EFD5  F023         	goto	l11316
  4938   00470E                     u12400:
  4939   00470E                     
  4940                           ;MKAL_layer/USART/hal_usart.c: 170:         TXSTAbits.TXEN =1;
  4941   00470E  8AAC               	bsf	172,5,c	;volatile
  4942   004710                     
  4943                           ;MKAL_layer/USART/hal_usart.c: 171:         if(usart->usart_tx.usart_tx_interrupt_enable
      +                           == 1){
  4944   004710  EE20 F005          	lfsr	2,5
  4945   004714  5010               	movf	usart_async_tx_int@usart^0,w,c
  4946   004716  26D9               	addwf	fsr2l,f,c
  4947   004718  5011               	movf	(usart_async_tx_int@usart+1)^0,w,c
  4948   00471A  22DA               	addwfc	fsr2h,f,c
  4949   00471C  ACDF               	btfss	indf2,6,c
  4950   00471E  EF93  F023         	goto	u12411
  4951   004722  EF95  F023         	goto	u12410
  4952   004726                     u12411:
  4953   004726  EFA5  F023         	goto	l11304
  4954   00472A                     u12410:
  4955   00472A                     
  4956                           ;MKAL_layer/USART/hal_usart.c: 172:             (PIE1bits.TXIE = 1);
  4957   00472A  889D               	bsf	157,4,c	;volatile
  4958   00472C                     
  4959                           ;MKAL_layer/USART/hal_usart.c: 173:             USART_TX_Interrupthandler = usart->USART
      +                          _TX_INTERRUPT_HANDLER;
  4960   00472C  EE20 F00A          	lfsr	2,10
  4961   004730  5010               	movf	usart_async_tx_int@usart^0,w,c
  4962   004732  26D9               	addwf	fsr2l,f,c
  4963   004734  5011               	movf	(usart_async_tx_int@usart+1)^0,w,c
  4964   004736  22DA               	addwfc	fsr2h,f,c
  4965   004738  CFDE F08A          	movff	postinc2,_USART_TX_Interrupthandler
  4966   00473C  CFDD F08B          	movff	postdec2,_USART_TX_Interrupthandler+1
  4967   004740                     
  4968                           ;MKAL_layer/USART/hal_usart.c: 175:             (PIE1bits.TXIE = 1);
  4969   004740  889D               	bsf	157,4,c	;volatile
  4970   004742                     
  4971                           ;MKAL_layer/USART/hal_usart.c: 188:         (INTCONbits.GIE =1);
  4972   004742  8EF2               	bsf	242,7,c	;volatile
  4973   004744                     
  4974                           ;MKAL_layer/USART/hal_usart.c: 189:         (INTCONbits.PEIE =1);
  4975   004744  8CF2               	bsf	242,6,c	;volatile
  4976                           
  4977                           ;MKAL_layer/USART/hal_usart.c: 193:         }
  4978   004746  EFB3  F023         	goto	l11308
  4979   00474A                     l11304:
  4980   00474A  EE20 F005          	lfsr	2,5
  4981   00474E  5010               	movf	usart_async_tx_int@usart^0,w,c
  4982   004750  26D9               	addwf	fsr2l,f,c
  4983   004752  5011               	movf	(usart_async_tx_int@usart+1)^0,w,c
  4984   004754  22DA               	addwfc	fsr2h,f,c
  4985   004756  BCDF               	btfsc	indf2,6,c
  4986   004758  EFB0  F023         	goto	u12421
  4987   00475C  EFB2  F023         	goto	u12420
  4988   004760                     u12421:
  4989   004760  EFB3  F023         	goto	l11308
  4990   004764                     u12420:
  4991   004764                     
  4992                           ;MKAL_layer/USART/hal_usart.c: 195:             (PIE1bits.TXIE = 0);
  4993   004764  989D               	bcf	157,4,c	;volatile
  4994   004766                     l11308:
  4995                           
  4996                           ;MKAL_layer/USART/hal_usart.c: 198:         if(usart->usart_tx.usart_tx_9bits_enable == 
      +                          1){
  4997   004766  EE20 F005          	lfsr	2,5
  4998   00476A  5010               	movf	usart_async_tx_int@usart^0,w,c
  4999   00476C  26D9               	addwf	fsr2l,f,c
  5000   00476E  5011               	movf	(usart_async_tx_int@usart+1)^0,w,c
  5001   004770  22DA               	addwfc	fsr2h,f,c
  5002   004772  AEDF               	btfss	indf2,7,c
  5003   004774  EFBE  F023         	goto	u12431
  5004   004778  EFC0  F023         	goto	u12430
  5005   00477C                     u12431:
  5006   00477C  EFC3  F023         	goto	l11312
  5007   004780                     u12430:
  5008   004780                     
  5009                           ;MKAL_layer/USART/hal_usart.c: 199:             TXSTAbits.TX9 = 1;
  5010   004780  8CAC               	bsf	172,6,c	;volatile
  5011                           
  5012                           ;MKAL_layer/USART/hal_usart.c: 200:         }
  5013   004782  EFE3  F023         	goto	l1818
  5014   004786                     l11312:
  5015   004786  EE20 F005          	lfsr	2,5
  5016   00478A  5010               	movf	usart_async_tx_int@usart^0,w,c
  5017   00478C  26D9               	addwf	fsr2l,f,c
  5018   00478E  5011               	movf	(usart_async_tx_int@usart+1)^0,w,c
  5019   004790  22DA               	addwfc	fsr2h,f,c
  5020   004792  BCDF               	btfsc	indf2,6,c
  5021   004794  EFCE  F023         	goto	u12441
  5022   004798  EFD0  F023         	goto	u12440
  5023   00479C                     u12441:
  5024   00479C  EFD3  F023         	goto	l1812
  5025   0047A0                     u12440:
  5026   0047A0                     
  5027                           ;MKAL_layer/USART/hal_usart.c: 202:             TXSTAbits.TX9 = 0;
  5028   0047A0  9CAC               	bcf	172,6,c	;volatile
  5029                           
  5030                           ;MKAL_layer/USART/hal_usart.c: 203:         }
  5031   0047A2  EFE3  F023         	goto	l1818
  5032   0047A6                     l1812:
  5033                           
  5034                           ;MKAL_layer/USART/hal_usart.c: 205:     }
  5035   0047A6  EFE3  F023         	goto	l1818
  5036   0047AA                     l11316:
  5037   0047AA  EE20 F005          	lfsr	2,5
  5038   0047AE  5010               	movf	usart_async_tx_int@usart^0,w,c
  5039   0047B0  26D9               	addwf	fsr2l,f,c
  5040   0047B2  5011               	movf	(usart_async_tx_int@usart+1)^0,w,c
  5041   0047B4  22DA               	addwfc	fsr2h,f,c
  5042   0047B6  AADF               	btfss	indf2,5,c
  5043   0047B8  EFE0  F023         	goto	u12451
  5044   0047BC  EFE2  F023         	goto	u12450
  5045   0047C0                     u12451:
  5046   0047C0  EFE3  F023         	goto	l1818
  5047   0047C4                     u12450:
  5048   0047C4                     
  5049                           ;MKAL_layer/USART/hal_usart.c: 207:         TXSTAbits.TXEN =1;
  5050   0047C4  8AAC               	bsf	172,5,c	;volatile
  5051   0047C6                     l1818:
  5052   0047C6  0012               	return		;funcret
  5053   0047C8                     __end_of_usart_async_tx_int:
  5054                           	callstack 0
  5055                           
  5056 ;; *************** function _usart_async_rx_int *****************
  5057 ;; Defined at:
  5058 ;;		line 212 in file "MKAL_layer/USART/hal_usart.c"
  5059 ;; Parameters:    Size  Location     Type
  5060 ;;  usart           2   15[COMRAM] PTR const struct .
  5061 ;;		 -> usart_1(18), 
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;		None
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  1    wreg      void 
  5066 ;; Registers used:
  5067 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5073 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5076 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5077 ;;Total ram usage:        2 bytes
  5078 ;; Hardware stack levels used: 1
  5079 ;; Hardware stack levels required when called: 4
  5080 ;; This function calls:
  5081 ;;		Nothing
  5082 ;; This function is called by:
  5083 ;;		_usart_ASYNC_init
  5084 ;; This function uses a non-reentrant model
  5085 ;;
  5086                           
  5087                           	psect	text14
  5088   004352                     __ptext14:
  5089                           	callstack 0
  5090   004352                     _usart_async_rx_int:
  5091                           	callstack 24
  5092   004352                     
  5093                           ;MKAL_layer/USART/hal_usart.c: 213:     if(usart->usart_rx.usart_rx_enable == 1){
  5094   004352  EE20 F007          	lfsr	2,7
  5095   004356  5010               	movf	usart_async_rx_int@usart^0,w,c
  5096   004358  26D9               	addwf	fsr2l,f,c
  5097   00435A  5011               	movf	(usart_async_rx_int@usart+1)^0,w,c
  5098   00435C  22DA               	addwfc	fsr2h,f,c
  5099   00435E  AADF               	btfss	indf2,5,c
  5100   004360  EFB4  F021         	goto	u12461
  5101   004364  EFB6  F021         	goto	u12460
  5102   004368                     u12461:
  5103   004368  EF17  F022         	goto	l11346
  5104   00436C                     u12460:
  5105   00436C                     
  5106                           ;MKAL_layer/USART/hal_usart.c: 214:         RCSTAbits.CREN =1;
  5107   00436C  88AB               	bsf	171,4,c	;volatile
  5108   00436E                     
  5109                           ;MKAL_layer/USART/hal_usart.c: 215:         if(usart->usart_rx.usart_rx_interrupt_enable
      +                           == 1){
  5110   00436E  EE20 F007          	lfsr	2,7
  5111   004372  5010               	movf	usart_async_rx_int@usart^0,w,c
  5112   004374  26D9               	addwf	fsr2l,f,c
  5113   004376  5011               	movf	(usart_async_rx_int@usart+1)^0,w,c
  5114   004378  22DA               	addwfc	fsr2h,f,c
  5115   00437A  ACDF               	btfss	indf2,6,c
  5116   00437C  EFC2  F021         	goto	u12471
  5117   004380  EFC4  F021         	goto	u12470
  5118   004384                     u12471:
  5119   004384  EFE7  F021         	goto	l11334
  5120   004388                     u12470:
  5121   004388                     
  5122                           ;MKAL_layer/USART/hal_usart.c: 216:             (PIE1bits.RCIE = 1);
  5123   004388  8A9D               	bsf	157,5,c	;volatile
  5124   00438A                     
  5125                           ;MKAL_layer/USART/hal_usart.c: 218:             USART_RX_Interrupthandler = usart->USART
      +                          _RX_INTERRUPT_HANDLER;
  5126   00438A  EE20 F00C          	lfsr	2,12
  5127   00438E  5010               	movf	usart_async_rx_int@usart^0,w,c
  5128   004390  26D9               	addwf	fsr2l,f,c
  5129   004392  5011               	movf	(usart_async_rx_int@usart+1)^0,w,c
  5130   004394  22DA               	addwfc	fsr2h,f,c
  5131   004396  CFDE F088          	movff	postinc2,_USART_RX_Interrupthandler
  5132   00439A  CFDD F089          	movff	postdec2,_USART_RX_Interrupthandler+1
  5133                           
  5134                           ;MKAL_layer/USART/hal_usart.c: 219:             USART_FRAMERROR_Interrupthandler = usart
      +                          ->USART_FRAMING_ERROR_INTERRUPT_HANDLER;
  5135   00439E  EE20 F00E          	lfsr	2,14
  5136   0043A2  5010               	movf	usart_async_rx_int@usart^0,w,c
  5137   0043A4  26D9               	addwf	fsr2l,f,c
  5138   0043A6  5011               	movf	(usart_async_rx_int@usart+1)^0,w,c
  5139   0043A8  22DA               	addwfc	fsr2h,f,c
  5140   0043AA  CFDE F086          	movff	postinc2,_USART_FRAMERROR_Interrupthandler
  5141   0043AE  CFDD F087          	movff	postdec2,_USART_FRAMERROR_Interrupthandler+1
  5142                           
  5143                           ;MKAL_layer/USART/hal_usart.c: 220:             USART_OVERRUN_Interrupthandler = usart->
      +                          USART_OVERRUN_ERROR_INTERRUPT_HANDLER;
  5144   0043B2  EE20 F010          	lfsr	2,16
  5145   0043B6  5010               	movf	usart_async_rx_int@usart^0,w,c
  5146   0043B8  26D9               	addwf	fsr2l,f,c
  5147   0043BA  5011               	movf	(usart_async_rx_int@usart+1)^0,w,c
  5148   0043BC  22DA               	addwfc	fsr2h,f,c
  5149   0043BE  CFDE F084          	movff	postinc2,_USART_OVERRUN_Interrupthandler
  5150   0043C2  CFDD F085          	movff	postdec2,_USART_OVERRUN_Interrupthandler+1
  5151   0043C6                     
  5152                           ;MKAL_layer/USART/hal_usart.c: 233:         (INTCONbits.GIE =1);
  5153   0043C6  8EF2               	bsf	242,7,c	;volatile
  5154   0043C8                     
  5155                           ;MKAL_layer/USART/hal_usart.c: 234:         (INTCONbits.PEIE =1);
  5156   0043C8  8CF2               	bsf	242,6,c	;volatile
  5157                           
  5158                           ;MKAL_layer/USART/hal_usart.c: 238:         }
  5159   0043CA  EFF5  F021         	goto	l11338
  5160   0043CE                     l11334:
  5161   0043CE  EE20 F007          	lfsr	2,7
  5162   0043D2  5010               	movf	usart_async_rx_int@usart^0,w,c
  5163   0043D4  26D9               	addwf	fsr2l,f,c
  5164   0043D6  5011               	movf	(usart_async_rx_int@usart+1)^0,w,c
  5165   0043D8  22DA               	addwfc	fsr2h,f,c
  5166   0043DA  BCDF               	btfsc	indf2,6,c
  5167   0043DC  EFF2  F021         	goto	u12481
  5168   0043E0  EFF4  F021         	goto	u12480
  5169   0043E4                     u12481:
  5170   0043E4  EFF5  F021         	goto	l11338
  5171   0043E8                     u12480:
  5172   0043E8                     
  5173                           ;MKAL_layer/USART/hal_usart.c: 240:             (PIE1bits.RCIE = 0);
  5174   0043E8  9A9D               	bcf	157,5,c	;volatile
  5175   0043EA                     l11338:
  5176                           
  5177                           ;MKAL_layer/USART/hal_usart.c: 243:         if(usart->usart_rx.usart_rx_9bits_enable == 
      +                          1){
  5178   0043EA  EE20 F007          	lfsr	2,7
  5179   0043EE  5010               	movf	usart_async_rx_int@usart^0,w,c
  5180   0043F0  26D9               	addwf	fsr2l,f,c
  5181   0043F2  5011               	movf	(usart_async_rx_int@usart+1)^0,w,c
  5182   0043F4  22DA               	addwfc	fsr2h,f,c
  5183   0043F6  AEDF               	btfss	indf2,7,c
  5184   0043F8  EF00  F022         	goto	u12491
  5185   0043FC  EF02  F022         	goto	u12490
  5186   004400                     u12491:
  5187   004400  EF05  F022         	goto	l11342
  5188   004404                     u12490:
  5189   004404                     
  5190                           ;MKAL_layer/USART/hal_usart.c: 244:             RCSTAbits.RX9 = 1;
  5191   004404  8CAB               	bsf	171,6,c	;volatile
  5192                           
  5193                           ;MKAL_layer/USART/hal_usart.c: 245:         }
  5194   004406  EF25  F022         	goto	l1833
  5195   00440A                     l11342:
  5196   00440A  EE20 F007          	lfsr	2,7
  5197   00440E  5010               	movf	usart_async_rx_int@usart^0,w,c
  5198   004410  26D9               	addwf	fsr2l,f,c
  5199   004412  5011               	movf	(usart_async_rx_int@usart+1)^0,w,c
  5200   004414  22DA               	addwfc	fsr2h,f,c
  5201   004416  BCDF               	btfsc	indf2,6,c
  5202   004418  EF10  F022         	goto	u12501
  5203   00441C  EF12  F022         	goto	u12500
  5204   004420                     u12501:
  5205   004420  EF15  F022         	goto	l1827
  5206   004424                     u12500:
  5207   004424                     
  5208                           ;MKAL_layer/USART/hal_usart.c: 247:             RCSTAbits.RX9 = 0;
  5209   004424  9CAB               	bcf	171,6,c	;volatile
  5210                           
  5211                           ;MKAL_layer/USART/hal_usart.c: 248:         }
  5212   004426  EF25  F022         	goto	l1833
  5213   00442A                     l1827:
  5214                           
  5215                           ;MKAL_layer/USART/hal_usart.c: 250:     }
  5216   00442A  EF25  F022         	goto	l1833
  5217   00442E                     l11346:
  5218   00442E  EE20 F007          	lfsr	2,7
  5219   004432  5010               	movf	usart_async_rx_int@usart^0,w,c
  5220   004434  26D9               	addwf	fsr2l,f,c
  5221   004436  5011               	movf	(usart_async_rx_int@usart+1)^0,w,c
  5222   004438  22DA               	addwfc	fsr2h,f,c
  5223   00443A  AADF               	btfss	indf2,5,c
  5224   00443C  EF22  F022         	goto	u12511
  5225   004440  EF24  F022         	goto	u12510
  5226   004444                     u12511:
  5227   004444  EF25  F022         	goto	l1833
  5228   004448                     u12510:
  5229   004448                     
  5230                           ;MKAL_layer/USART/hal_usart.c: 252:         RCSTAbits.CREN =1;
  5231   004448  88AB               	bsf	171,4,c	;volatile
  5232   00444A                     l1833:
  5233   00444A  0012               	return		;funcret
  5234   00444C                     __end_of_usart_async_rx_int:
  5235                           	callstack 0
  5236                           
  5237 ;; *************** function _baudrate_calculate *****************
  5238 ;; Defined at:
  5239 ;;		line 104 in file "MKAL_layer/USART/hal_usart.c"
  5240 ;; Parameters:    Size  Location     Type
  5241 ;;  usart           2    2[BANK1 ] PTR const struct .
  5242 ;;		 -> usart_1(18), 
  5243 ;; Auto vars:     Size  Location     Type
  5244 ;;  baud_rate       4    6[BANK1 ] float 
  5245 ;; Return value:  Size  Location     Type
  5246 ;;                  1    wreg      void 
  5247 ;; Registers used:
  5248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5249 ;; Tracked objects:
  5250 ;;		On entry : 0/0
  5251 ;;		On exit  : 0/0
  5252 ;;		Unchanged: 0/0
  5253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5254 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5255 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5256 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5257 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5258 ;;Total ram usage:       12 bytes
  5259 ;; Hardware stack levels used: 1
  5260 ;; Hardware stack levels required when called: 5
  5261 ;; This function calls:
  5262 ;;		___fladd
  5263 ;;		___fldiv
  5264 ;;		___fltol
  5265 ;;		___xxtofl
  5266 ;; This function is called by:
  5267 ;;		_usart_ASYNC_init
  5268 ;; This function uses a non-reentrant model
  5269 ;;
  5270                           
  5271                           	psect	text15
  5272   001CE6                     __ptext15:
  5273                           	callstack 0
  5274   001CE6                     _baudrate_calculate:
  5275                           	callstack 23
  5276   001CE6                     
  5277                           ;MKAL_layer/USART/hal_usart.c: 105:     float baud_rate =0;
  5278   001CE6  0E00               	movlw	0
  5279   001CE8  0101               	movlb	1	; () banked
  5280   001CEA  6FA1               	movwf	baudrate_calculate@baud_rate& (0+255),b
  5281   001CEC  0E00               	movlw	0
  5282   001CEE  6FA2               	movwf	(baudrate_calculate@baud_rate+1)& (0+255),b
  5283   001CF0  0E00               	movlw	0
  5284   001CF2  6FA3               	movwf	(baudrate_calculate@baud_rate+2)& (0+255),b
  5285   001CF4  0E00               	movlw	0
  5286   001CF6  6FA4               	movwf	(baudrate_calculate@baud_rate+3)& (0+255),b
  5287                           
  5288                           ;MKAL_layer/USART/hal_usart.c: 106:     switch (usart->buadrate_gen){
  5289   001CF8  EF98  F010         	goto	l11278
  5290   001CFC                     l1796:
  5291                           
  5292                           ; BSR set to: 1
  5293                           ;MKAL_layer/USART/hal_usart.c: 109:             TXSTAbits.SYNC = 0;
  5294   001CFC  98AC               	bcf	172,4,c	;volatile
  5295                           
  5296                           ;MKAL_layer/USART/hal_usart.c: 111:             TXSTAbits.BRGH = 0;
  5297   001CFE  94AC               	bcf	172,2,c	;volatile
  5298                           
  5299                           ;MKAL_layer/USART/hal_usart.c: 113:             BAUDCONbits.BRG16 = 0;
  5300   001D00  96B8               	bcf	184,3,c	;volatile
  5301   001D02                     
  5302                           ; BSR set to: 1
  5303                           ;MKAL_layer/USART/hal_usart.c: 115:             baud_rate = (((8000000UL/(float)usart->b
      +                          audrate)/64)-1);
  5304   001D02  C19D  FFD9         	movff	baudrate_calculate@usart,fsr2l
  5305   001D06  C19E  FFDA         	movff	baudrate_calculate@usart+1,fsr2h
  5306   001D0A  CFDE F010          	movff	postinc2,___xxtofl@val
  5307   001D0E  CFDE F011          	movff	postinc2,___xxtofl@val+1
  5308   001D12  CFDE F012          	movff	postinc2,___xxtofl@val+2
  5309   001D16  CFDE F013          	movff	postinc2,___xxtofl@val+3
  5310   001D1A  0E00               	movlw	0
  5311   001D1C  EC1D  F01A         	call	___xxtofl
  5312   001D20  C010  F022         	movff	?___xxtofl,___fldiv@a
  5313   001D24  C011  F023         	movff	?___xxtofl+1,___fldiv@a+1
  5314   001D28  C012  F024         	movff	?___xxtofl+2,___fldiv@a+2
  5315   001D2C  C013  F025         	movff	?___xxtofl+3,___fldiv@a+3
  5316   001D30  0E00               	movlw	0
  5317   001D32  6E1E               	movwf	___fldiv@b^0,c
  5318   001D34  0E24               	movlw	36
  5319   001D36  6E1F               	movwf	(___fldiv@b+1)^0,c
  5320   001D38  0EF4               	movlw	244
  5321   001D3A  6E20               	movwf	(___fldiv@b+2)^0,c
  5322   001D3C  0E4A               	movlw	74
  5323   001D3E  6E21               	movwf	(___fldiv@b+3)^0,c
  5324   001D40  EC69  F017         	call	___fldiv	;wreg free
  5325   001D44  C01E  F1A5         	movff	?___fldiv,_baudrate_calculate$5721
  5326   001D48  C01F  F1A6         	movff	?___fldiv+1,_baudrate_calculate$5721+1
  5327   001D4C  C020  F1A7         	movff	?___fldiv+2,_baudrate_calculate$5721+2
  5328   001D50  C021  F1A8         	movff	?___fldiv+3,_baudrate_calculate$5721+3
  5329   001D54                     
  5330                           ;MKAL_layer/USART/hal_usart.c: 115:             baud_rate = (((8000000UL/(float)usart->b
      +                          audrate)/64)-1);
  5331   001D54  0E00               	movlw	0
  5332   001D56  6E22               	movwf	___fldiv@a^0,c
  5333   001D58  0E00               	movlw	0
  5334   001D5A  6E23               	movwf	(___fldiv@a+1)^0,c
  5335   001D5C  0E80               	movlw	128
  5336   001D5E  6E24               	movwf	(___fldiv@a+2)^0,c
  5337   001D60  0E42               	movlw	66
  5338   001D62  6E25               	movwf	(___fldiv@a+3)^0,c
  5339   001D64  C1A5  F01E         	movff	_baudrate_calculate$5721,___fldiv@b
  5340   001D68  C1A6  F01F         	movff	_baudrate_calculate$5721+1,___fldiv@b+1
  5341   001D6C  C1A7  F020         	movff	_baudrate_calculate$5721+2,___fldiv@b+2
  5342   001D70  C1A8  F021         	movff	_baudrate_calculate$5721+3,___fldiv@b+3
  5343   001D74  EC69  F017         	call	___fldiv	;wreg free
  5344   001D78  C01E  F037         	movff	?___fldiv,___fladd@b
  5345   001D7C  C01F  F038         	movff	?___fldiv+1,___fladd@b+1
  5346   001D80  C020  F039         	movff	?___fldiv+2,___fladd@b+2
  5347   001D84  C021  F03A         	movff	?___fldiv+3,___fladd@b+3
  5348   001D88  0E00               	movlw	0
  5349   001D8A  6E3B               	movwf	___fladd@a^0,c
  5350   001D8C  0E00               	movlw	0
  5351   001D8E  6E3C               	movwf	(___fladd@a+1)^0,c
  5352   001D90  0E80               	movlw	128
  5353   001D92  6E3D               	movwf	(___fladd@a+2)^0,c
  5354   001D94  0EBF               	movlw	191
  5355   001D96  6E3E               	movwf	(___fladd@a+3)^0,c
  5356   001D98  ECE5  F010         	call	___fladd	;wreg free
  5357   001D9C  C037  F1A1         	movff	?___fladd,baudrate_calculate@baud_rate
  5358   001DA0  C038  F1A2         	movff	?___fladd+1,baudrate_calculate@baud_rate+1
  5359   001DA4  C039  F1A3         	movff	?___fladd+2,baudrate_calculate@baud_rate+2
  5360   001DA8  C03A  F1A4         	movff	?___fladd+3,baudrate_calculate@baud_rate+3
  5361                           
  5362                           ;MKAL_layer/USART/hal_usart.c: 116:             break;
  5363   001DAC  EFC3  F010         	goto	l11280
  5364   001DB0                     l1798:
  5365                           
  5366                           ; BSR set to: 1
  5367                           ;MKAL_layer/USART/hal_usart.c: 119:             TXSTAbits.SYNC = 0;
  5368   001DB0  98AC               	bcf	172,4,c	;volatile
  5369                           
  5370                           ;MKAL_layer/USART/hal_usart.c: 121:             TXSTAbits.BRGH = 1;
  5371   001DB2  84AC               	bsf	172,2,c	;volatile
  5372                           
  5373                           ;MKAL_layer/USART/hal_usart.c: 123:             BAUDCONbits.BRG16 = 0;
  5374   001DB4  96B8               	bcf	184,3,c	;volatile
  5375   001DB6                     
  5376                           ; BSR set to: 1
  5377                           ;MKAL_layer/USART/hal_usart.c: 125:             baud_rate = (((8000000UL/(float)usart->b
      +                          audrate)/16)-1);
  5378   001DB6  C19D  FFD9         	movff	baudrate_calculate@usart,fsr2l
  5379   001DBA  C19E  FFDA         	movff	baudrate_calculate@usart+1,fsr2h
  5380   001DBE  CFDE F010          	movff	postinc2,___xxtofl@val
  5381   001DC2  CFDE F011          	movff	postinc2,___xxtofl@val+1
  5382   001DC6  CFDE F012          	movff	postinc2,___xxtofl@val+2
  5383   001DCA  CFDE F013          	movff	postinc2,___xxtofl@val+3
  5384   001DCE  0E00               	movlw	0
  5385   001DD0  EC1D  F01A         	call	___xxtofl
  5386   001DD4  C010  F022         	movff	?___xxtofl,___fldiv@a
  5387   001DD8  C011  F023         	movff	?___xxtofl+1,___fldiv@a+1
  5388   001DDC  C012  F024         	movff	?___xxtofl+2,___fldiv@a+2
  5389   001DE0  C013  F025         	movff	?___xxtofl+3,___fldiv@a+3
  5390   001DE4  0E00               	movlw	0
  5391   001DE6  6E1E               	movwf	___fldiv@b^0,c
  5392   001DE8  0E24               	movlw	36
  5393   001DEA  6E1F               	movwf	(___fldiv@b+1)^0,c
  5394   001DEC  0EF4               	movlw	244
  5395   001DEE  6E20               	movwf	(___fldiv@b+2)^0,c
  5396   001DF0  0E4A               	movlw	74
  5397   001DF2  6E21               	movwf	(___fldiv@b+3)^0,c
  5398   001DF4  EC69  F017         	call	___fldiv	;wreg free
  5399   001DF8  C01E  F1A5         	movff	?___fldiv,_baudrate_calculate$5721
  5400   001DFC  C01F  F1A6         	movff	?___fldiv+1,_baudrate_calculate$5721+1
  5401   001E00  C020  F1A7         	movff	?___fldiv+2,_baudrate_calculate$5721+2
  5402   001E04  C021  F1A8         	movff	?___fldiv+3,_baudrate_calculate$5721+3
  5403   001E08                     
  5404                           ;MKAL_layer/USART/hal_usart.c: 125:             baud_rate = (((8000000UL/(float)usart->b
      +                          audrate)/16)-1);
  5405   001E08  0E00               	movlw	0
  5406   001E0A  6E22               	movwf	___fldiv@a^0,c
  5407   001E0C  0E00               	movlw	0
  5408   001E0E  6E23               	movwf	(___fldiv@a+1)^0,c
  5409   001E10  0E80               	movlw	128
  5410   001E12  6E24               	movwf	(___fldiv@a+2)^0,c
  5411   001E14  0E41               	movlw	65
  5412   001E16  6E25               	movwf	(___fldiv@a+3)^0,c
  5413   001E18  C1A5  F01E         	movff	_baudrate_calculate$5721,___fldiv@b
  5414   001E1C  C1A6  F01F         	movff	_baudrate_calculate$5721+1,___fldiv@b+1
  5415   001E20  C1A7  F020         	movff	_baudrate_calculate$5721+2,___fldiv@b+2
  5416   001E24  C1A8  F021         	movff	_baudrate_calculate$5721+3,___fldiv@b+3
  5417   001E28  EC69  F017         	call	___fldiv	;wreg free
  5418   001E2C  C01E  F037         	movff	?___fldiv,___fladd@b
  5419   001E30  C01F  F038         	movff	?___fldiv+1,___fladd@b+1
  5420   001E34  C020  F039         	movff	?___fldiv+2,___fladd@b+2
  5421   001E38  C021  F03A         	movff	?___fldiv+3,___fladd@b+3
  5422   001E3C  0E00               	movlw	0
  5423   001E3E  6E3B               	movwf	___fladd@a^0,c
  5424   001E40  0E00               	movlw	0
  5425   001E42  6E3C               	movwf	(___fladd@a+1)^0,c
  5426   001E44  0E80               	movlw	128
  5427   001E46  6E3D               	movwf	(___fladd@a+2)^0,c
  5428   001E48  0EBF               	movlw	191
  5429   001E4A  6E3E               	movwf	(___fladd@a+3)^0,c
  5430   001E4C  ECE5  F010         	call	___fladd	;wreg free
  5431   001E50  C037  F1A1         	movff	?___fladd,baudrate_calculate@baud_rate
  5432   001E54  C038  F1A2         	movff	?___fladd+1,baudrate_calculate@baud_rate+1
  5433   001E58  C039  F1A3         	movff	?___fladd+2,baudrate_calculate@baud_rate+2
  5434   001E5C  C03A  F1A4         	movff	?___fladd+3,baudrate_calculate@baud_rate+3
  5435                           
  5436                           ;MKAL_layer/USART/hal_usart.c: 126:             break;
  5437   001E60  EFC3  F010         	goto	l11280
  5438   001E64                     l1799:
  5439                           
  5440                           ; BSR set to: 1
  5441                           ;MKAL_layer/USART/hal_usart.c: 129:             TXSTAbits.SYNC = 0;
  5442   001E64  98AC               	bcf	172,4,c	;volatile
  5443                           
  5444                           ;MKAL_layer/USART/hal_usart.c: 131:             TXSTAbits.BRGH = 0;
  5445   001E66  94AC               	bcf	172,2,c	;volatile
  5446                           
  5447                           ;MKAL_layer/USART/hal_usart.c: 133:             BAUDCONbits.BRG16 = 1;
  5448   001E68  86B8               	bsf	184,3,c	;volatile
  5449   001E6A                     
  5450                           ; BSR set to: 1
  5451                           ;MKAL_layer/USART/hal_usart.c: 135:             baud_rate = (((8000000UL/(float)usart->b
      +                          audrate)/16)-1);
  5452   001E6A  C19D  FFD9         	movff	baudrate_calculate@usart,fsr2l
  5453   001E6E  C19E  FFDA         	movff	baudrate_calculate@usart+1,fsr2h
  5454   001E72  CFDE F010          	movff	postinc2,___xxtofl@val
  5455   001E76  CFDE F011          	movff	postinc2,___xxtofl@val+1
  5456   001E7A  CFDE F012          	movff	postinc2,___xxtofl@val+2
  5457   001E7E  CFDE F013          	movff	postinc2,___xxtofl@val+3
  5458   001E82  0E00               	movlw	0
  5459   001E84  EC1D  F01A         	call	___xxtofl
  5460   001E88  C010  F022         	movff	?___xxtofl,___fldiv@a
  5461   001E8C  C011  F023         	movff	?___xxtofl+1,___fldiv@a+1
  5462   001E90  C012  F024         	movff	?___xxtofl+2,___fldiv@a+2
  5463   001E94  C013  F025         	movff	?___xxtofl+3,___fldiv@a+3
  5464   001E98  0E00               	movlw	0
  5465   001E9A  6E1E               	movwf	___fldiv@b^0,c
  5466   001E9C  0E24               	movlw	36
  5467   001E9E  6E1F               	movwf	(___fldiv@b+1)^0,c
  5468   001EA0  0EF4               	movlw	244
  5469   001EA2  6E20               	movwf	(___fldiv@b+2)^0,c
  5470   001EA4  0E4A               	movlw	74
  5471   001EA6  6E21               	movwf	(___fldiv@b+3)^0,c
  5472   001EA8  EC69  F017         	call	___fldiv	;wreg free
  5473   001EAC  C01E  F1A5         	movff	?___fldiv,_baudrate_calculate$5721
  5474   001EB0  C01F  F1A6         	movff	?___fldiv+1,_baudrate_calculate$5721+1
  5475   001EB4  C020  F1A7         	movff	?___fldiv+2,_baudrate_calculate$5721+2
  5476   001EB8  C021  F1A8         	movff	?___fldiv+3,_baudrate_calculate$5721+3
  5477   001EBC                     
  5478                           ;MKAL_layer/USART/hal_usart.c: 135:             baud_rate = (((8000000UL/(float)usart->b
      +                          audrate)/16)-1);
  5479   001EBC  0E00               	movlw	0
  5480   001EBE  6E22               	movwf	___fldiv@a^0,c
  5481   001EC0  0E00               	movlw	0
  5482   001EC2  6E23               	movwf	(___fldiv@a+1)^0,c
  5483   001EC4  0E80               	movlw	128
  5484   001EC6  6E24               	movwf	(___fldiv@a+2)^0,c
  5485   001EC8  0E41               	movlw	65
  5486   001ECA  6E25               	movwf	(___fldiv@a+3)^0,c
  5487   001ECC  C1A5  F01E         	movff	_baudrate_calculate$5721,___fldiv@b
  5488   001ED0  C1A6  F01F         	movff	_baudrate_calculate$5721+1,___fldiv@b+1
  5489   001ED4  C1A7  F020         	movff	_baudrate_calculate$5721+2,___fldiv@b+2
  5490   001ED8  C1A8  F021         	movff	_baudrate_calculate$5721+3,___fldiv@b+3
  5491   001EDC  EC69  F017         	call	___fldiv	;wreg free
  5492   001EE0  C01E  F037         	movff	?___fldiv,___fladd@b
  5493   001EE4  C01F  F038         	movff	?___fldiv+1,___fladd@b+1
  5494   001EE8  C020  F039         	movff	?___fldiv+2,___fladd@b+2
  5495   001EEC  C021  F03A         	movff	?___fldiv+3,___fladd@b+3
  5496   001EF0  0E00               	movlw	0
  5497   001EF2  6E3B               	movwf	___fladd@a^0,c
  5498   001EF4  0E00               	movlw	0
  5499   001EF6  6E3C               	movwf	(___fladd@a+1)^0,c
  5500   001EF8  0E80               	movlw	128
  5501   001EFA  6E3D               	movwf	(___fladd@a+2)^0,c
  5502   001EFC  0EBF               	movlw	191
  5503   001EFE  6E3E               	movwf	(___fladd@a+3)^0,c
  5504   001F00  ECE5  F010         	call	___fladd	;wreg free
  5505   001F04  C037  F1A1         	movff	?___fladd,baudrate_calculate@baud_rate
  5506   001F08  C038  F1A2         	movff	?___fladd+1,baudrate_calculate@baud_rate+1
  5507   001F0C  C039  F1A3         	movff	?___fladd+2,baudrate_calculate@baud_rate+2
  5508   001F10  C03A  F1A4         	movff	?___fladd+3,baudrate_calculate@baud_rate+3
  5509                           
  5510                           ;MKAL_layer/USART/hal_usart.c: 136:             break;
  5511   001F14  EFC3  F010         	goto	l11280
  5512   001F18                     l1800:
  5513                           
  5514                           ; BSR set to: 1
  5515                           ;MKAL_layer/USART/hal_usart.c: 139:             TXSTAbits.SYNC = 0;
  5516   001F18  98AC               	bcf	172,4,c	;volatile
  5517                           
  5518                           ;MKAL_layer/USART/hal_usart.c: 141:             TXSTAbits.BRGH = 1;
  5519   001F1A  84AC               	bsf	172,2,c	;volatile
  5520                           
  5521                           ;MKAL_layer/USART/hal_usart.c: 143:             BAUDCONbits.BRG16 = 1;
  5522   001F1C  86B8               	bsf	184,3,c	;volatile
  5523   001F1E                     
  5524                           ; BSR set to: 1
  5525                           ;MKAL_layer/USART/hal_usart.c: 145:             baud_rate = (((8000000UL/(float)usart->b
      +                          audrate)/4)-1);
  5526   001F1E  C19D  FFD9         	movff	baudrate_calculate@usart,fsr2l
  5527   001F22  C19E  FFDA         	movff	baudrate_calculate@usart+1,fsr2h
  5528   001F26  CFDE F010          	movff	postinc2,___xxtofl@val
  5529   001F2A  CFDE F011          	movff	postinc2,___xxtofl@val+1
  5530   001F2E  CFDE F012          	movff	postinc2,___xxtofl@val+2
  5531   001F32  CFDE F013          	movff	postinc2,___xxtofl@val+3
  5532   001F36  0E00               	movlw	0
  5533   001F38  EC1D  F01A         	call	___xxtofl
  5534   001F3C  C010  F022         	movff	?___xxtofl,___fldiv@a
  5535   001F40  C011  F023         	movff	?___xxtofl+1,___fldiv@a+1
  5536   001F44  C012  F024         	movff	?___xxtofl+2,___fldiv@a+2
  5537   001F48  C013  F025         	movff	?___xxtofl+3,___fldiv@a+3
  5538   001F4C  0E00               	movlw	0
  5539   001F4E  6E1E               	movwf	___fldiv@b^0,c
  5540   001F50  0E24               	movlw	36
  5541   001F52  6E1F               	movwf	(___fldiv@b+1)^0,c
  5542   001F54  0EF4               	movlw	244
  5543   001F56  6E20               	movwf	(___fldiv@b+2)^0,c
  5544   001F58  0E4A               	movlw	74
  5545   001F5A  6E21               	movwf	(___fldiv@b+3)^0,c
  5546   001F5C  EC69  F017         	call	___fldiv	;wreg free
  5547   001F60  C01E  F1A5         	movff	?___fldiv,_baudrate_calculate$5721
  5548   001F64  C01F  F1A6         	movff	?___fldiv+1,_baudrate_calculate$5721+1
  5549   001F68  C020  F1A7         	movff	?___fldiv+2,_baudrate_calculate$5721+2
  5550   001F6C  C021  F1A8         	movff	?___fldiv+3,_baudrate_calculate$5721+3
  5551   001F70                     
  5552                           ;MKAL_layer/USART/hal_usart.c: 145:             baud_rate = (((8000000UL/(float)usart->b
      +                          audrate)/4)-1);
  5553   001F70  0E00               	movlw	0
  5554   001F72  6E22               	movwf	___fldiv@a^0,c
  5555   001F74  0E00               	movlw	0
  5556   001F76  6E23               	movwf	(___fldiv@a+1)^0,c
  5557   001F78  0E80               	movlw	128
  5558   001F7A  6E24               	movwf	(___fldiv@a+2)^0,c
  5559   001F7C  0E40               	movlw	64
  5560   001F7E  6E25               	movwf	(___fldiv@a+3)^0,c
  5561   001F80  C1A5  F01E         	movff	_baudrate_calculate$5721,___fldiv@b
  5562   001F84  C1A6  F01F         	movff	_baudrate_calculate$5721+1,___fldiv@b+1
  5563   001F88  C1A7  F020         	movff	_baudrate_calculate$5721+2,___fldiv@b+2
  5564   001F8C  C1A8  F021         	movff	_baudrate_calculate$5721+3,___fldiv@b+3
  5565   001F90  EC69  F017         	call	___fldiv	;wreg free
  5566   001F94  C01E  F037         	movff	?___fldiv,___fladd@b
  5567   001F98  C01F  F038         	movff	?___fldiv+1,___fladd@b+1
  5568   001F9C  C020  F039         	movff	?___fldiv+2,___fladd@b+2
  5569   001FA0  C021  F03A         	movff	?___fldiv+3,___fladd@b+3
  5570   001FA4  0E00               	movlw	0
  5571   001FA6  6E3B               	movwf	___fladd@a^0,c
  5572   001FA8  0E00               	movlw	0
  5573   001FAA  6E3C               	movwf	(___fladd@a+1)^0,c
  5574   001FAC  0E80               	movlw	128
  5575   001FAE  6E3D               	movwf	(___fladd@a+2)^0,c
  5576   001FB0  0EBF               	movlw	191
  5577   001FB2  6E3E               	movwf	(___fladd@a+3)^0,c
  5578   001FB4  ECE5  F010         	call	___fladd	;wreg free
  5579   001FB8  C037  F1A1         	movff	?___fladd,baudrate_calculate@baud_rate
  5580   001FBC  C038  F1A2         	movff	?___fladd+1,baudrate_calculate@baud_rate+1
  5581   001FC0  C039  F1A3         	movff	?___fladd+2,baudrate_calculate@baud_rate+2
  5582   001FC4  C03A  F1A4         	movff	?___fladd+3,baudrate_calculate@baud_rate+3
  5583                           
  5584                           ;MKAL_layer/USART/hal_usart.c: 146:             break;
  5585   001FC8  EFC3  F010         	goto	l11280
  5586   001FCC                     l1801:
  5587                           
  5588                           ; BSR set to: 1
  5589                           ;MKAL_layer/USART/hal_usart.c: 149:             TXSTAbits.SYNC = 1;
  5590   001FCC  88AC               	bsf	172,4,c	;volatile
  5591                           
  5592                           ;MKAL_layer/USART/hal_usart.c: 151:             TXSTAbits.BRGH = 0;
  5593   001FCE  94AC               	bcf	172,2,c	;volatile
  5594   001FD0                     
  5595                           ; BSR set to: 1
  5596                           ;MKAL_layer/USART/hal_usart.c: 153:             baud_rate = (((8000000UL/(float)usart->b
      +                          audrate)/4)-1);
  5597   001FD0  C19D  FFD9         	movff	baudrate_calculate@usart,fsr2l
  5598   001FD4  C19E  FFDA         	movff	baudrate_calculate@usart+1,fsr2h
  5599   001FD8  CFDE F010          	movff	postinc2,___xxtofl@val
  5600   001FDC  CFDE F011          	movff	postinc2,___xxtofl@val+1
  5601   001FE0  CFDE F012          	movff	postinc2,___xxtofl@val+2
  5602   001FE4  CFDE F013          	movff	postinc2,___xxtofl@val+3
  5603   001FE8  0E00               	movlw	0
  5604   001FEA  EC1D  F01A         	call	___xxtofl
  5605   001FEE  C010  F022         	movff	?___xxtofl,___fldiv@a
  5606   001FF2  C011  F023         	movff	?___xxtofl+1,___fldiv@a+1
  5607   001FF6  C012  F024         	movff	?___xxtofl+2,___fldiv@a+2
  5608   001FFA  C013  F025         	movff	?___xxtofl+3,___fldiv@a+3
  5609   001FFE  0E00               	movlw	0
  5610   002000  6E1E               	movwf	___fldiv@b^0,c
  5611   002002  0E24               	movlw	36
  5612   002004  6E1F               	movwf	(___fldiv@b+1)^0,c
  5613   002006  0EF4               	movlw	244
  5614   002008  6E20               	movwf	(___fldiv@b+2)^0,c
  5615   00200A  0E4A               	movlw	74
  5616   00200C  6E21               	movwf	(___fldiv@b+3)^0,c
  5617   00200E  EC69  F017         	call	___fldiv	;wreg free
  5618   002012  C01E  F1A5         	movff	?___fldiv,_baudrate_calculate$5721
  5619   002016  C01F  F1A6         	movff	?___fldiv+1,_baudrate_calculate$5721+1
  5620   00201A  C020  F1A7         	movff	?___fldiv+2,_baudrate_calculate$5721+2
  5621   00201E  C021  F1A8         	movff	?___fldiv+3,_baudrate_calculate$5721+3
  5622   002022                     
  5623                           ;MKAL_layer/USART/hal_usart.c: 153:             baud_rate = (((8000000UL/(float)usart->b
      +                          audrate)/4)-1);
  5624   002022  0E00               	movlw	0
  5625   002024  6E22               	movwf	___fldiv@a^0,c
  5626   002026  0E00               	movlw	0
  5627   002028  6E23               	movwf	(___fldiv@a+1)^0,c
  5628   00202A  0E80               	movlw	128
  5629   00202C  6E24               	movwf	(___fldiv@a+2)^0,c
  5630   00202E  0E40               	movlw	64
  5631   002030  6E25               	movwf	(___fldiv@a+3)^0,c
  5632   002032  C1A5  F01E         	movff	_baudrate_calculate$5721,___fldiv@b
  5633   002036  C1A6  F01F         	movff	_baudrate_calculate$5721+1,___fldiv@b+1
  5634   00203A  C1A7  F020         	movff	_baudrate_calculate$5721+2,___fldiv@b+2
  5635   00203E  C1A8  F021         	movff	_baudrate_calculate$5721+3,___fldiv@b+3
  5636   002042  EC69  F017         	call	___fldiv	;wreg free
  5637   002046  C01E  F037         	movff	?___fldiv,___fladd@b
  5638   00204A  C01F  F038         	movff	?___fldiv+1,___fladd@b+1
  5639   00204E  C020  F039         	movff	?___fldiv+2,___fladd@b+2
  5640   002052  C021  F03A         	movff	?___fldiv+3,___fladd@b+3
  5641   002056  0E00               	movlw	0
  5642   002058  6E3B               	movwf	___fladd@a^0,c
  5643   00205A  0E00               	movlw	0
  5644   00205C  6E3C               	movwf	(___fladd@a+1)^0,c
  5645   00205E  0E80               	movlw	128
  5646   002060  6E3D               	movwf	(___fladd@a+2)^0,c
  5647   002062  0EBF               	movlw	191
  5648   002064  6E3E               	movwf	(___fladd@a+3)^0,c
  5649   002066  ECE5  F010         	call	___fladd	;wreg free
  5650   00206A  C037  F1A1         	movff	?___fladd,baudrate_calculate@baud_rate
  5651   00206E  C038  F1A2         	movff	?___fladd+1,baudrate_calculate@baud_rate+1
  5652   002072  C039  F1A3         	movff	?___fladd+2,baudrate_calculate@baud_rate+2
  5653   002076  C03A  F1A4         	movff	?___fladd+3,baudrate_calculate@baud_rate+3
  5654                           
  5655                           ;MKAL_layer/USART/hal_usart.c: 154:             break;
  5656   00207A  EFC3  F010         	goto	l11280
  5657   00207E                     l1802:
  5658                           
  5659                           ; BSR set to: 1
  5660                           ;MKAL_layer/USART/hal_usart.c: 157:             TXSTAbits.SYNC = 1;
  5661   00207E  88AC               	bsf	172,4,c	;volatile
  5662                           
  5663                           ;MKAL_layer/USART/hal_usart.c: 159:             BAUDCONbits.BRG16 = 0;
  5664   002080  96B8               	bcf	184,3,c	;volatile
  5665   002082                     
  5666                           ; BSR set to: 1
  5667                           ;MKAL_layer/USART/hal_usart.c: 161:             baud_rate = (((8000000UL/(float)usart->b
      +                          audrate)/4)-1);
  5668   002082  C19D  FFD9         	movff	baudrate_calculate@usart,fsr2l
  5669   002086  C19E  FFDA         	movff	baudrate_calculate@usart+1,fsr2h
  5670   00208A  CFDE F010          	movff	postinc2,___xxtofl@val
  5671   00208E  CFDE F011          	movff	postinc2,___xxtofl@val+1
  5672   002092  CFDE F012          	movff	postinc2,___xxtofl@val+2
  5673   002096  CFDE F013          	movff	postinc2,___xxtofl@val+3
  5674   00209A  0E00               	movlw	0
  5675   00209C  EC1D  F01A         	call	___xxtofl
  5676   0020A0  C010  F022         	movff	?___xxtofl,___fldiv@a
  5677   0020A4  C011  F023         	movff	?___xxtofl+1,___fldiv@a+1
  5678   0020A8  C012  F024         	movff	?___xxtofl+2,___fldiv@a+2
  5679   0020AC  C013  F025         	movff	?___xxtofl+3,___fldiv@a+3
  5680   0020B0  0E00               	movlw	0
  5681   0020B2  6E1E               	movwf	___fldiv@b^0,c
  5682   0020B4  0E24               	movlw	36
  5683   0020B6  6E1F               	movwf	(___fldiv@b+1)^0,c
  5684   0020B8  0EF4               	movlw	244
  5685   0020BA  6E20               	movwf	(___fldiv@b+2)^0,c
  5686   0020BC  0E4A               	movlw	74
  5687   0020BE  6E21               	movwf	(___fldiv@b+3)^0,c
  5688   0020C0  EC69  F017         	call	___fldiv	;wreg free
  5689   0020C4  C01E  F1A5         	movff	?___fldiv,_baudrate_calculate$5721
  5690   0020C8  C01F  F1A6         	movff	?___fldiv+1,_baudrate_calculate$5721+1
  5691   0020CC  C020  F1A7         	movff	?___fldiv+2,_baudrate_calculate$5721+2
  5692   0020D0  C021  F1A8         	movff	?___fldiv+3,_baudrate_calculate$5721+3
  5693   0020D4                     
  5694                           ;MKAL_layer/USART/hal_usart.c: 161:             baud_rate = (((8000000UL/(float)usart->b
      +                          audrate)/4)-1);
  5695   0020D4  0E00               	movlw	0
  5696   0020D6  6E22               	movwf	___fldiv@a^0,c
  5697   0020D8  0E00               	movlw	0
  5698   0020DA  6E23               	movwf	(___fldiv@a+1)^0,c
  5699   0020DC  0E80               	movlw	128
  5700   0020DE  6E24               	movwf	(___fldiv@a+2)^0,c
  5701   0020E0  0E40               	movlw	64
  5702   0020E2  6E25               	movwf	(___fldiv@a+3)^0,c
  5703   0020E4  C1A5  F01E         	movff	_baudrate_calculate$5721,___fldiv@b
  5704   0020E8  C1A6  F01F         	movff	_baudrate_calculate$5721+1,___fldiv@b+1
  5705   0020EC  C1A7  F020         	movff	_baudrate_calculate$5721+2,___fldiv@b+2
  5706   0020F0  C1A8  F021         	movff	_baudrate_calculate$5721+3,___fldiv@b+3
  5707   0020F4  EC69  F017         	call	___fldiv	;wreg free
  5708   0020F8  C01E  F037         	movff	?___fldiv,___fladd@b
  5709   0020FC  C01F  F038         	movff	?___fldiv+1,___fladd@b+1
  5710   002100  C020  F039         	movff	?___fldiv+2,___fladd@b+2
  5711   002104  C021  F03A         	movff	?___fldiv+3,___fladd@b+3
  5712   002108  0E00               	movlw	0
  5713   00210A  6E3B               	movwf	___fladd@a^0,c
  5714   00210C  0E00               	movlw	0
  5715   00210E  6E3C               	movwf	(___fladd@a+1)^0,c
  5716   002110  0E80               	movlw	128
  5717   002112  6E3D               	movwf	(___fladd@a+2)^0,c
  5718   002114  0EBF               	movlw	191
  5719   002116  6E3E               	movwf	(___fladd@a+3)^0,c
  5720   002118  ECE5  F010         	call	___fladd	;wreg free
  5721   00211C  C037  F1A1         	movff	?___fladd,baudrate_calculate@baud_rate
  5722   002120  C038  F1A2         	movff	?___fladd+1,baudrate_calculate@baud_rate+1
  5723   002124  C039  F1A3         	movff	?___fladd+2,baudrate_calculate@baud_rate+2
  5724   002128  C03A  F1A4         	movff	?___fladd+3,baudrate_calculate@baud_rate+3
  5725                           
  5726                           ;MKAL_layer/USART/hal_usart.c: 162:             break;
  5727   00212C  EFC3  F010         	goto	l11280
  5728   002130                     l11278:
  5729                           
  5730                           ; BSR set to: 1
  5731   002130  EE20 F004          	lfsr	2,4
  5732   002134  519D               	movf	baudrate_calculate@usart& (0+255),w,b
  5733   002136  26D9               	addwf	fsr2l,f,c
  5734   002138  519E               	movf	(baudrate_calculate@usart+1)& (0+255),w,b
  5735   00213A  22DA               	addwfc	fsr2h,f,c
  5736   00213C  50DF               	movf	indf2,w,c
  5737   00213E  6F9F               	movwf	??_baudrate_calculate& (0+255),b
  5738   002140  6BA0               	clrf	(??_baudrate_calculate+1)& (0+255),b
  5739                           
  5740                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5741                           ; Switch size 1, requested type "simple"
  5742                           ; Number of cases is 1, Range of values is 0 to 0
  5743                           ; switch strategies available:
  5744                           ; Name         Instructions Cycles
  5745                           ; simple_byte            4     3 (average)
  5746                           ;	Chosen strategy is simple_byte
  5747   002142  51A0               	movf	(??_baudrate_calculate+1)& (0+255),w,b
  5748   002144  0A00               	xorlw	0	; case 0
  5749   002146  B4D8               	btfsc	status,2,c
  5750   002148  EFA8  F010         	goto	l13632
  5751   00214C  EFC3  F010         	goto	l11280
  5752   002150                     l13632:
  5753                           
  5754                           ; BSR set to: 1
  5755                           ; Switch size 1, requested type "simple"
  5756                           ; Number of cases is 6, Range of values is 0 to 5
  5757                           ; switch strategies available:
  5758                           ; Name         Instructions Cycles
  5759                           ; simple_byte           19    10 (average)
  5760                           ;	Chosen strategy is simple_byte
  5761   002150  519F               	movf	??_baudrate_calculate& (0+255),w,b
  5762   002152  0A00               	xorlw	0	; case 0
  5763   002154  B4D8               	btfsc	status,2,c
  5764   002156  EF7E  F00E         	goto	l1796
  5765   00215A  0A01               	xorlw	1	; case 1
  5766   00215C  B4D8               	btfsc	status,2,c
  5767   00215E  EFD8  F00E         	goto	l1798
  5768   002162  0A03               	xorlw	3	; case 2
  5769   002164  B4D8               	btfsc	status,2,c
  5770   002166  EF32  F00F         	goto	l1799
  5771   00216A  0A01               	xorlw	1	; case 3
  5772   00216C  B4D8               	btfsc	status,2,c
  5773   00216E  EF8C  F00F         	goto	l1800
  5774   002172  0A07               	xorlw	7	; case 4
  5775   002174  B4D8               	btfsc	status,2,c
  5776   002176  EFE6  F00F         	goto	l1801
  5777   00217A  0A01               	xorlw	1	; case 5
  5778   00217C  B4D8               	btfsc	status,2,c
  5779   00217E  EF3F  F010         	goto	l1802
  5780   002182  EFC3  F010         	goto	l11280
  5781   002186                     l11280:
  5782                           
  5783                           ;MKAL_layer/USART/hal_usart.c: 164:     SPBRG =(uint8)((uint32)baud_rate);
  5784   002186  C1A1  F0F6         	movff	baudrate_calculate@baud_rate,___fltol@f1
  5785   00218A  C1A2  F0F7         	movff	baudrate_calculate@baud_rate+1,___fltol@f1+1
  5786   00218E  C1A3  F0F8         	movff	baudrate_calculate@baud_rate+2,___fltol@f1+2
  5787   002192  C1A4  F0F9         	movff	baudrate_calculate@baud_rate+3,___fltol@f1+3
  5788   002196  ECE4  F01E         	call	___fltol	;wreg free
  5789   00219A  0100               	movlb	0	; () banked
  5790   00219C  51F6               	movf	?___fltol& (0+255),w,b
  5791   00219E  6EAF               	movwf	175,c	;volatile
  5792                           
  5793                           ;MKAL_layer/USART/hal_usart.c: 165:     SPBRGH =(uint8)(((uint32)baud_rate) >> 8);
  5794   0021A0  C1A1  F0F6         	movff	baudrate_calculate@baud_rate,___fltol@f1
  5795   0021A4  C1A2  F0F7         	movff	baudrate_calculate@baud_rate+1,___fltol@f1+1
  5796   0021A8  C1A3  F0F8         	movff	baudrate_calculate@baud_rate+2,___fltol@f1+2
  5797   0021AC  C1A4  F0F9         	movff	baudrate_calculate@baud_rate+3,___fltol@f1+3
  5798   0021B0  ECE4  F01E         	call	___fltol	;wreg free
  5799   0021B4  0100               	movlb	0	; () banked
  5800   0021B6  C0F7  F0F6         	movff	?___fltol+1,?___fltol
  5801   0021BA  C0F8  F0F7         	movff	?___fltol+2,?___fltol+1
  5802   0021BE  C0F9  F0F8         	movff	?___fltol+3,?___fltol+2
  5803   0021C2  6BF9               	clrf	(?___fltol+3)& (0+255),b
  5804   0021C4  51F6               	movf	?___fltol& (0+255),w,b
  5805   0021C6  6EB0               	movwf	176,c	;volatile
  5806   0021C8                     
  5807                           ; BSR set to: 0
  5808   0021C8  0012               	return		;funcret
  5809   0021CA                     __end_of_baudrate_calculate:
  5810                           	callstack 0
  5811                           
  5812 ;; *************** function _motor_intialize *****************
  5813 ;; Defined at:
  5814 ;;		line 7 in file "ECU_layer/DC_MOTOR/ecu_dc_motor.c"
  5815 ;; Parameters:    Size  Location     Type
  5816 ;;  motor_pin       1   28[COMRAM] PTR const struct .
  5817 ;;		 -> motor_2(2), motor_1(2), 
  5818 ;; Auto vars:     Size  Location     Type
  5819 ;;  ret             1   30[COMRAM] unsigned char 
  5820 ;; Return value:  Size  Location     Type
  5821 ;;                  1    wreg      unsigned char 
  5822 ;; Registers used:
  5823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5824 ;; Tracked objects:
  5825 ;;		On entry : 0/0
  5826 ;;		On exit  : 0/0
  5827 ;;		Unchanged: 0/0
  5828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5829 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5830 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5831 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5832 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5833 ;;Total ram usage:        3 bytes
  5834 ;; Hardware stack levels used: 1
  5835 ;; Hardware stack levels required when called: 6
  5836 ;; This function calls:
  5837 ;;		_GPIO_pIN_INTIALIZE
  5838 ;; This function is called by:
  5839 ;;		_intitialized_functions
  5840 ;; This function uses a non-reentrant model
  5841 ;;
  5842                           
  5843                           	psect	text16
  5844   005BBE                     __ptext16:
  5845                           	callstack 0
  5846   005BBE                     _motor_intialize:
  5847                           	callstack 23
  5848   005BBE                     
  5849                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 9:     if (((void*)0) == motor_pin){
  5850   005BBE  501D               	movf	motor_intialize@motor_pin^0,w,c
  5851   005BC0  A4D8               	btfss	status,2,c
  5852   005BC2  EFE5  F02D         	goto	u12761
  5853   005BC6  EFE7  F02D         	goto	u12760
  5854   005BCA                     u12761:
  5855   005BCA  EFEB  F02D         	goto	l11604
  5856   005BCE                     u12760:
  5857   005BCE                     
  5858                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 10:         ret =(Std_ReturnType)0x00;
  5859   005BCE  0E00               	movlw	0
  5860   005BD0  6E1F               	movwf	motor_intialize@ret^0,c
  5861                           
  5862                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 11:     }
  5863   005BD2  EFFB  F02D         	goto	l11606
  5864   005BD6                     l11604:
  5865                           
  5866                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 13:     {;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 14:    
      +                               ret =GPIO_pIN_INTIALIZE(&(motor_pin->motor_pin_config[0]));
  5867   005BD6  C01D  F019         	movff	motor_intialize@motor_pin,GPIO_pIN_INTIALIZE@config_pin
  5868   005BDA  6A1A               	clrf	(GPIO_pIN_INTIALIZE@config_pin+1)^0,c
  5869   005BDC  ECA9  F02A         	call	_GPIO_pIN_INTIALIZE	;wreg free
  5870   005BE0  6E1F               	movwf	motor_intialize@ret^0,c
  5871                           
  5872                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 15:         ret =GPIO_pIN_INTIALIZE(&(motor_pin->mot
      +                          or_pin_config[1]));
  5873   005BE2  C01D  F01E         	movff	motor_intialize@motor_pin,??_motor_intialize
  5874   005BE6  0E01               	movlw	1
  5875   005BE8  261E               	addwf	??_motor_intialize^0,f,c
  5876   005BEA  C01E  F019         	movff	??_motor_intialize,GPIO_pIN_INTIALIZE@config_pin
  5877   005BEE  6A1A               	clrf	(GPIO_pIN_INTIALIZE@config_pin+1)^0,c
  5878   005BF0  ECA9  F02A         	call	_GPIO_pIN_INTIALIZE	;wreg free
  5879   005BF4  6E1F               	movwf	motor_intialize@ret^0,c
  5880   005BF6                     l11606:
  5881                           
  5882                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 17:      return ret ;
  5883   005BF6  501F               	movf	motor_intialize@ret^0,w,c
  5884   005BF8  0012               	return		;funcret
  5885   005BFA                     __end_of_motor_intialize:
  5886                           	callstack 0
  5887                           
  5888 ;; *************** function _lcd_4bit_intialize *****************
  5889 ;; Defined at:
  5890 ;;		line 22 in file "ECU_layer/chr_lcd/ecu_chr_lcd.c"
  5891 ;; Parameters:    Size  Location     Type
  5892 ;;  lcd             1   31[COMRAM] PTR const struct .
  5893 ;;		 -> lcd_4bit(6), 
  5894 ;; Auto vars:     Size  Location     Type
  5895 ;;  ret             1   34[COMRAM] unsigned char 
  5896 ;;  l_data_pins_    1   33[COMRAM] unsigned char 
  5897 ;; Return value:  Size  Location     Type
  5898 ;;                  1    wreg      unsigned char 
  5899 ;; Registers used:
  5900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5901 ;; Tracked objects:
  5902 ;;		On entry : 0/0
  5903 ;;		On exit  : 0/0
  5904 ;;		Unchanged: 0/0
  5905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5906 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5907 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5908 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5909 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5910 ;;Total ram usage:        4 bytes
  5911 ;; Hardware stack levels used: 1
  5912 ;; Hardware stack levels required when called: 7
  5913 ;; This function calls:
  5914 ;;		_GPIO_pIN_INTIALIZE
  5915 ;;		_lcd_4bit_send_command
  5916 ;; This function is called by:
  5917 ;;		_intitialized_functions
  5918 ;; This function uses a non-reentrant model
  5919 ;;
  5920                           
  5921                           	psect	text17
  5922   00444C                     __ptext17:
  5923                           	callstack 0
  5924   00444C                     _lcd_4bit_intialize:
  5925                           	callstack 22
  5926   00444C                     
  5927                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 24:     uint8 l_data_pins_counter = 0;
  5928   00444C  0E00               	movlw	0
  5929   00444E  6E22               	movwf	lcd_4bit_intialize@l_data_pins_counter^0,c
  5930                           
  5931                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 25:     if(((void*)0) == lcd){
  5932   004450  5020               	movf	lcd_4bit_intialize@lcd^0,w,c
  5933   004452  A4D8               	btfss	status,2,c
  5934   004454  EF2E  F022         	goto	u12721
  5935   004458  EF30  F022         	goto	u12720
  5936   00445C                     u12721:
  5937   00445C  EF34  F022         	goto	l11504
  5938   004460                     u12720:
  5939   004460                     
  5940                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 26:         ret = 0;
  5941   004460  0E00               	movlw	0
  5942   004462  6E23               	movwf	lcd_4bit_intialize@ret^0,c
  5943                           
  5944                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 27:     }
  5945   004464  EFA1  F022         	goto	l11540
  5946   004468                     l11504:
  5947                           
  5948                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 29:         ret = GPIO_pIN_INTIALIZE(&(lcd->lcd_rs));
  5949   004468  C020  F019         	movff	lcd_4bit_intialize@lcd,GPIO_pIN_INTIALIZE@config_pin
  5950   00446C  6A1A               	clrf	(GPIO_pIN_INTIALIZE@config_pin+1)^0,c
  5951   00446E  ECA9  F02A         	call	_GPIO_pIN_INTIALIZE	;wreg free
  5952   004472  6E23               	movwf	lcd_4bit_intialize@ret^0,c
  5953                           
  5954                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 30:         ret = GPIO_pIN_INTIALIZE(&(lcd->lcd_en));
  5955   004474  C020  F021         	movff	lcd_4bit_intialize@lcd,??_lcd_4bit_intialize
  5956   004478  0E01               	movlw	1
  5957   00447A  2621               	addwf	??_lcd_4bit_intialize^0,f,c
  5958   00447C  C021  F019         	movff	??_lcd_4bit_intialize,GPIO_pIN_INTIALIZE@config_pin
  5959   004480  6A1A               	clrf	(GPIO_pIN_INTIALIZE@config_pin+1)^0,c
  5960   004482  ECA9  F02A         	call	_GPIO_pIN_INTIALIZE	;wreg free
  5961   004486  6E23               	movwf	lcd_4bit_intialize@ret^0,c
  5962   004488                     
  5963                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 31:         for(l_data_pins_counter=0; l_data_pins_cou
      +                          nter<4; l_data_pins_counter++){
  5964   004488  0E00               	movlw	0
  5965   00448A  6E22               	movwf	lcd_4bit_intialize@l_data_pins_counter^0,c
  5966   00448C                     l11512:
  5967   00448C  5020               	movf	lcd_4bit_intialize@lcd^0,w,c
  5968   00448E  2422               	addwf	lcd_4bit_intialize@l_data_pins_counter^0,w,c
  5969   004490  6E21               	movwf	??_lcd_4bit_intialize^0,c
  5970   004492  0E02               	movlw	2
  5971   004494  2621               	addwf	??_lcd_4bit_intialize^0,f,c
  5972   004496  C021  F019         	movff	??_lcd_4bit_intialize,GPIO_pIN_INTIALIZE@config_pin
  5973   00449A  6A1A               	clrf	(GPIO_pIN_INTIALIZE@config_pin+1)^0,c
  5974   00449C  ECA9  F02A         	call	_GPIO_pIN_INTIALIZE	;wreg free
  5975   0044A0                     
  5976                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 33:         }
  5977   0044A0  2A22               	incf	lcd_4bit_intialize@l_data_pins_counter^0,f,c
  5978   0044A2  0E03               	movlw	3
  5979   0044A4  6422               	cpfsgt	lcd_4bit_intialize@l_data_pins_counter^0,c
  5980   0044A6  EF57  F022         	goto	u12731
  5981   0044AA  EF59  F022         	goto	u12730
  5982   0044AE                     u12731:
  5983   0044AE  EF46  F022         	goto	l11512
  5984   0044B2                     u12730:
  5985   0044B2                     
  5986                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 34:         _delay((unsigned long)((20)*(8000000UL/400
      +                          0.0)));
  5987   0044B2  0E34               	movlw	52
  5988   0044B4  6E21               	movwf	??_lcd_4bit_intialize^0,c
  5989   0044B6  0EF2               	movlw	242
  5990   0044B8                     u15547:
  5991   0044B8  2EE8               	decfsz	wreg,f,c
  5992   0044BA  D7FE               	bra	u15547
  5993   0044BC  2E21               	decfsz	??_lcd_4bit_intialize^0,f,c
  5994   0044BE  D7FC               	bra	u15547
  5995   0044C0  C020  F01D         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  5996   0044C4  0E38               	movlw	56
  5997   0044C6  6E1E               	movwf	lcd_4bit_send_command@command^0,c
  5998   0044C8  ECA9  F02B         	call	_lcd_4bit_send_command	;wreg free
  5999   0044CC                     
  6000                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 36:         _delay((unsigned long)((5)*(8000000UL/4000
      +                          .0)));
  6001   0044CC  0E0D               	movlw	13
  6002   0044CE  6E21               	movwf	??_lcd_4bit_intialize^0,c
  6003   0044D0  0EFC               	movlw	252
  6004   0044D2                     u15557:
  6005   0044D2  2EE8               	decfsz	wreg,f,c
  6006   0044D4  D7FE               	bra	u15557
  6007   0044D6  2E21               	decfsz	??_lcd_4bit_intialize^0,f,c
  6008   0044D8  D7FC               	bra	u15557
  6009   0044DA  C020  F01D         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  6010   0044DE  0E38               	movlw	56
  6011   0044E0  6E1E               	movwf	lcd_4bit_send_command@command^0,c
  6012   0044E2  ECA9  F02B         	call	_lcd_4bit_send_command	;wreg free
  6013   0044E6                     
  6014                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 38:         _delay((unsigned long)((150)*(8000000UL/40
      +                          00000.0)));
  6015   0044E6  0E64               	movlw	100
  6016   0044E8                     u15567:
  6017   0044E8  2EE8               	decfsz	wreg,f,c
  6018   0044EA  D7FE               	bra	u15567
  6019   0044EC  C020  F01D         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  6020   0044F0  0E38               	movlw	56
  6021   0044F2  6E1E               	movwf	lcd_4bit_send_command@command^0,c
  6022   0044F4  ECA9  F02B         	call	_lcd_4bit_send_command	;wreg free
  6023   0044F8  C020  F01D         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  6024   0044FC  0E01               	movlw	1
  6025   0044FE  6E1E               	movwf	lcd_4bit_send_command@command^0,c
  6026   004500  ECA9  F02B         	call	_lcd_4bit_send_command	;wreg free
  6027   004504  C020  F01D         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  6028   004508  0E02               	movlw	2
  6029   00450A  6E1E               	movwf	lcd_4bit_send_command@command^0,c
  6030   00450C  ECA9  F02B         	call	_lcd_4bit_send_command	;wreg free
  6031   004510  C020  F01D         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  6032   004514  0E06               	movlw	6
  6033   004516  6E1E               	movwf	lcd_4bit_send_command@command^0,c
  6034   004518  ECA9  F02B         	call	_lcd_4bit_send_command	;wreg free
  6035   00451C  C020  F01D         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  6036   004520  0E0C               	movlw	12
  6037   004522  6E1E               	movwf	lcd_4bit_send_command@command^0,c
  6038   004524  ECA9  F02B         	call	_lcd_4bit_send_command	;wreg free
  6039   004528  C020  F01D         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  6040   00452C  0E28               	movlw	40
  6041   00452E  6E1E               	movwf	lcd_4bit_send_command@command^0,c
  6042   004530  ECA9  F02B         	call	_lcd_4bit_send_command	;wreg free
  6043   004534                     
  6044                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 46:         ret = lcd_4bit_send_command(lcd, 0x80);
  6045   004534  C020  F01D         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  6046   004538  0E80               	movlw	128
  6047   00453A  6E1E               	movwf	lcd_4bit_send_command@command^0,c
  6048   00453C  ECA9  F02B         	call	_lcd_4bit_send_command	;wreg free
  6049   004540  6E23               	movwf	lcd_4bit_intialize@ret^0,c
  6050   004542                     l11540:
  6051                           
  6052                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 48:     return ret;
  6053   004542  5023               	movf	lcd_4bit_intialize@ret^0,w,c
  6054   004544  0012               	return		;funcret
  6055   004546                     __end_of_lcd_4bit_intialize:
  6056                           	callstack 0
  6057                           
  6058 ;; *************** function _lcd_4bit_send_command *****************
  6059 ;; Defined at:
  6060 ;;		line 59 in file "ECU_layer/chr_lcd/ecu_chr_lcd.c"
  6061 ;; Parameters:    Size  Location     Type
  6062 ;;  lcd             1   28[COMRAM] PTR const struct .
  6063 ;;		 -> lcd_4bit(6), 
  6064 ;;  command         1   29[COMRAM] unsigned char 
  6065 ;; Auto vars:     Size  Location     Type
  6066 ;;  ret             1   30[COMRAM] unsigned char 
  6067 ;; Return value:  Size  Location     Type
  6068 ;;                  1    wreg      unsigned char 
  6069 ;; Registers used:
  6070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6071 ;; Tracked objects:
  6072 ;;		On entry : 0/0
  6073 ;;		On exit  : 0/0
  6074 ;;		Unchanged: 0/0
  6075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6076 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6077 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6079 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6080 ;;Total ram usage:        3 bytes
  6081 ;; Hardware stack levels used: 1
  6082 ;; Hardware stack levels required when called: 6
  6083 ;; This function calls:
  6084 ;;		_GPIO_pIN_WRITE_LOGIC
  6085 ;;		_lcd_4bit_send_enable_signal
  6086 ;;		_lcd_send_4bits
  6087 ;; This function is called by:
  6088 ;;		_lcd_4bit_intialize
  6089 ;;		_lcd_4bit_set_cursor
  6090 ;;		_lcd_4bit_send_custom_char
  6091 ;; This function uses a non-reentrant model
  6092 ;;
  6093                           
  6094                           	psect	text18
  6095   005752                     __ptext18:
  6096                           	callstack 0
  6097   005752                     _lcd_4bit_send_command:
  6098                           	callstack 22
  6099   005752                     
  6100                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 61:     if(((void*)0) == lcd){
  6101   005752  501D               	movf	lcd_4bit_send_command@lcd^0,w,c
  6102   005754  A4D8               	btfss	status,2,c
  6103   005756  EFAF  F02B         	goto	u12131
  6104   00575A  EFB1  F02B         	goto	u12130
  6105   00575E                     u12131:
  6106   00575E  EFB5  F02B         	goto	l10978
  6107   005762                     u12130:
  6108   005762                     
  6109                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 62:         ret = 0;
  6110   005762  0E00               	movlw	0
  6111   005764  6E1F               	movwf	lcd_4bit_send_command@ret^0,c
  6112                           
  6113                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 63:     }
  6114   005766  EFD6  F02B         	goto	l10980
  6115   00576A                     l10978:
  6116                           
  6117                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 67:         ret = GPIO_pIN_WRITE_LOGIC(&(lcd->lcd_rs),
      +                           GPIO_LOW);
  6118   00576A  C01D  F010         	movff	lcd_4bit_send_command@lcd,GPIO_pIN_WRITE_LOGIC@config_pin
  6119   00576E  6A11               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  6120   005770  0E00               	movlw	0
  6121   005772  6E12               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  6122   005774  EC73  F01F         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  6123   005778  6E1F               	movwf	lcd_4bit_send_command@ret^0,c
  6124                           
  6125                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 69:         ret = lcd_send_4bits(lcd, command >> 4);
  6126   00577A  C01D  F019         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  6127   00577E  381E               	swapf	lcd_4bit_send_command@command^0,w,c
  6128   005780  0B0F               	andlw	15
  6129   005782  6E1A               	movwf	lcd_send_4bits@_data_command^0,c
  6130   005784  EC3A  F02A         	call	_lcd_send_4bits	;wreg free
  6131   005788  6E1F               	movwf	lcd_4bit_send_command@ret^0,c
  6132                           
  6133                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 71:         ret = lcd_4bit_send_enable_signal(lcd);
  6134   00578A  C01D  F019         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  6135   00578E  ECFD  F02D         	call	_lcd_4bit_send_enable_signal	;wreg free
  6136   005792  6E1F               	movwf	lcd_4bit_send_command@ret^0,c
  6137                           
  6138                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 73:         ret = lcd_send_4bits(lcd, command);
  6139   005794  C01D  F019         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  6140   005798  C01E  F01A         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
  6141   00579C  EC3A  F02A         	call	_lcd_send_4bits	;wreg free
  6142   0057A0  6E1F               	movwf	lcd_4bit_send_command@ret^0,c
  6143                           
  6144                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 75:         ret = lcd_4bit_send_enable_signal(lcd);
  6145   0057A2  C01D  F019         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  6146   0057A6  ECFD  F02D         	call	_lcd_4bit_send_enable_signal	;wreg free
  6147   0057AA  6E1F               	movwf	lcd_4bit_send_command@ret^0,c
  6148   0057AC                     l10980:
  6149                           
  6150                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 77:     return ret;
  6151   0057AC  501F               	movf	lcd_4bit_send_command@ret^0,w,c
  6152   0057AE  0012               	return		;funcret
  6153   0057B0                     __end_of_lcd_4bit_send_command:
  6154                           	callstack 0
  6155                           
  6156 ;; *************** function _lcd_send_4bits *****************
  6157 ;; Defined at:
  6158 ;;		line 464 in file "ECU_layer/chr_lcd/ecu_chr_lcd.c"
  6159 ;; Parameters:    Size  Location     Type
  6160 ;;  lcd             1   24[COMRAM] PTR const struct .
  6161 ;;		 -> lcd_4bit(6), 
  6162 ;;  _data_comman    1   25[COMRAM] unsigned char 
  6163 ;; Auto vars:     Size  Location     Type
  6164 ;;  ret             1   27[COMRAM] unsigned char 
  6165 ;; Return value:  Size  Location     Type
  6166 ;;                  1    wreg      unsigned char 
  6167 ;; Registers used:
  6168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6169 ;; Tracked objects:
  6170 ;;		On entry : 0/0
  6171 ;;		On exit  : 0/0
  6172 ;;		Unchanged: 0/0
  6173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6174 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6175 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6176 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6177 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6178 ;;Total ram usage:        4 bytes
  6179 ;; Hardware stack levels used: 1
  6180 ;; Hardware stack levels required when called: 5
  6181 ;; This function calls:
  6182 ;;		_GPIO_pIN_WRITE_LOGIC
  6183 ;; This function is called by:
  6184 ;;		_lcd_4bit_send_command
  6185 ;;		_lcd_4bit_send_char_data
  6186 ;; This function uses a non-reentrant model
  6187 ;;
  6188                           
  6189                           	psect	text19
  6190   005474                     __ptext19:
  6191                           	callstack 0
  6192   005474                     _lcd_send_4bits:
  6193                           	callstack 22
  6194   005474  C019  F01B         	movff	lcd_send_4bits@lcd,??_lcd_send_4bits
  6195   005478  0E02               	movlw	2
  6196   00547A  261B               	addwf	??_lcd_send_4bits^0,f,c
  6197   00547C  C01B  F010         	movff	??_lcd_send_4bits,GPIO_pIN_WRITE_LOGIC@config_pin
  6198   005480  6A11               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  6199   005482  501A               	movf	lcd_send_4bits@_data_command^0,w,c
  6200   005484  0B01               	andlw	1
  6201   005486  6E12               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  6202   005488  EC73  F01F         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  6203   00548C  C019  F01B         	movff	lcd_send_4bits@lcd,??_lcd_send_4bits
  6204   005490  0E03               	movlw	3
  6205   005492  261B               	addwf	??_lcd_send_4bits^0,f,c
  6206   005494  C01B  F010         	movff	??_lcd_send_4bits,GPIO_pIN_WRITE_LOGIC@config_pin
  6207   005498  6A11               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  6208   00549A  90D8               	bcf	status,0,c
  6209   00549C  301A               	rrcf	lcd_send_4bits@_data_command^0,w,c
  6210   00549E  0B01               	andlw	1
  6211   0054A0  6E12               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  6212   0054A2  EC73  F01F         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  6213   0054A6  C019  F01B         	movff	lcd_send_4bits@lcd,??_lcd_send_4bits
  6214   0054AA  0E04               	movlw	4
  6215   0054AC  261B               	addwf	??_lcd_send_4bits^0,f,c
  6216   0054AE  C01B  F010         	movff	??_lcd_send_4bits,GPIO_pIN_WRITE_LOGIC@config_pin
  6217   0054B2  6A11               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  6218   0054B4  401A               	rrncf	lcd_send_4bits@_data_command^0,w,c
  6219   0054B6  42E8               	rrncf	wreg,f,c
  6220   0054B8  0B3F               	andlw	63
  6221   0054BA  0B01               	andlw	1
  6222   0054BC  6E12               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  6223   0054BE  EC73  F01F         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  6224   0054C2                     
  6225                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 469:     ret = GPIO_pIN_WRITE_LOGIC(&(lcd->lcd_data[3]
      +                          ), (_data_command >> 3) & (uint8)0x01);
  6226   0054C2  C019  F01B         	movff	lcd_send_4bits@lcd,??_lcd_send_4bits
  6227   0054C6  0E05               	movlw	5
  6228   0054C8  261B               	addwf	??_lcd_send_4bits^0,f,c
  6229   0054CA  C01B  F010         	movff	??_lcd_send_4bits,GPIO_pIN_WRITE_LOGIC@config_pin
  6230   0054CE  6A11               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  6231   0054D0  381A               	swapf	lcd_send_4bits@_data_command^0,w,c
  6232   0054D2  46E8               	rlncf	wreg,f,c
  6233   0054D4  0B1F               	andlw	31
  6234   0054D6  0B01               	andlw	1
  6235   0054D8  6E12               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  6236   0054DA  EC73  F01F         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  6237   0054DE  6E1C               	movwf	lcd_send_4bits@ret^0,c
  6238                           
  6239                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 470:     return ret;
  6240   0054E0  501C               	movf	lcd_send_4bits@ret^0,w,c
  6241   0054E2  0012               	return		;funcret
  6242   0054E4                     __end_of_lcd_send_4bits:
  6243                           	callstack 0
  6244                           
  6245 ;; *************** function _lcd_4bit_send_enable_signal *****************
  6246 ;; Defined at:
  6247 ;;		line 480 in file "ECU_layer/chr_lcd/ecu_chr_lcd.c"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;  lcd             1   24[COMRAM] PTR const struct .
  6250 ;;		 -> lcd_4bit(6), 
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;  ret             1   26[COMRAM] unsigned char 
  6253 ;; Return value:  Size  Location     Type
  6254 ;;                  1    wreg      unsigned char 
  6255 ;; Registers used:
  6256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6257 ;; Tracked objects:
  6258 ;;		On entry : 0/0
  6259 ;;		On exit  : 0/0
  6260 ;;		Unchanged: 0/0
  6261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6262 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6263 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6264 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6265 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6266 ;;Total ram usage:        3 bytes
  6267 ;; Hardware stack levels used: 1
  6268 ;; Hardware stack levels required when called: 5
  6269 ;; This function calls:
  6270 ;;		_GPIO_pIN_WRITE_LOGIC
  6271 ;; This function is called by:
  6272 ;;		_lcd_4bit_send_command
  6273 ;;		_lcd_4bit_send_char_data
  6274 ;; This function uses a non-reentrant model
  6275 ;;
  6276                           
  6277                           	psect	text20
  6278   005BFA                     __ptext20:
  6279                           	callstack 0
  6280   005BFA                     _lcd_4bit_send_enable_signal:
  6281                           	callstack 22
  6282   005BFA  C019  F01A         	movff	lcd_4bit_send_enable_signal@lcd,??_lcd_4bit_send_enable_signal
  6283   005BFE  0E01               	movlw	1
  6284   005C00  261A               	addwf	??_lcd_4bit_send_enable_signal^0,f,c
  6285   005C02  C01A  F010         	movff	??_lcd_4bit_send_enable_signal,GPIO_pIN_WRITE_LOGIC@config_pin
  6286   005C06  6A11               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  6287   005C08  0E01               	movlw	1
  6288   005C0A  6E12               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  6289   005C0C  EC73  F01F         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  6290   005C10                     
  6291                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 483:     _delay((unsigned long)((5)*(8000000UL/4000000
      +                          .0)));
  6292   005C10  0E03               	movlw	3
  6293   005C12                     u15577:
  6294   005C12  2EE8               	decfsz	wreg,f,c
  6295   005C14  D7FE               	bra	u15577
  6296   005C16  0000               	nop	
  6297   005C18                     
  6298                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 484:     ret = GPIO_pIN_WRITE_LOGIC(&(lcd->lcd_en), GP
      +                          IO_LOW);
  6299   005C18  C019  F01A         	movff	lcd_4bit_send_enable_signal@lcd,??_lcd_4bit_send_enable_signal
  6300   005C1C  0E01               	movlw	1
  6301   005C1E  261A               	addwf	??_lcd_4bit_send_enable_signal^0,f,c
  6302   005C20  C01A  F010         	movff	??_lcd_4bit_send_enable_signal,GPIO_pIN_WRITE_LOGIC@config_pin
  6303   005C24  6A11               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  6304   005C26  0E00               	movlw	0
  6305   005C28  6E12               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  6306   005C2A  EC73  F01F         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  6307   005C2E  6E1B               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  6308   005C30                     
  6309                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 485:     return ret;
  6310   005C30  501B               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  6311   005C32  0012               	return		;funcret
  6312   005C34                     __end_of_lcd_4bit_send_enable_signal:
  6313                           	callstack 0
  6314                           
  6315 ;; *************** function _ccp2_init *****************
  6316 ;; Defined at:
  6317 ;;		line 12 in file "MKAL_layer/CCP2/hal_ccp2.c"
  6318 ;; Parameters:    Size  Location     Type
  6319 ;;  ccp2_           2   40[COMRAM] PTR const struct .
  6320 ;;		 -> ccp2_(10), 
  6321 ;; Auto vars:     Size  Location     Type
  6322 ;;  ret             1   46[COMRAM] unsigned char 
  6323 ;; Return value:  Size  Location     Type
  6324 ;;                  1    wreg      unsigned char 
  6325 ;; Registers used:
  6326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6327 ;; Tracked objects:
  6328 ;;		On entry : 0/0
  6329 ;;		On exit  : 0/0
  6330 ;;		Unchanged: 0/0
  6331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6332 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6333 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6334 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6335 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6336 ;;Total ram usage:        7 bytes
  6337 ;; Hardware stack levels used: 1
  6338 ;; Hardware stack levels required when called: 6
  6339 ;; This function calls:
  6340 ;;		_GPIO_pIN_INTIALIZE
  6341 ;;		___lldiv
  6342 ;;		___lmul
  6343 ;; This function is called by:
  6344 ;;		_intitialized_functions
  6345 ;; This function uses a non-reentrant model
  6346 ;;
  6347                           
  6348                           	psect	text21
  6349   0035EE                     __ptext21:
  6350                           	callstack 0
  6351   0035EE                     _ccp2_init:
  6352                           	callstack 23
  6353   0035EE                     
  6354                           ;MKAL_layer/CCP2/hal_ccp2.c: 14:     if (((void*)0) == ccp2_){
  6355   0035EE  5029               	movf	ccp2_init@ccp2_^0,w,c
  6356   0035F0  102A               	iorwf	(ccp2_init@ccp2_+1)^0,w,c
  6357   0035F2  A4D8               	btfss	status,2,c
  6358   0035F4  EFFE  F01A         	goto	u12841
  6359   0035F8  EF00  F01B         	goto	u12840
  6360   0035FC                     u12841:
  6361   0035FC  EF04  F01B         	goto	l11704
  6362   003600                     u12840:
  6363   003600                     
  6364                           ;MKAL_layer/CCP2/hal_ccp2.c: 15:         ret =(Std_ReturnType)0x00;
  6365   003600  0E00               	movlw	0
  6366   003602  6E2F               	movwf	ccp2_init@ret^0,c
  6367                           
  6368                           ;MKAL_layer/CCP2/hal_ccp2.c: 16:     }
  6369   003604  EFA9  F01B         	goto	l11736
  6370   003608                     l11704:
  6371                           
  6372                           ;MKAL_layer/CCP2/hal_ccp2.c: 18:     {;MKAL_layer/CCP2/hal_ccp2.c: 19:         (CCP2CONb
      +                          its.CCP2M =0);
  6373   003608  0EF0               	movlw	-16
  6374   00360A  16BA               	andwf	186,f,c	;volatile
  6375   00360C                     
  6376                           ;MKAL_layer/CCP2/hal_ccp2.c: 20:         if(ccp2_->ccp2_mode == ccp2_capture_mode_select
      +                          )
  6377   00360C  EE20 F002          	lfsr	2,2
  6378   003610  5029               	movf	ccp2_init@ccp2_^0,w,c
  6379   003612  26D9               	addwf	fsr2l,f,c
  6380   003614  502A               	movf	(ccp2_init@ccp2_+1)^0,w,c
  6381   003616  22DA               	addwfc	fsr2h,f,c
  6382   003618  50DF               	movf	indf2,w,c
  6383   00361A  A4D8               	btfss	status,2,c
  6384   00361C  EF12  F01B         	goto	u12851
  6385   003620  EF14  F01B         	goto	u12850
  6386   003624                     u12851:
  6387   003624  EF16  F01B         	goto	l11710
  6388   003628                     u12850:
  6389   003628  EF93  F01B         	goto	l11722
  6390   00362C                     l11710:
  6391   00362C  EE20 F002          	lfsr	2,2
  6392   003630  5029               	movf	ccp2_init@ccp2_^0,w,c
  6393   003632  26D9               	addwf	fsr2l,f,c
  6394   003634  502A               	movf	(ccp2_init@ccp2_+1)^0,w,c
  6395   003636  22DA               	addwfc	fsr2h,f,c
  6396   003638  04DE               	decf	postinc2,w,c
  6397   00363A  A4D8               	btfss	status,2,c
  6398   00363C  EF22  F01B         	goto	u12861
  6399   003640  EF24  F01B         	goto	u12860
  6400   003644                     u12861:
  6401   003644  EF26  F01B         	goto	l11714
  6402   003648                     u12860:
  6403   003648  EF93  F01B         	goto	l11722
  6404   00364C                     l11714:
  6405   00364C  EE20 F002          	lfsr	2,2
  6406   003650  5029               	movf	ccp2_init@ccp2_^0,w,c
  6407   003652  26D9               	addwf	fsr2l,f,c
  6408   003654  502A               	movf	(ccp2_init@ccp2_+1)^0,w,c
  6409   003656  22DA               	addwfc	fsr2h,f,c
  6410   003658  0E02               	movlw	2
  6411   00365A  18DE               	xorwf	postinc2,w,c
  6412   00365C  A4D8               	btfss	status,2,c
  6413   00365E  EF33  F01B         	goto	u12871
  6414   003662  EF35  F01B         	goto	u12870
  6415   003666                     u12871:
  6416   003666  EF93  F01B         	goto	l11722
  6417   00366A                     u12870:
  6418   00366A                     
  6419                           ;MKAL_layer/CCP2/hal_ccp2.c: 57:         {;MKAL_layer/CCP2/hal_ccp2.c: 58:             i
      +                          f(ccp2_->ccp2_mode_variant == 0x0E){
  6420   00366A  EE20 F003          	lfsr	2,3
  6421   00366E  5029               	movf	ccp2_init@ccp2_^0,w,c
  6422   003670  26D9               	addwf	fsr2l,f,c
  6423   003672  502A               	movf	(ccp2_init@ccp2_+1)^0,w,c
  6424   003674  22DA               	addwfc	fsr2h,f,c
  6425   003676  0E0E               	movlw	14
  6426   003678  18DE               	xorwf	postinc2,w,c
  6427   00367A  A4D8               	btfss	status,2,c
  6428   00367C  EF42  F01B         	goto	u12881
  6429   003680  EF44  F01B         	goto	u12880
  6430   003684                     u12881:
  6431   003684  EF48  F01B         	goto	l11720
  6432   003688                     u12880:
  6433   003688                     
  6434                           ;MKAL_layer/CCP2/hal_ccp2.c: 59:                 (CCP2CONbits.CCP2M =0x0E);
  6435   003688  50BA               	movf	186,w,c	;volatile
  6436   00368A  0BF0               	andlw	-16
  6437   00368C  090E               	iorlw	14
  6438   00368E  6EBA               	movwf	186,c	;volatile
  6439   003690                     l11720:
  6440                           
  6441                           ;MKAL_layer/CCP2/hal_ccp2.c: 63:                 PR2 = (uint8)((8000000UL/(4 *ccp2_->ccp
      +                          2_timer2_postscaler_cfg *ccp2_->ccp2_timer2_prescaler_cfg * ccp2_->ccp2_pwm_frequence))-
      +                          1);
  6442   003690  0E00               	movlw	0
  6443   003692  6E1C               	movwf	___lldiv@dividend^0,c
  6444   003694  0E12               	movlw	18
  6445   003696  6E1D               	movwf	(___lldiv@dividend+1)^0,c
  6446   003698  0E7A               	movlw	122
  6447   00369A  6E1E               	movwf	(___lldiv@dividend+2)^0,c
  6448   00369C  0E00               	movlw	0
  6449   00369E  6E1F               	movwf	(___lldiv@dividend+3)^0,c
  6450   0036A0  EE20 F009          	lfsr	2,9
  6451   0036A4  5029               	movf	ccp2_init@ccp2_^0,w,c
  6452   0036A6  26D9               	addwf	fsr2l,f,c
  6453   0036A8  502A               	movf	(ccp2_init@ccp2_+1)^0,w,c
  6454   0036AA  22DA               	addwfc	fsr2h,f,c
  6455   0036AC  38DF               	swapf	223,w,c
  6456   0036AE  0B03               	andlw	3
  6457   0036B0  6E2B               	movwf	??_ccp2_init^0,c
  6458   0036B2  EE20 F009          	lfsr	2,9
  6459   0036B6  5029               	movf	ccp2_init@ccp2_^0,w,c
  6460   0036B8  26D9               	addwf	fsr2l,f,c
  6461   0036BA  502A               	movf	(ccp2_init@ccp2_+1)^0,w,c
  6462   0036BC  22DA               	addwfc	fsr2h,f,c
  6463   0036BE  50DF               	movf	223,w,c
  6464   0036C0  0B0F               	andlw	15
  6465   0036C2  6E2C               	movwf	(??_ccp2_init+1)^0,c
  6466   0036C4  502C               	movf	(??_ccp2_init+1)^0,w,c
  6467   0036C6  022B               	mulwf	??_ccp2_init^0,c
  6468   0036C8  CFF3 F02D          	movff	prodl,??_ccp2_init+2
  6469   0036CC  CFF4 F02E          	movff	prodh,??_ccp2_init+3
  6470   0036D0  90D8               	bcf	status,0,c
  6471   0036D2  362D               	rlcf	(??_ccp2_init+2)^0,f,c
  6472   0036D4  362E               	rlcf	(??_ccp2_init+3)^0,f,c
  6473   0036D6  90D8               	bcf	status,0,c
  6474   0036D8  362D               	rlcf	(??_ccp2_init+2)^0,f,c
  6475   0036DA  362E               	rlcf	(??_ccp2_init+3)^0,f,c
  6476   0036DC  C02D  F010         	movff	??_ccp2_init+2,___lmul@multiplier
  6477   0036E0  C02E  F011         	movff	??_ccp2_init+3,___lmul@multiplier+1
  6478   0036E4  0E00               	movlw	0
  6479   0036E6  BE11               	btfsc	(___lmul@multiplier+1)^0,7,c
  6480   0036E8  0EFF               	movlw	-1
  6481   0036EA  6E12               	movwf	(___lmul@multiplier+2)^0,c
  6482   0036EC  6E13               	movwf	(___lmul@multiplier+3)^0,c
  6483   0036EE  EE20 F005          	lfsr	2,5
  6484   0036F2  5029               	movf	ccp2_init@ccp2_^0,w,c
  6485   0036F4  26D9               	addwf	fsr2l,f,c
  6486   0036F6  502A               	movf	(ccp2_init@ccp2_+1)^0,w,c
  6487   0036F8  22DA               	addwfc	fsr2h,f,c
  6488   0036FA  CFDE F014          	movff	postinc2,___lmul@multiplicand
  6489   0036FE  CFDE F015          	movff	postinc2,___lmul@multiplicand+1
  6490   003702  CFDE F016          	movff	postinc2,___lmul@multiplicand+2
  6491   003706  CFDE F017          	movff	postinc2,___lmul@multiplicand+3
  6492   00370A  EC15  F02B         	call	___lmul	;wreg free
  6493   00370E  C010  F020         	movff	?___lmul,___lldiv@divisor
  6494   003712  C011  F021         	movff	?___lmul+1,___lldiv@divisor+1
  6495   003716  C012  F022         	movff	?___lmul+2,___lldiv@divisor+2
  6496   00371A  C013  F023         	movff	?___lmul+3,___lldiv@divisor+3
  6497   00371E  EC69  F026         	call	___lldiv	;wreg free
  6498   003722  041C               	decf	?___lldiv^0,w,c
  6499   003724  6ECB               	movwf	203,c	;volatile
  6500   003726                     l11722:
  6501   003726  0E04               	movlw	4
  6502   003728  2429               	addwf	ccp2_init@ccp2_^0,w,c
  6503   00372A  6E19               	movwf	GPIO_pIN_INTIALIZE@config_pin^0,c
  6504   00372C  0E00               	movlw	0
  6505   00372E  202A               	addwfc	(ccp2_init@ccp2_+1)^0,w,c
  6506   003730  6E1A               	movwf	(GPIO_pIN_INTIALIZE@config_pin+1)^0,c
  6507   003732  ECA9  F02A         	call	_GPIO_pIN_INTIALIZE	;wreg free
  6508   003736                     
  6509                           ;MKAL_layer/CCP2/hal_ccp2.c: 74:         (PIE2bits.CCP2IE = 1);
  6510   003736  80A0               	bsf	160,0,c	;volatile
  6511   003738                     
  6512                           ;MKAL_layer/CCP2/hal_ccp2.c: 75:         (PIR2bits.CCP2IF = 0);
  6513   003738  90A1               	bcf	161,0,c	;volatile
  6514   00373A                     
  6515                           ;MKAL_layer/CCP2/hal_ccp2.c: 76:         CCP2_Interrupthandler = ccp2_->CCP2_handler;
  6516   00373A  C029  FFD9         	movff	ccp2_init@ccp2_,fsr2l
  6517   00373E  C02A  FFDA         	movff	ccp2_init@ccp2_+1,fsr2h
  6518   003742  CFDE F0B6          	movff	postinc2,_CCP2_Interrupthandler
  6519   003746  CFDD F0B7          	movff	postdec2,_CCP2_Interrupthandler+1
  6520   00374A                     
  6521                           ;MKAL_layer/CCP2/hal_ccp2.c: 90:         (INTCONbits.GIE =1);
  6522   00374A  8EF2               	bsf	242,7,c	;volatile
  6523   00374C                     
  6524                           ;MKAL_layer/CCP2/hal_ccp2.c: 91:         (INTCONbits.PEIE =1);
  6525   00374C  8CF2               	bsf	242,6,c	;volatile
  6526   00374E                     
  6527                           ;MKAL_layer/CCP2/hal_ccp2.c: 95:         ret =(Std_ReturnType)0x01;
  6528   00374E  0E01               	movlw	1
  6529   003750  6E2F               	movwf	ccp2_init@ret^0,c
  6530   003752                     l11736:
  6531                           
  6532                           ;MKAL_layer/CCP2/hal_ccp2.c: 97:     return ret;
  6533   003752  502F               	movf	ccp2_init@ret^0,w,c
  6534   003754  0012               	return		;funcret
  6535   003756                     __end_of_ccp2_init:
  6536                           	callstack 0
  6537                           
  6538 ;; *************** function _ccp1_init *****************
  6539 ;; Defined at:
  6540 ;;		line 12 in file "MKAL_layer/CCP1/hal_ccp1.c"
  6541 ;; Parameters:    Size  Location     Type
  6542 ;;  ccp1_           2   40[COMRAM] PTR const struct .
  6543 ;;		 -> ccp1_(10), 
  6544 ;; Auto vars:     Size  Location     Type
  6545 ;;  ret             1   46[COMRAM] unsigned char 
  6546 ;; Return value:  Size  Location     Type
  6547 ;;                  1    wreg      unsigned char 
  6548 ;; Registers used:
  6549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6550 ;; Tracked objects:
  6551 ;;		On entry : 0/0
  6552 ;;		On exit  : 0/0
  6553 ;;		Unchanged: 0/0
  6554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6555 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6556 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6557 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6558 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6559 ;;Total ram usage:        7 bytes
  6560 ;; Hardware stack levels used: 1
  6561 ;; Hardware stack levels required when called: 6
  6562 ;; This function calls:
  6563 ;;		_GPIO_pIN_INTIALIZE
  6564 ;;		___lldiv
  6565 ;;		___lmul
  6566 ;; This function is called by:
  6567 ;;		_intitialized_functions
  6568 ;; This function uses a non-reentrant model
  6569 ;;
  6570                           
  6571                           	psect	text22
  6572   003756                     __ptext22:
  6573                           	callstack 0
  6574   003756                     _ccp1_init:
  6575                           	callstack 23
  6576   003756                     
  6577                           ;MKAL_layer/CCP1/hal_ccp1.c: 14:     if (((void*)0) == ccp1_){
  6578   003756  5029               	movf	ccp1_init@ccp1_^0,w,c
  6579   003758  102A               	iorwf	(ccp1_init@ccp1_+1)^0,w,c
  6580   00375A  A4D8               	btfss	status,2,c
  6581   00375C  EFB2  F01B         	goto	u12791
  6582   003760  EFB4  F01B         	goto	u12790
  6583   003764                     u12791:
  6584   003764  EFB8  F01B         	goto	l11662
  6585   003768                     u12790:
  6586   003768                     
  6587                           ;MKAL_layer/CCP1/hal_ccp1.c: 15:         ret =(Std_ReturnType)0x00;
  6588   003768  0E00               	movlw	0
  6589   00376A  6E2F               	movwf	ccp1_init@ret^0,c
  6590                           
  6591                           ;MKAL_layer/CCP1/hal_ccp1.c: 16:     }
  6592   00376C  EF5D  F01C         	goto	l11694
  6593   003770                     l11662:
  6594                           
  6595                           ;MKAL_layer/CCP1/hal_ccp1.c: 18:     {;MKAL_layer/CCP1/hal_ccp1.c: 19:         (CCP1CONb
      +                          its.CCP1M =0);
  6596   003770  0EF0               	movlw	-16
  6597   003772  16BD               	andwf	189,f,c	;volatile
  6598   003774                     
  6599                           ;MKAL_layer/CCP1/hal_ccp1.c: 20:         if(ccp1_->ccp1_mode == ccp1_capture_mode_select
      +                          )
  6600   003774  EE20 F002          	lfsr	2,2
  6601   003778  5029               	movf	ccp1_init@ccp1_^0,w,c
  6602   00377A  26D9               	addwf	fsr2l,f,c
  6603   00377C  502A               	movf	(ccp1_init@ccp1_+1)^0,w,c
  6604   00377E  22DA               	addwfc	fsr2h,f,c
  6605   003780  50DF               	movf	indf2,w,c
  6606   003782  A4D8               	btfss	status,2,c
  6607   003784  EFC6  F01B         	goto	u12801
  6608   003788  EFC8  F01B         	goto	u12800
  6609   00378C                     u12801:
  6610   00378C  EFCA  F01B         	goto	l11668
  6611   003790                     u12800:
  6612   003790  EF47  F01C         	goto	l11680
  6613   003794                     l11668:
  6614   003794  EE20 F002          	lfsr	2,2
  6615   003798  5029               	movf	ccp1_init@ccp1_^0,w,c
  6616   00379A  26D9               	addwf	fsr2l,f,c
  6617   00379C  502A               	movf	(ccp1_init@ccp1_+1)^0,w,c
  6618   00379E  22DA               	addwfc	fsr2h,f,c
  6619   0037A0  04DE               	decf	postinc2,w,c
  6620   0037A2  A4D8               	btfss	status,2,c
  6621   0037A4  EFD6  F01B         	goto	u12811
  6622   0037A8  EFD8  F01B         	goto	u12810
  6623   0037AC                     u12811:
  6624   0037AC  EFDA  F01B         	goto	l11672
  6625   0037B0                     u12810:
  6626   0037B0  EF47  F01C         	goto	l11680
  6627   0037B4                     l11672:
  6628   0037B4  EE20 F002          	lfsr	2,2
  6629   0037B8  5029               	movf	ccp1_init@ccp1_^0,w,c
  6630   0037BA  26D9               	addwf	fsr2l,f,c
  6631   0037BC  502A               	movf	(ccp1_init@ccp1_+1)^0,w,c
  6632   0037BE  22DA               	addwfc	fsr2h,f,c
  6633   0037C0  0E02               	movlw	2
  6634   0037C2  18DE               	xorwf	postinc2,w,c
  6635   0037C4  A4D8               	btfss	status,2,c
  6636   0037C6  EFE7  F01B         	goto	u12821
  6637   0037CA  EFE9  F01B         	goto	u12820
  6638   0037CE                     u12821:
  6639   0037CE  EF47  F01C         	goto	l11680
  6640   0037D2                     u12820:
  6641   0037D2                     
  6642                           ;MKAL_layer/CCP1/hal_ccp1.c: 57:         {;MKAL_layer/CCP1/hal_ccp1.c: 58:             i
      +                          f(ccp1_->ccp1_mode_variant == 0x0E){
  6643   0037D2  EE20 F003          	lfsr	2,3
  6644   0037D6  5029               	movf	ccp1_init@ccp1_^0,w,c
  6645   0037D8  26D9               	addwf	fsr2l,f,c
  6646   0037DA  502A               	movf	(ccp1_init@ccp1_+1)^0,w,c
  6647   0037DC  22DA               	addwfc	fsr2h,f,c
  6648   0037DE  0E0E               	movlw	14
  6649   0037E0  18DE               	xorwf	postinc2,w,c
  6650   0037E2  A4D8               	btfss	status,2,c
  6651   0037E4  EFF6  F01B         	goto	u12831
  6652   0037E8  EFF8  F01B         	goto	u12830
  6653   0037EC                     u12831:
  6654   0037EC  EFFC  F01B         	goto	l11678
  6655   0037F0                     u12830:
  6656   0037F0                     
  6657                           ;MKAL_layer/CCP1/hal_ccp1.c: 59:                 (CCP1CONbits.CCP1M =0x0E);
  6658   0037F0  50BD               	movf	189,w,c	;volatile
  6659   0037F2  0BF0               	andlw	-16
  6660   0037F4  090E               	iorlw	14
  6661   0037F6  6EBD               	movwf	189,c	;volatile
  6662   0037F8                     l11678:
  6663                           
  6664                           ;MKAL_layer/CCP1/hal_ccp1.c: 63:                 PR2 = (uint8)((8000000UL/(4*ccp1_->time
      +                          r2_postscaler_cfg *ccp1_->timer2_prescaler_cfg * ccp1_->pwm_frequence))-1);
  6665   0037F8  0E00               	movlw	0
  6666   0037FA  6E1C               	movwf	___lldiv@dividend^0,c
  6667   0037FC  0E12               	movlw	18
  6668   0037FE  6E1D               	movwf	(___lldiv@dividend+1)^0,c
  6669   003800  0E7A               	movlw	122
  6670   003802  6E1E               	movwf	(___lldiv@dividend+2)^0,c
  6671   003804  0E00               	movlw	0
  6672   003806  6E1F               	movwf	(___lldiv@dividend+3)^0,c
  6673   003808  EE20 F009          	lfsr	2,9
  6674   00380C  5029               	movf	ccp1_init@ccp1_^0,w,c
  6675   00380E  26D9               	addwf	fsr2l,f,c
  6676   003810  502A               	movf	(ccp1_init@ccp1_+1)^0,w,c
  6677   003812  22DA               	addwfc	fsr2h,f,c
  6678   003814  38DF               	swapf	223,w,c
  6679   003816  0B03               	andlw	3
  6680   003818  6E2B               	movwf	??_ccp1_init^0,c
  6681   00381A  EE20 F009          	lfsr	2,9
  6682   00381E  5029               	movf	ccp1_init@ccp1_^0,w,c
  6683   003820  26D9               	addwf	fsr2l,f,c
  6684   003822  502A               	movf	(ccp1_init@ccp1_+1)^0,w,c
  6685   003824  22DA               	addwfc	fsr2h,f,c
  6686   003826  50DF               	movf	223,w,c
  6687   003828  0B0F               	andlw	15
  6688   00382A  6E2C               	movwf	(??_ccp1_init+1)^0,c
  6689   00382C  502C               	movf	(??_ccp1_init+1)^0,w,c
  6690   00382E  022B               	mulwf	??_ccp1_init^0,c
  6691   003830  CFF3 F02D          	movff	prodl,??_ccp1_init+2
  6692   003834  CFF4 F02E          	movff	prodh,??_ccp1_init+3
  6693   003838  90D8               	bcf	status,0,c
  6694   00383A  362D               	rlcf	(??_ccp1_init+2)^0,f,c
  6695   00383C  362E               	rlcf	(??_ccp1_init+3)^0,f,c
  6696   00383E  90D8               	bcf	status,0,c
  6697   003840  362D               	rlcf	(??_ccp1_init+2)^0,f,c
  6698   003842  362E               	rlcf	(??_ccp1_init+3)^0,f,c
  6699   003844  C02D  F010         	movff	??_ccp1_init+2,___lmul@multiplier
  6700   003848  C02E  F011         	movff	??_ccp1_init+3,___lmul@multiplier+1
  6701   00384C  0E00               	movlw	0
  6702   00384E  BE11               	btfsc	(___lmul@multiplier+1)^0,7,c
  6703   003850  0EFF               	movlw	-1
  6704   003852  6E12               	movwf	(___lmul@multiplier+2)^0,c
  6705   003854  6E13               	movwf	(___lmul@multiplier+3)^0,c
  6706   003856  EE20 F005          	lfsr	2,5
  6707   00385A  5029               	movf	ccp1_init@ccp1_^0,w,c
  6708   00385C  26D9               	addwf	fsr2l,f,c
  6709   00385E  502A               	movf	(ccp1_init@ccp1_+1)^0,w,c
  6710   003860  22DA               	addwfc	fsr2h,f,c
  6711   003862  CFDE F014          	movff	postinc2,___lmul@multiplicand
  6712   003866  CFDE F015          	movff	postinc2,___lmul@multiplicand+1
  6713   00386A  CFDE F016          	movff	postinc2,___lmul@multiplicand+2
  6714   00386E  CFDE F017          	movff	postinc2,___lmul@multiplicand+3
  6715   003872  EC15  F02B         	call	___lmul	;wreg free
  6716   003876  C010  F020         	movff	?___lmul,___lldiv@divisor
  6717   00387A  C011  F021         	movff	?___lmul+1,___lldiv@divisor+1
  6718   00387E  C012  F022         	movff	?___lmul+2,___lldiv@divisor+2
  6719   003882  C013  F023         	movff	?___lmul+3,___lldiv@divisor+3
  6720   003886  EC69  F026         	call	___lldiv	;wreg free
  6721   00388A  041C               	decf	?___lldiv^0,w,c
  6722   00388C  6ECB               	movwf	203,c	;volatile
  6723   00388E                     l11680:
  6724   00388E  0E04               	movlw	4
  6725   003890  2429               	addwf	ccp1_init@ccp1_^0,w,c
  6726   003892  6E19               	movwf	GPIO_pIN_INTIALIZE@config_pin^0,c
  6727   003894  0E00               	movlw	0
  6728   003896  202A               	addwfc	(ccp1_init@ccp1_+1)^0,w,c
  6729   003898  6E1A               	movwf	(GPIO_pIN_INTIALIZE@config_pin+1)^0,c
  6730   00389A  ECA9  F02A         	call	_GPIO_pIN_INTIALIZE	;wreg free
  6731   00389E                     
  6732                           ;MKAL_layer/CCP1/hal_ccp1.c: 74:         (PIE1bits.CCP1IE = 1);
  6733   00389E  849D               	bsf	157,2,c	;volatile
  6734   0038A0                     
  6735                           ;MKAL_layer/CCP1/hal_ccp1.c: 75:         (PIR1bits.CCP1IF = 0);
  6736   0038A0  949E               	bcf	158,2,c	;volatile
  6737   0038A2                     
  6738                           ;MKAL_layer/CCP1/hal_ccp1.c: 76:         CCP1_Interrupthandler = ccp1_->CCP1_handler;
  6739   0038A2  C029  FFD9         	movff	ccp1_init@ccp1_,fsr2l
  6740   0038A6  C02A  FFDA         	movff	ccp1_init@ccp1_+1,fsr2h
  6741   0038AA  CFDE F0B8          	movff	postinc2,_CCP1_Interrupthandler
  6742   0038AE  CFDD F0B9          	movff	postdec2,_CCP1_Interrupthandler+1
  6743   0038B2                     
  6744                           ;MKAL_layer/CCP1/hal_ccp1.c: 90:         (INTCONbits.GIE =1);
  6745   0038B2  8EF2               	bsf	242,7,c	;volatile
  6746   0038B4                     
  6747                           ;MKAL_layer/CCP1/hal_ccp1.c: 91:         (INTCONbits.PEIE =1);
  6748   0038B4  8CF2               	bsf	242,6,c	;volatile
  6749   0038B6                     
  6750                           ;MKAL_layer/CCP1/hal_ccp1.c: 95:         ret =(Std_ReturnType)0x01;
  6751   0038B6  0E01               	movlw	1
  6752   0038B8  6E2F               	movwf	ccp1_init@ret^0,c
  6753   0038BA                     l11694:
  6754                           
  6755                           ;MKAL_layer/CCP1/hal_ccp1.c: 97:     return ret;
  6756   0038BA  502F               	movf	ccp1_init@ret^0,w,c
  6757   0038BC  0012               	return		;funcret
  6758   0038BE                     __end_of_ccp1_init:
  6759                           	callstack 0
  6760                           
  6761 ;; *************** function ___lmul *****************
  6762 ;; Defined at:
  6763 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  6764 ;; Parameters:    Size  Location     Type
  6765 ;;  multiplier      4   15[COMRAM] unsigned long 
  6766 ;;  multiplicand    4   19[COMRAM] unsigned long 
  6767 ;; Auto vars:     Size  Location     Type
  6768 ;;  product         4   23[COMRAM] unsigned long 
  6769 ;; Return value:  Size  Location     Type
  6770 ;;                  4   15[COMRAM] unsigned long 
  6771 ;; Registers used:
  6772 ;;		wreg, status,2, status,0
  6773 ;; Tracked objects:
  6774 ;;		On entry : 0/0
  6775 ;;		On exit  : 0/0
  6776 ;;		Unchanged: 0/0
  6777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6778 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6779 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6781 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6782 ;;Total ram usage:       12 bytes
  6783 ;; Hardware stack levels used: 1
  6784 ;; Hardware stack levels required when called: 4
  6785 ;; This function calls:
  6786 ;;		Nothing
  6787 ;; This function is called by:
  6788 ;;		_ccp1_init
  6789 ;;		_ccp2_init
  6790 ;; This function uses a non-reentrant model
  6791 ;;
  6792                           
  6793                           	psect	text23
  6794   00562A                     __ptext23:
  6795                           	callstack 0
  6796   00562A                     ___lmul:
  6797                           	callstack 24
  6798   00562A  0E00               	movlw	0
  6799   00562C  6E18               	movwf	___lmul@product^0,c
  6800   00562E  0E00               	movlw	0
  6801   005630  6E19               	movwf	(___lmul@product+1)^0,c
  6802   005632  0E00               	movlw	0
  6803   005634  6E1A               	movwf	(___lmul@product+2)^0,c
  6804   005636  0E00               	movlw	0
  6805   005638  6E1B               	movwf	(___lmul@product+3)^0,c
  6806   00563A                     l11352:
  6807   00563A  A010               	btfss	___lmul@multiplier^0,0,c
  6808   00563C  EF22  F02B         	goto	u12521
  6809   005640  EF24  F02B         	goto	u12520
  6810   005644                     u12521:
  6811   005644  EF2C  F02B         	goto	l11356
  6812   005648                     u12520:
  6813   005648  5014               	movf	___lmul@multiplicand^0,w,c
  6814   00564A  2618               	addwf	___lmul@product^0,f,c
  6815   00564C  5015               	movf	(___lmul@multiplicand+1)^0,w,c
  6816   00564E  2219               	addwfc	(___lmul@product+1)^0,f,c
  6817   005650  5016               	movf	(___lmul@multiplicand+2)^0,w,c
  6818   005652  221A               	addwfc	(___lmul@product+2)^0,f,c
  6819   005654  5017               	movf	(___lmul@multiplicand+3)^0,w,c
  6820   005656  221B               	addwfc	(___lmul@product+3)^0,f,c
  6821   005658                     l11356:
  6822   005658  90D8               	bcf	status,0,c
  6823   00565A  3614               	rlcf	___lmul@multiplicand^0,f,c
  6824   00565C  3615               	rlcf	(___lmul@multiplicand+1)^0,f,c
  6825   00565E  3616               	rlcf	(___lmul@multiplicand+2)^0,f,c
  6826   005660  3617               	rlcf	(___lmul@multiplicand+3)^0,f,c
  6827   005662  90D8               	bcf	status,0,c
  6828   005664  3213               	rrcf	(___lmul@multiplier+3)^0,f,c
  6829   005666  3212               	rrcf	(___lmul@multiplier+2)^0,f,c
  6830   005668  3211               	rrcf	(___lmul@multiplier+1)^0,f,c
  6831   00566A  3210               	rrcf	___lmul@multiplier^0,f,c
  6832   00566C  5010               	movf	___lmul@multiplier^0,w,c
  6833   00566E  1011               	iorwf	(___lmul@multiplier+1)^0,w,c
  6834   005670  1012               	iorwf	(___lmul@multiplier+2)^0,w,c
  6835   005672  1013               	iorwf	(___lmul@multiplier+3)^0,w,c
  6836   005674  A4D8               	btfss	status,2,c
  6837   005676  EF3F  F02B         	goto	u12531
  6838   00567A  EF41  F02B         	goto	u12530
  6839   00567E                     u12531:
  6840   00567E  EF1D  F02B         	goto	l11352
  6841   005682                     u12530:
  6842   005682  C018  F010         	movff	___lmul@product,?___lmul
  6843   005686  C019  F011         	movff	___lmul@product+1,?___lmul+1
  6844   00568A  C01A  F012         	movff	___lmul@product+2,?___lmul+2
  6845   00568E  C01B  F013         	movff	___lmul@product+3,?___lmul+3
  6846   005692  0012               	return		;funcret
  6847   005694                     __end_of___lmul:
  6848                           	callstack 0
  6849                           
  6850 ;; *************** function ___lldiv *****************
  6851 ;; Defined at:
  6852 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  6853 ;; Parameters:    Size  Location     Type
  6854 ;;  dividend        4   27[COMRAM] unsigned long 
  6855 ;;  divisor         4   31[COMRAM] unsigned long 
  6856 ;; Auto vars:     Size  Location     Type
  6857 ;;  quotient        4   35[COMRAM] unsigned long 
  6858 ;;  counter         1   39[COMRAM] unsigned char 
  6859 ;; Return value:  Size  Location     Type
  6860 ;;                  4   27[COMRAM] unsigned long 
  6861 ;; Registers used:
  6862 ;;		wreg, status,2, status,0
  6863 ;; Tracked objects:
  6864 ;;		On entry : 0/0
  6865 ;;		On exit  : 0/0
  6866 ;;		Unchanged: 0/0
  6867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6868 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6869 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6871 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6872 ;;Total ram usage:       13 bytes
  6873 ;; Hardware stack levels used: 1
  6874 ;; Hardware stack levels required when called: 4
  6875 ;; This function calls:
  6876 ;;		Nothing
  6877 ;; This function is called by:
  6878 ;;		_ccp1_init
  6879 ;;		_ccp2_init
  6880 ;; This function uses a non-reentrant model
  6881 ;;
  6882                           
  6883                           	psect	text24
  6884   004CD2                     __ptext24:
  6885                           	callstack 0
  6886   004CD2                     ___lldiv:
  6887                           	callstack 24
  6888   004CD2  0E00               	movlw	0
  6889   004CD4  6E24               	movwf	___lldiv@quotient^0,c
  6890   004CD6  0E00               	movlw	0
  6891   004CD8  6E25               	movwf	(___lldiv@quotient+1)^0,c
  6892   004CDA  0E00               	movlw	0
  6893   004CDC  6E26               	movwf	(___lldiv@quotient+2)^0,c
  6894   004CDE  0E00               	movlw	0
  6895   004CE0  6E27               	movwf	(___lldiv@quotient+3)^0,c
  6896   004CE2  5020               	movf	___lldiv@divisor^0,w,c
  6897   004CE4  1021               	iorwf	(___lldiv@divisor+1)^0,w,c
  6898   004CE6  1022               	iorwf	(___lldiv@divisor+2)^0,w,c
  6899   004CE8  1023               	iorwf	(___lldiv@divisor+3)^0,w,c
  6900   004CEA  B4D8               	btfsc	status,2,c
  6901   004CEC  EF7A  F026         	goto	u12541
  6902   004CF0  EF7C  F026         	goto	u12540
  6903   004CF4                     u12541:
  6904   004CF4  EFB2  F026         	goto	l1873
  6905   004CF8                     u12540:
  6906   004CF8  0E01               	movlw	1
  6907   004CFA  6E28               	movwf	___lldiv@counter^0,c
  6908   004CFC  EF86  F026         	goto	l11368
  6909   004D00                     l11366:
  6910   004D00  90D8               	bcf	status,0,c
  6911   004D02  3620               	rlcf	___lldiv@divisor^0,f,c
  6912   004D04  3621               	rlcf	(___lldiv@divisor+1)^0,f,c
  6913   004D06  3622               	rlcf	(___lldiv@divisor+2)^0,f,c
  6914   004D08  3623               	rlcf	(___lldiv@divisor+3)^0,f,c
  6915   004D0A  2A28               	incf	___lldiv@counter^0,f,c
  6916   004D0C                     l11368:
  6917   004D0C  AE23               	btfss	(___lldiv@divisor+3)^0,7,c
  6918   004D0E  EF8B  F026         	goto	u12551
  6919   004D12  EF8D  F026         	goto	u12550
  6920   004D16                     u12551:
  6921   004D16  EF80  F026         	goto	l11366
  6922   004D1A                     u12550:
  6923   004D1A                     l11370:
  6924   004D1A  90D8               	bcf	status,0,c
  6925   004D1C  3624               	rlcf	___lldiv@quotient^0,f,c
  6926   004D1E  3625               	rlcf	(___lldiv@quotient+1)^0,f,c
  6927   004D20  3626               	rlcf	(___lldiv@quotient+2)^0,f,c
  6928   004D22  3627               	rlcf	(___lldiv@quotient+3)^0,f,c
  6929   004D24  5020               	movf	___lldiv@divisor^0,w,c
  6930   004D26  5C1C               	subwf	___lldiv@dividend^0,w,c
  6931   004D28  5021               	movf	(___lldiv@divisor+1)^0,w,c
  6932   004D2A  581D               	subwfb	(___lldiv@dividend+1)^0,w,c
  6933   004D2C  5022               	movf	(___lldiv@divisor+2)^0,w,c
  6934   004D2E  581E               	subwfb	(___lldiv@dividend+2)^0,w,c
  6935   004D30  5023               	movf	(___lldiv@divisor+3)^0,w,c
  6936   004D32  581F               	subwfb	(___lldiv@dividend+3)^0,w,c
  6937   004D34  A0D8               	btfss	status,0,c
  6938   004D36  EF9F  F026         	goto	u12561
  6939   004D3A  EFA1  F026         	goto	u12560
  6940   004D3E                     u12561:
  6941   004D3E  EFAA  F026         	goto	l11378
  6942   004D42                     u12560:
  6943   004D42  5020               	movf	___lldiv@divisor^0,w,c
  6944   004D44  5E1C               	subwf	___lldiv@dividend^0,f,c
  6945   004D46  5021               	movf	(___lldiv@divisor+1)^0,w,c
  6946   004D48  5A1D               	subwfb	(___lldiv@dividend+1)^0,f,c
  6947   004D4A  5022               	movf	(___lldiv@divisor+2)^0,w,c
  6948   004D4C  5A1E               	subwfb	(___lldiv@dividend+2)^0,f,c
  6949   004D4E  5023               	movf	(___lldiv@divisor+3)^0,w,c
  6950   004D50  5A1F               	subwfb	(___lldiv@dividend+3)^0,f,c
  6951   004D52  8024               	bsf	___lldiv@quotient^0,0,c
  6952   004D54                     l11378:
  6953   004D54  90D8               	bcf	status,0,c
  6954   004D56  3223               	rrcf	(___lldiv@divisor+3)^0,f,c
  6955   004D58  3222               	rrcf	(___lldiv@divisor+2)^0,f,c
  6956   004D5A  3221               	rrcf	(___lldiv@divisor+1)^0,f,c
  6957   004D5C  3220               	rrcf	___lldiv@divisor^0,f,c
  6958   004D5E  2E28               	decfsz	___lldiv@counter^0,f,c
  6959   004D60  EF8D  F026         	goto	l11370
  6960   004D64                     l1873:
  6961   004D64  C024  F01C         	movff	___lldiv@quotient,?___lldiv
  6962   004D68  C025  F01D         	movff	___lldiv@quotient+1,?___lldiv+1
  6963   004D6C  C026  F01E         	movff	___lldiv@quotient+2,?___lldiv+2
  6964   004D70  C027  F01F         	movff	___lldiv@quotient+3,?___lldiv+3
  6965   004D74  0012               	return		;funcret
  6966   004D76                     __end_of___lldiv:
  6967                           	callstack 0
  6968                           
  6969 ;; *************** function _Timer2_init *****************
  6970 ;; Defined at:
  6971 ;;		line 13 in file "MKAL_layer/timer2/hal_timer2.c"
  6972 ;; Parameters:    Size  Location     Type
  6973 ;;  Timer2          2   15[COMRAM] PTR const struct .
  6974 ;;		 -> Timer2(4), 
  6975 ;; Auto vars:     Size  Location     Type
  6976 ;;  ret             1   18[COMRAM] unsigned char 
  6977 ;; Return value:  Size  Location     Type
  6978 ;;                  1    wreg      unsigned char 
  6979 ;; Registers used:
  6980 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6981 ;; Tracked objects:
  6982 ;;		On entry : 0/0
  6983 ;;		On exit  : 0/0
  6984 ;;		Unchanged: 0/0
  6985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6986 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6987 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6988 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6989 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6990 ;;Total ram usage:        4 bytes
  6991 ;; Hardware stack levels used: 1
  6992 ;; Hardware stack levels required when called: 4
  6993 ;; This function calls:
  6994 ;;		Nothing
  6995 ;; This function is called by:
  6996 ;;		_intitialized_functions
  6997 ;; This function uses a non-reentrant model
  6998 ;;
  6999                           
  7000                           	psect	text25
  7001   004E16                     __ptext25:
  7002                           	callstack 0
  7003   004E16                     _Timer2_init:
  7004                           	callstack 25
  7005   004E16                     
  7006                           ;MKAL_layer/timer2/hal_timer2.c: 15:     if (((void*)0) == Timer2){
  7007   004E16  5010               	movf	Timer2_init@Timer2^0,w,c
  7008   004E18  1011               	iorwf	(Timer2_init@Timer2+1)^0,w,c
  7009   004E1A  A4D8               	btfss	status,2,c
  7010   004E1C  EF12  F027         	goto	u12781
  7011   004E20  EF14  F027         	goto	u12780
  7012   004E24                     u12781:
  7013   004E24  EF18  F027         	goto	l1632
  7014   004E28                     u12780:
  7015   004E28                     
  7016                           ;MKAL_layer/timer2/hal_timer2.c: 16:         ret =(Std_ReturnType)0x00;
  7017   004E28  0E00               	movlw	0
  7018   004E2A  6E13               	movwf	Timer2_init@ret^0,c
  7019                           
  7020                           ;MKAL_layer/timer2/hal_timer2.c: 17:     }
  7021   004E2C  EF58  F027         	goto	l11652
  7022   004E30                     l1632:
  7023                           
  7024                           ;MKAL_layer/timer2/hal_timer2.c: 19:     {;MKAL_layer/timer2/hal_timer2.c: 20:         (
      +                          T2CONbits.TMR2ON = 0);
  7025   004E30  94CA               	bcf	202,2,c	;volatile
  7026   004E32                     
  7027                           ;MKAL_layer/timer2/hal_timer2.c: 21:         (T2CONbits.T2CKPS = Timer2->timer2_prescale
      +                          r_cfg);;
  7028   004E32  EE20 F003          	lfsr	2,3
  7029   004E36  5010               	movf	Timer2_init@Timer2^0,w,c
  7030   004E38  26D9               	addwf	fsr2l,f,c
  7031   004E3A  5011               	movf	(Timer2_init@Timer2+1)^0,w,c
  7032   004E3C  22DA               	addwfc	fsr2h,f,c
  7033   004E3E  38DF               	swapf	223,w,c
  7034   004E40  0B03               	andlw	3
  7035   004E42  6E12               	movwf	??_Timer2_init^0,c
  7036   004E44  50CA               	movf	202,w,c	;volatile
  7037   004E46  1812               	xorwf	??_Timer2_init^0,w,c
  7038   004E48  0BFC               	andlw	-4
  7039   004E4A  1812               	xorwf	??_Timer2_init^0,w,c
  7040   004E4C  6ECA               	movwf	202,c	;volatile
  7041                           
  7042                           ;MKAL_layer/timer2/hal_timer2.c: 22:         (T2CONbits.TOUTPS = Timer2->timer2_postscal
      +                          er_cfg);;
  7043   004E4E  EE20 F003          	lfsr	2,3
  7044   004E52  5010               	movf	Timer2_init@Timer2^0,w,c
  7045   004E54  26D9               	addwf	fsr2l,f,c
  7046   004E56  5011               	movf	(Timer2_init@Timer2+1)^0,w,c
  7047   004E58  22DA               	addwfc	fsr2h,f,c
  7048   004E5A  50DF               	movf	223,w,c
  7049   004E5C  0B0F               	andlw	15
  7050   004E5E  6E12               	movwf	??_Timer2_init^0,c
  7051   004E60  4612               	rlncf	??_Timer2_init^0,f,c
  7052   004E62  4612               	rlncf	??_Timer2_init^0,f,c
  7053   004E64  4612               	rlncf	??_Timer2_init^0,f,c
  7054   004E66  50CA               	movf	202,w,c	;volatile
  7055   004E68  1812               	xorwf	??_Timer2_init^0,w,c
  7056   004E6A  0B87               	andlw	-121
  7057   004E6C  1812               	xorwf	??_Timer2_init^0,w,c
  7058   004E6E  6ECA               	movwf	202,c	;volatile
  7059                           
  7060                           ;MKAL_layer/timer2/hal_timer2.c: 23:         TMR2 = Timer2->timer1_preload_value;
  7061   004E70  EE20 F002          	lfsr	2,2
  7062   004E74  5010               	movf	Timer2_init@Timer2^0,w,c
  7063   004E76  26D9               	addwf	fsr2l,f,c
  7064   004E78  5011               	movf	(Timer2_init@Timer2+1)^0,w,c
  7065   004E7A  22DA               	addwfc	fsr2h,f,c
  7066   004E7C  50DF               	movf	indf2,w,c
  7067   004E7E  6ECC               	movwf	204,c	;volatile
  7068                           
  7069                           ;MKAL_layer/timer2/hal_timer2.c: 24:         Timer2_preload = Timer2->timer1_preload_val
      +                          ue;
  7070   004E80  EE20 F002          	lfsr	2,2
  7071   004E84  5010               	movf	Timer2_init@Timer2^0,w,c
  7072   004E86  26D9               	addwf	fsr2l,f,c
  7073   004E88  5011               	movf	(Timer2_init@Timer2+1)^0,w,c
  7074   004E8A  22DA               	addwfc	fsr2h,f,c
  7075   004E8C  50DF               	movf	indf2,w,c
  7076   004E8E  0100               	movlb	0	; () banked
  7077   004E90  6FBE               	movwf	_Timer2_preload& (0+255),b
  7078   004E92                     
  7079                           ; BSR set to: 0
  7080                           ;MKAL_layer/timer2/hal_timer2.c: 26:         (PIE1bits.TMR2IE = 1);
  7081   004E92  829D               	bsf	157,1,c	;volatile
  7082   004E94                     
  7083                           ; BSR set to: 0
  7084                           ;MKAL_layer/timer2/hal_timer2.c: 27:         (PIR1bits.TMR2IF = 0);
  7085   004E94  929E               	bcf	158,1,c	;volatile
  7086   004E96                     
  7087                           ; BSR set to: 0
  7088                           ;MKAL_layer/timer2/hal_timer2.c: 28:         TIMER2_Interrupthandler = Timer2->Timer2_ha
      +                          ndler;
  7089   004E96  C010  FFD9         	movff	Timer2_init@Timer2,fsr2l
  7090   004E9A  C011  FFDA         	movff	Timer2_init@Timer2+1,fsr2h
  7091   004E9E  CFDE F090          	movff	postinc2,_TIMER2_Interrupthandler
  7092   004EA2  CFDD F091          	movff	postdec2,_TIMER2_Interrupthandler+1
  7093   004EA6                     
  7094                           ; BSR set to: 0
  7095                           ;MKAL_layer/timer2/hal_timer2.c: 42:         (INTCONbits.GIE =1);
  7096   004EA6  8EF2               	bsf	242,7,c	;volatile
  7097   004EA8                     
  7098                           ; BSR set to: 0
  7099                           ;MKAL_layer/timer2/hal_timer2.c: 43:         (INTCONbits.PEIE =1);
  7100   004EA8  8CF2               	bsf	242,6,c	;volatile
  7101   004EAA                     
  7102                           ; BSR set to: 0
  7103                           ;MKAL_layer/timer2/hal_timer2.c: 47:         (T2CONbits.TMR2ON = 1);
  7104   004EAA  84CA               	bsf	202,2,c	;volatile
  7105   004EAC                     
  7106                           ; BSR set to: 0
  7107                           ;MKAL_layer/timer2/hal_timer2.c: 48:         ret = (Std_ReturnType)0x01;
  7108   004EAC  0E01               	movlw	1
  7109   004EAE  6E13               	movwf	Timer2_init@ret^0,c
  7110   004EB0                     l11652:
  7111                           
  7112                           ;MKAL_layer/timer2/hal_timer2.c: 50:     return ret;
  7113   004EB0  5013               	movf	Timer2_init@ret^0,w,c
  7114   004EB2  0012               	return		;funcret
  7115   004EB4                     __end_of_Timer2_init:
  7116                           	callstack 0
  7117                           
  7118 ;; *************** function _Timer1_init *****************
  7119 ;; Defined at:
  7120 ;;		line 17 in file "MKAL_layer/timer1/hal_timer1.c"
  7121 ;; Parameters:    Size  Location     Type
  7122 ;;  Timer1          2   17[COMRAM] PTR const struct .
  7123 ;;		 -> Timer1(5), 
  7124 ;; Auto vars:     Size  Location     Type
  7125 ;;  ret             1   21[COMRAM] unsigned char 
  7126 ;; Return value:  Size  Location     Type
  7127 ;;                  1    wreg      unsigned char 
  7128 ;; Registers used:
  7129 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7130 ;; Tracked objects:
  7131 ;;		On entry : 0/0
  7132 ;;		On exit  : 0/0
  7133 ;;		Unchanged: 0/0
  7134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7135 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7136 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7137 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7138 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7139 ;;Total ram usage:        5 bytes
  7140 ;; Hardware stack levels used: 1
  7141 ;; Hardware stack levels required when called: 5
  7142 ;; This function calls:
  7143 ;;		_timer1_mode_cfg
  7144 ;;		_timer1_osc_cfg
  7145 ;;		_timer1_reg_bit_cfg
  7146 ;; This function is called by:
  7147 ;;		_intitialized_functions
  7148 ;; This function uses a non-reentrant model
  7149 ;;
  7150                           
  7151                           	psect	text26
  7152   00488C                     __ptext26:
  7153                           	callstack 0
  7154   00488C                     _Timer1_init:
  7155                           	callstack 24
  7156   00488C                     
  7157                           ;MKAL_layer/timer1/hal_timer1.c: 19:     if (((void*)0) == Timer1){
  7158   00488C  5012               	movf	Timer1_init@Timer1^0,w,c
  7159   00488E  1013               	iorwf	(Timer1_init@Timer1+1)^0,w,c
  7160   004890  A4D8               	btfss	status,2,c
  7161   004892  EF4D  F024         	goto	u12751
  7162   004896  EF4F  F024         	goto	u12750
  7163   00489A                     u12751:
  7164   00489A  EF53  F024         	goto	l1567
  7165   00489E                     u12750:
  7166   00489E                     
  7167                           ;MKAL_layer/timer1/hal_timer1.c: 20:         ret =(Std_ReturnType)0x00;
  7168   00489E  0E00               	movlw	0
  7169   0048A0  6E16               	movwf	Timer1_init@ret^0,c
  7170                           
  7171                           ;MKAL_layer/timer1/hal_timer1.c: 21:     }
  7172   0048A2  EFA5  F024         	goto	l11596
  7173   0048A6                     l1567:
  7174                           
  7175                           ;MKAL_layer/timer1/hal_timer1.c: 23:     {;MKAL_layer/timer1/hal_timer1.c: 25:         (
      +                          T1CONbits.TMR1ON =0);
  7176   0048A6  90CD               	bcf	205,0,c	;volatile
  7177   0048A8                     
  7178                           ;MKAL_layer/timer1/hal_timer1.c: 27:         (T1CONbits.T1CKPS = Timer1->timer1_prescale
      +                          r_cfg);;
  7179   0048A8  EE20 F004          	lfsr	2,4
  7180   0048AC  5012               	movf	Timer1_init@Timer1^0,w,c
  7181   0048AE  26D9               	addwf	fsr2l,f,c
  7182   0048B0  5013               	movf	(Timer1_init@Timer1+1)^0,w,c
  7183   0048B2  22DA               	addwfc	fsr2h,f,c
  7184   0048B4  50DF               	movf	223,w,c
  7185   0048B6  0B03               	andlw	3
  7186   0048B8  6E14               	movwf	??_Timer1_init^0,c
  7187   0048BA  3A14               	swapf	??_Timer1_init^0,f,c
  7188   0048BC  50CD               	movf	205,w,c	;volatile
  7189   0048BE  1814               	xorwf	??_Timer1_init^0,w,c
  7190   0048C0  0BCF               	andlw	-49
  7191   0048C2  1814               	xorwf	??_Timer1_init^0,w,c
  7192   0048C4  6ECD               	movwf	205,c	;volatile
  7193   0048C6                     
  7194                           ;MKAL_layer/timer1/hal_timer1.c: 29:         timer1_mode_cfg(Timer1);
  7195   0048C6  C012  F010         	movff	Timer1_init@Timer1,timer1_mode_cfg@Timer1
  7196   0048CA  C013  F011         	movff	Timer1_init@Timer1+1,timer1_mode_cfg@Timer1+1
  7197   0048CE  EC0D  F029         	call	_timer1_mode_cfg	;wreg free
  7198   0048D2                     
  7199                           ;MKAL_layer/timer1/hal_timer1.c: 31:         timer1_reg_bit_cfg(Timer1);
  7200   0048D2  C012  F010         	movff	Timer1_init@Timer1,timer1_reg_bit_cfg@Timer1
  7201   0048D6  C013  F011         	movff	Timer1_init@Timer1+1,timer1_reg_bit_cfg@Timer1+1
  7202   0048DA  EC83  F02D         	call	_timer1_reg_bit_cfg	;wreg free
  7203   0048DE                     
  7204                           ;MKAL_layer/timer1/hal_timer1.c: 33:         timer1_osc_cfg(Timer1);
  7205   0048DE  C012  F010         	movff	Timer1_init@Timer1,timer1_osc_cfg@Timer1
  7206   0048E2  C013  F011         	movff	Timer1_init@Timer1+1,timer1_osc_cfg@Timer1+1
  7207   0048E6  ECA2  F02D         	call	_timer1_osc_cfg	;wreg free
  7208   0048EA                     
  7209                           ;MKAL_layer/timer1/hal_timer1.c: 35:          TMR1H = ((Timer1->timer1_preload_value) >>
      +                           8);
  7210   0048EA  EE20 F002          	lfsr	2,2
  7211   0048EE  5012               	movf	Timer1_init@Timer1^0,w,c
  7212   0048F0  26D9               	addwf	fsr2l,f,c
  7213   0048F2  5013               	movf	(Timer1_init@Timer1+1)^0,w,c
  7214   0048F4  22DA               	addwfc	fsr2h,f,c
  7215   0048F6  CFDE F014          	movff	postinc2,??_Timer1_init
  7216   0048FA  CFDD F015          	movff	postdec2,??_Timer1_init+1
  7217   0048FE  C015  F014         	movff	??_Timer1_init+1,??_Timer1_init
  7218   004902  6A15               	clrf	(??_Timer1_init+1)^0,c
  7219   004904  5014               	movf	??_Timer1_init^0,w,c
  7220   004906  6ECF               	movwf	207,c	;volatile
  7221   004908                     
  7222                           ;MKAL_layer/timer1/hal_timer1.c: 36:          TMR1L = (uint8)(Timer1->timer1_preload_val
      +                          ue);
  7223   004908  EE20 F002          	lfsr	2,2
  7224   00490C  5012               	movf	Timer1_init@Timer1^0,w,c
  7225   00490E  26D9               	addwf	fsr2l,f,c
  7226   004910  5013               	movf	(Timer1_init@Timer1+1)^0,w,c
  7227   004912  22DA               	addwfc	fsr2h,f,c
  7228   004914  50DF               	movf	indf2,w,c
  7229   004916  6ECE               	movwf	206,c	;volatile
  7230   004918                     
  7231                           ;MKAL_layer/timer1/hal_timer1.c: 38:          Timer1_preload = Timer1->timer1_preload_va
      +                          lue;
  7232   004918  EE20 F002          	lfsr	2,2
  7233   00491C  5012               	movf	Timer1_init@Timer1^0,w,c
  7234   00491E  26D9               	addwf	fsr2l,f,c
  7235   004920  5013               	movf	(Timer1_init@Timer1+1)^0,w,c
  7236   004922  22DA               	addwfc	fsr2h,f,c
  7237   004924  CFDE F092          	movff	postinc2,_Timer1_preload
  7238   004928  CFDD F093          	movff	postdec2,_Timer1_preload+1
  7239   00492C                     
  7240                           ;MKAL_layer/timer1/hal_timer1.c: 41:         (PIE1bits.TMR1IE = 1);
  7241   00492C  809D               	bsf	157,0,c	;volatile
  7242   00492E                     
  7243                           ;MKAL_layer/timer1/hal_timer1.c: 42:         (PIR1bits.TMR1IF = 0);
  7244   00492E  909E               	bcf	158,0,c	;volatile
  7245   004930                     
  7246                           ;MKAL_layer/timer1/hal_timer1.c: 43:         TIMER1_Interrupthandler = Timer1->Timer1_ha
      +                          ndler;
  7247   004930  C012  FFD9         	movff	Timer1_init@Timer1,fsr2l
  7248   004934  C013  FFDA         	movff	Timer1_init@Timer1+1,fsr2h
  7249   004938  CFDE F094          	movff	postinc2,_TIMER1_Interrupthandler
  7250   00493C  CFDD F095          	movff	postdec2,_TIMER1_Interrupthandler+1
  7251   004940                     
  7252                           ;MKAL_layer/timer1/hal_timer1.c: 57:         (INTCONbits.GIE =1);
  7253   004940  8EF2               	bsf	242,7,c	;volatile
  7254   004942                     
  7255                           ;MKAL_layer/timer1/hal_timer1.c: 58:         (INTCONbits.PEIE =1);
  7256   004942  8CF2               	bsf	242,6,c	;volatile
  7257   004944                     
  7258                           ;MKAL_layer/timer1/hal_timer1.c: 63:         (T1CONbits.TMR1ON =1);
  7259   004944  80CD               	bsf	205,0,c	;volatile
  7260   004946                     
  7261                           ;MKAL_layer/timer1/hal_timer1.c: 64:         ret =(Std_ReturnType)0x01;
  7262   004946  0E01               	movlw	1
  7263   004948  6E16               	movwf	Timer1_init@ret^0,c
  7264   00494A                     l11596:
  7265                           
  7266                           ;MKAL_layer/timer1/hal_timer1.c: 66:     return ret;
  7267   00494A  5016               	movf	Timer1_init@ret^0,w,c
  7268   00494C  0012               	return		;funcret
  7269   00494E                     __end_of_Timer1_init:
  7270                           	callstack 0
  7271                           
  7272 ;; *************** function _timer1_reg_bit_cfg *****************
  7273 ;; Defined at:
  7274 ;;		line 133 in file "MKAL_layer/timer1/hal_timer1.c"
  7275 ;; Parameters:    Size  Location     Type
  7276 ;;  Timer1          2   15[COMRAM] PTR const struct .
  7277 ;;		 -> Timer1(5), 
  7278 ;; Auto vars:     Size  Location     Type
  7279 ;;		None
  7280 ;; Return value:  Size  Location     Type
  7281 ;;                  1    wreg      void 
  7282 ;; Registers used:
  7283 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7284 ;; Tracked objects:
  7285 ;;		On entry : 0/0
  7286 ;;		On exit  : 0/0
  7287 ;;		Unchanged: 0/0
  7288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7289 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7292 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7293 ;;Total ram usage:        2 bytes
  7294 ;; Hardware stack levels used: 1
  7295 ;; Hardware stack levels required when called: 4
  7296 ;; This function calls:
  7297 ;;		Nothing
  7298 ;; This function is called by:
  7299 ;;		_Timer1_init
  7300 ;; This function uses a non-reentrant model
  7301 ;;
  7302                           
  7303                           	psect	text27
  7304   005B06                     __ptext27:
  7305                           	callstack 0
  7306   005B06                     _timer1_reg_bit_cfg:
  7307                           	callstack 24
  7308   005B06                     
  7309                           ;MKAL_layer/timer1/hal_timer1.c: 134:     if(Timer1->timer1_wr__reg_cfg == 0){
  7310   005B06  EE20 F004          	lfsr	2,4
  7311   005B0A  5010               	movf	timer1_reg_bit_cfg@Timer1^0,w,c
  7312   005B0C  26D9               	addwf	fsr2l,f,c
  7313   005B0E  5011               	movf	(timer1_reg_bit_cfg@Timer1+1)^0,w,c
  7314   005B10  22DA               	addwfc	fsr2h,f,c
  7315   005B12  BADF               	btfsc	indf2,5,c
  7316   005B14  EF8E  F02D         	goto	u12361
  7317   005B18  EF90  F02D         	goto	u12360
  7318   005B1C                     u12361:
  7319   005B1C  EF93  F02D         	goto	l11238
  7320   005B20                     u12360:
  7321   005B20                     
  7322                           ;MKAL_layer/timer1/hal_timer1.c: 135:         (T1CONbits.RD16 =0);
  7323   005B20  9ECD               	bcf	205,7,c	;volatile
  7324                           
  7325                           ;MKAL_layer/timer1/hal_timer1.c: 136:     }
  7326   005B22  EFA1  F02D         	goto	l1604
  7327   005B26                     l11238:
  7328   005B26  EE20 F004          	lfsr	2,4
  7329   005B2A  5010               	movf	timer1_reg_bit_cfg@Timer1^0,w,c
  7330   005B2C  26D9               	addwf	fsr2l,f,c
  7331   005B2E  5011               	movf	(timer1_reg_bit_cfg@Timer1+1)^0,w,c
  7332   005B30  22DA               	addwfc	fsr2h,f,c
  7333   005B32  AADF               	btfss	indf2,5,c
  7334   005B34  EF9E  F02D         	goto	u12371
  7335   005B38  EFA0  F02D         	goto	u12370
  7336   005B3C                     u12371:
  7337   005B3C  EFA1  F02D         	goto	l1604
  7338   005B40                     u12370:
  7339   005B40                     
  7340                           ;MKAL_layer/timer1/hal_timer1.c: 138:         (T1CONbits.RD16 =1);
  7341   005B40  8ECD               	bsf	205,7,c	;volatile
  7342   005B42                     l1604:
  7343   005B42  0012               	return		;funcret
  7344   005B44                     __end_of_timer1_reg_bit_cfg:
  7345                           	callstack 0
  7346                           
  7347 ;; *************** function _timer1_osc_cfg *****************
  7348 ;; Defined at:
  7349 ;;		line 143 in file "MKAL_layer/timer1/hal_timer1.c"
  7350 ;; Parameters:    Size  Location     Type
  7351 ;;  Timer1          2   15[COMRAM] PTR const struct .
  7352 ;;		 -> Timer1(5), 
  7353 ;; Auto vars:     Size  Location     Type
  7354 ;;		None
  7355 ;; Return value:  Size  Location     Type
  7356 ;;                  1    wreg      void 
  7357 ;; Registers used:
  7358 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7359 ;; Tracked objects:
  7360 ;;		On entry : 0/0
  7361 ;;		On exit  : 0/0
  7362 ;;		Unchanged: 0/0
  7363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7364 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7367 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7368 ;;Total ram usage:        2 bytes
  7369 ;; Hardware stack levels used: 1
  7370 ;; Hardware stack levels required when called: 4
  7371 ;; This function calls:
  7372 ;;		Nothing
  7373 ;; This function is called by:
  7374 ;;		_Timer1_init
  7375 ;; This function uses a non-reentrant model
  7376 ;;
  7377                           
  7378                           	psect	text28
  7379   005B44                     __ptext28:
  7380                           	callstack 0
  7381   005B44                     _timer1_osc_cfg:
  7382                           	callstack 24
  7383   005B44                     
  7384                           ;MKAL_layer/timer1/hal_timer1.c: 144:     if(Timer1->timer1_osc_cfg == 1){
  7385   005B44  EE20 F004          	lfsr	2,4
  7386   005B48  5010               	movf	timer1_osc_cfg@Timer1^0,w,c
  7387   005B4A  26D9               	addwf	fsr2l,f,c
  7388   005B4C  5011               	movf	(timer1_osc_cfg@Timer1+1)^0,w,c
  7389   005B4E  22DA               	addwfc	fsr2h,f,c
  7390   005B50  A8DF               	btfss	indf2,4,c
  7391   005B52  EFAD  F02D         	goto	u12381
  7392   005B56  EFAF  F02D         	goto	u12380
  7393   005B5A                     u12381:
  7394   005B5A  EFB2  F02D         	goto	l11246
  7395   005B5E                     u12380:
  7396   005B5E                     
  7397                           ;MKAL_layer/timer1/hal_timer1.c: 145:         (T1CONbits.T1OSCEN =1);
  7398   005B5E  86CD               	bsf	205,3,c	;volatile
  7399                           
  7400                           ;MKAL_layer/timer1/hal_timer1.c: 146:     }
  7401   005B60  EFC0  F02D         	goto	l1611
  7402   005B64                     l11246:
  7403   005B64  EE20 F004          	lfsr	2,4
  7404   005B68  5010               	movf	timer1_osc_cfg@Timer1^0,w,c
  7405   005B6A  26D9               	addwf	fsr2l,f,c
  7406   005B6C  5011               	movf	(timer1_osc_cfg@Timer1+1)^0,w,c
  7407   005B6E  22DA               	addwfc	fsr2h,f,c
  7408   005B70  B8DF               	btfsc	indf2,4,c
  7409   005B72  EFBD  F02D         	goto	u12391
  7410   005B76  EFBF  F02D         	goto	u12390
  7411   005B7A                     u12391:
  7412   005B7A  EFC0  F02D         	goto	l1611
  7413   005B7E                     u12390:
  7414   005B7E                     
  7415                           ;MKAL_layer/timer1/hal_timer1.c: 148:         (T1CONbits.T1OSCEN =0);
  7416   005B7E  96CD               	bcf	205,3,c	;volatile
  7417   005B80                     l1611:
  7418   005B80  0012               	return		;funcret
  7419   005B82                     __end_of_timer1_osc_cfg:
  7420                           	callstack 0
  7421                           
  7422 ;; *************** function _timer1_mode_cfg *****************
  7423 ;; Defined at:
  7424 ;;		line 116 in file "MKAL_layer/timer1/hal_timer1.c"
  7425 ;; Parameters:    Size  Location     Type
  7426 ;;  Timer1          2   15[COMRAM] PTR const struct .
  7427 ;;		 -> Timer1(5), 
  7428 ;; Auto vars:     Size  Location     Type
  7429 ;;		None
  7430 ;; Return value:  Size  Location     Type
  7431 ;;                  1    wreg      void 
  7432 ;; Registers used:
  7433 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7434 ;; Tracked objects:
  7435 ;;		On entry : 0/0
  7436 ;;		On exit  : 0/0
  7437 ;;		Unchanged: 0/0
  7438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7439 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7442 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7443 ;;Total ram usage:        2 bytes
  7444 ;; Hardware stack levels used: 1
  7445 ;; Hardware stack levels required when called: 4
  7446 ;; This function calls:
  7447 ;;		Nothing
  7448 ;; This function is called by:
  7449 ;;		_Timer1_init
  7450 ;; This function uses a non-reentrant model
  7451 ;;
  7452                           
  7453                           	psect	text29
  7454   00521A                     __ptext29:
  7455                           	callstack 0
  7456   00521A                     _timer1_mode_cfg:
  7457                           	callstack 24
  7458   00521A                     
  7459                           ;MKAL_layer/timer1/hal_timer1.c: 117:     if(Timer1->timer1_mode == 1){
  7460   00521A  EE20 F004          	lfsr	2,4
  7461   00521E  5010               	movf	timer1_mode_cfg@Timer1^0,w,c
  7462   005220  26D9               	addwf	fsr2l,f,c
  7463   005222  5011               	movf	(timer1_mode_cfg@Timer1+1)^0,w,c
  7464   005224  22DA               	addwfc	fsr2h,f,c
  7465   005226  A4DF               	btfss	indf2,2,c
  7466   005228  EF18  F029         	goto	u12321
  7467   00522C  EF1A  F029         	goto	u12320
  7468   005230                     u12321:
  7469   005230  EF3D  F029         	goto	l11230
  7470   005234                     u12320:
  7471   005234                     
  7472                           ;MKAL_layer/timer1/hal_timer1.c: 118:          (T1CONbits.TMR1CS =1);
  7473   005234  82CD               	bsf	205,1,c	;volatile
  7474   005236                     
  7475                           ;MKAL_layer/timer1/hal_timer1.c: 119:         if(Timer1->timer1_counter_mode == 1){
  7476   005236  EE20 F004          	lfsr	2,4
  7477   00523A  5010               	movf	timer1_mode_cfg@Timer1^0,w,c
  7478   00523C  26D9               	addwf	fsr2l,f,c
  7479   00523E  5011               	movf	(timer1_mode_cfg@Timer1+1)^0,w,c
  7480   005240  22DA               	addwfc	fsr2h,f,c
  7481   005242  A6DF               	btfss	indf2,3,c
  7482   005244  EF26  F029         	goto	u12331
  7483   005248  EF28  F029         	goto	u12330
  7484   00524C                     u12331:
  7485   00524C  EF2B  F029         	goto	l11226
  7486   005250                     u12330:
  7487   005250                     
  7488                           ;MKAL_layer/timer1/hal_timer1.c: 120:             (T1CONbits.nT1SYNC =1);
  7489   005250  84CD               	bsf	205,2,c	;volatile
  7490                           
  7491                           ;MKAL_layer/timer1/hal_timer1.c: 121:         }
  7492   005252  EF4B  F029         	goto	l1597
  7493   005256                     l11226:
  7494   005256  EE20 F004          	lfsr	2,4
  7495   00525A  5010               	movf	timer1_mode_cfg@Timer1^0,w,c
  7496   00525C  26D9               	addwf	fsr2l,f,c
  7497   00525E  5011               	movf	(timer1_mode_cfg@Timer1+1)^0,w,c
  7498   005260  22DA               	addwfc	fsr2h,f,c
  7499   005262  B6DF               	btfsc	indf2,3,c
  7500   005264  EF36  F029         	goto	u12341
  7501   005268  EF38  F029         	goto	u12340
  7502   00526C                     u12341:
  7503   00526C  EF3B  F029         	goto	l1591
  7504   005270                     u12340:
  7505   005270                     
  7506                           ;MKAL_layer/timer1/hal_timer1.c: 123:             (T1CONbits.nT1SYNC =0);
  7507   005270  94CD               	bcf	205,2,c	;volatile
  7508                           
  7509                           ;MKAL_layer/timer1/hal_timer1.c: 124:         }
  7510   005272  EF4B  F029         	goto	l1597
  7511   005276                     l1591:
  7512                           
  7513                           ;MKAL_layer/timer1/hal_timer1.c: 126:     }
  7514   005276  EF4B  F029         	goto	l1597
  7515   00527A                     l11230:
  7516   00527A  EE20 F004          	lfsr	2,4
  7517   00527E  5010               	movf	timer1_mode_cfg@Timer1^0,w,c
  7518   005280  26D9               	addwf	fsr2l,f,c
  7519   005282  5011               	movf	(timer1_mode_cfg@Timer1+1)^0,w,c
  7520   005284  22DA               	addwfc	fsr2h,f,c
  7521   005286  B4DF               	btfsc	indf2,2,c
  7522   005288  EF48  F029         	goto	u12351
  7523   00528C  EF4A  F029         	goto	u12350
  7524   005290                     u12351:
  7525   005290  EF4B  F029         	goto	l1597
  7526   005294                     u12350:
  7527   005294                     
  7528                           ;MKAL_layer/timer1/hal_timer1.c: 128:        (T1CONbits.TMR1CS =0);
  7529   005294  92CD               	bcf	205,1,c	;volatile
  7530   005296                     l1597:
  7531   005296  0012               	return		;funcret
  7532   005298                     __end_of_timer1_mode_cfg:
  7533                           	callstack 0
  7534                           
  7535 ;; *************** function _MSSP_I2C_Init *****************
  7536 ;; Defined at:
  7537 ;;		line 20 in file "MKAL_layer/I2C/hal_i2c.c"
  7538 ;; Parameters:    Size  Location     Type
  7539 ;;  i2c_obj         2    4[BANK1 ] PTR const struct .
  7540 ;;		 -> mssp_i2c(15), 
  7541 ;; Auto vars:     Size  Location     Type
  7542 ;;  ret             1    6[BANK1 ] unsigned char 
  7543 ;; Return value:  Size  Location     Type
  7544 ;;                  1    wreg      unsigned char 
  7545 ;; Registers used:
  7546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7547 ;; Tracked objects:
  7548 ;;		On entry : 0/0
  7549 ;;		On exit  : 0/0
  7550 ;;		Unchanged: 0/0
  7551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7552 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7553 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7555 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7556 ;;Total ram usage:        3 bytes
  7557 ;; Hardware stack levels used: 1
  7558 ;; Hardware stack levels required when called: 6
  7559 ;; This function calls:
  7560 ;;		_I2C_Master_Mode_Clock_Configurations
  7561 ;;		_I2C_Slave_Mode_Configurations
  7562 ;;		_MSSP_I2C_Interrupt_Configurations
  7563 ;;		_MSSP_I2C_Mode_GPIO_CFG
  7564 ;; This function is called by:
  7565 ;;		_intitialized_functions
  7566 ;; This function uses a non-reentrant model
  7567 ;;
  7568                           
  7569                           	psect	text30
  7570   0038BE                     __ptext30:
  7571                           	callstack 0
  7572   0038BE                     _MSSP_I2C_Init:
  7573                           	callstack 23
  7574   0038BE                     
  7575                           ;MKAL_layer/I2C/hal_i2c.c: 22:     if(((void*)0) == i2c_obj){
  7576   0038BE  0101               	movlb	1	; () banked
  7577   0038C0  519F               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  7578   0038C2  11A0               	iorwf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  7579   0038C4  A4D8               	btfss	status,2,c
  7580   0038C6  EF67  F01C         	goto	u12631
  7581   0038CA  EF69  F01C         	goto	u12630
  7582   0038CE                     u12631:
  7583   0038CE  EF6D  F01C         	goto	l1021
  7584   0038D2                     u12630:
  7585   0038D2                     
  7586                           ; BSR set to: 1
  7587                           ;MKAL_layer/I2C/hal_i2c.c: 23:         ret = (Std_ReturnType)0x00;
  7588   0038D2  0E00               	movlw	0
  7589   0038D4  6FA1               	movwf	MSSP_I2C_Init@ret& (0+255),b
  7590                           
  7591                           ;MKAL_layer/I2C/hal_i2c.c: 24:     }
  7592   0038D6  EF08  F01D         	goto	l11496
  7593   0038DA                     l1021:
  7594                           
  7595                           ; BSR set to: 1
  7596                           ;MKAL_layer/I2C/hal_i2c.c: 27:         (SSPCON1bits.SSPEN = 0);
  7597   0038DA  9AC6               	bcf	198,5,c	;volatile
  7598   0038DC                     
  7599                           ; BSR set to: 1
  7600                           ;MKAL_layer/I2C/hal_i2c.c: 29:         if(1 == i2c_obj->i2c_cfg.i2c_mode){
  7601   0038DC  EE20 F006          	lfsr	2,6
  7602   0038E0  519F               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  7603   0038E2  26D9               	addwf	fsr2l,f,c
  7604   0038E4  51A0               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  7605   0038E6  22DA               	addwfc	fsr2h,f,c
  7606   0038E8  A0DF               	btfss	indf2,0,c
  7607   0038EA  EF79  F01C         	goto	u12641
  7608   0038EE  EF7B  F01C         	goto	u12640
  7609   0038F2                     u12641:
  7610   0038F2  EF83  F01C         	goto	l11458
  7611   0038F6                     u12640:
  7612   0038F6                     
  7613                           ; BSR set to: 1
  7614                           ;MKAL_layer/I2C/hal_i2c.c: 31:             I2C_Master_Mode_Clock_Configurations(i2c_obj)
      +                          ;
  7615   0038F6  C19F  F19D         	movff	MSSP_I2C_Init@i2c_obj,I2C_Master_Mode_Clock_Configurations@i2c_obj
  7616   0038FA  C1A0  F19E         	movff	MSSP_I2C_Init@i2c_obj+1,I2C_Master_Mode_Clock_Configurations@i2c_obj+1
  7617   0038FE  ECBB  F026         	call	_I2C_Master_Mode_Clock_Configurations	;wreg free
  7618                           
  7619                           ;MKAL_layer/I2C/hal_i2c.c: 32:         }
  7620   003902  EFBF  F01C         	goto	l11472
  7621   003906                     l11458:
  7622                           
  7623                           ; BSR set to: 1
  7624   003906  EE20 F006          	lfsr	2,6
  7625   00390A  519F               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  7626   00390C  26D9               	addwf	fsr2l,f,c
  7627   00390E  51A0               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  7628   003910  22DA               	addwfc	fsr2h,f,c
  7629   003912  B0DF               	btfsc	indf2,0,c
  7630   003914  EF8E  F01C         	goto	u12651
  7631   003918  EF90  F01C         	goto	u12650
  7632   00391C                     u12651:
  7633   00391C  EFBF  F01C         	goto	l11472
  7634   003920                     u12650:
  7635   003920                     
  7636                           ; BSR set to: 1
  7637                           ;MKAL_layer/I2C/hal_i2c.c: 35:             if(1 == i2c_obj->i2c_cfg.i2c_general_call){
  7638   003920  EE20 F006          	lfsr	2,6
  7639   003924  519F               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  7640   003926  26D9               	addwf	fsr2l,f,c
  7641   003928  51A0               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  7642   00392A  22DA               	addwfc	fsr2h,f,c
  7643   00392C  A6DF               	btfss	indf2,3,c
  7644   00392E  EF9B  F01C         	goto	u12661
  7645   003932  EF9D  F01C         	goto	u12660
  7646   003936                     u12661:
  7647   003936  EFA0  F01C         	goto	l11464
  7648   00393A                     u12660:
  7649   00393A                     
  7650                           ; BSR set to: 1
  7651                           ;MKAL_layer/I2C/hal_i2c.c: 36:                 (SSPCON2bits.GCEN = 1);
  7652   00393A  8EC5               	bsf	197,7,c	;volatile
  7653                           
  7654                           ;MKAL_layer/I2C/hal_i2c.c: 37:             }
  7655   00393C  EFAE  F01C         	goto	l1027
  7656   003940                     l11464:
  7657                           
  7658                           ; BSR set to: 1
  7659   003940  EE20 F006          	lfsr	2,6
  7660   003944  519F               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  7661   003946  26D9               	addwf	fsr2l,f,c
  7662   003948  51A0               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  7663   00394A  22DA               	addwfc	fsr2h,f,c
  7664   00394C  B6DF               	btfsc	indf2,3,c
  7665   00394E  EFAB  F01C         	goto	u12671
  7666   003952  EFAD  F01C         	goto	u12670
  7667   003956                     u12671:
  7668   003956  EFAE  F01C         	goto	l1027
  7669   00395A                     u12670:
  7670   00395A                     
  7671                           ; BSR set to: 1
  7672                           ;MKAL_layer/I2C/hal_i2c.c: 39:                 (SSPCON2bits.GCEN = 0);
  7673   00395A  9EC5               	bcf	197,7,c	;volatile
  7674   00395C                     l1027:
  7675                           
  7676                           ; BSR set to: 1
  7677                           ;MKAL_layer/I2C/hal_i2c.c: 43:             SSPCON1bits.WCOL = 0;
  7678   00395C  9EC6               	bcf	198,7,c	;volatile
  7679                           
  7680                           ;MKAL_layer/I2C/hal_i2c.c: 45:             SSPCON1bits.SSPOV = 0;
  7681   00395E  9CC6               	bcf	198,6,c	;volatile
  7682                           
  7683                           ;MKAL_layer/I2C/hal_i2c.c: 47:             SSPCON1bits.CKP = 1;
  7684   003960  88C6               	bsf	198,4,c	;volatile
  7685   003962                     
  7686                           ; BSR set to: 1
  7687                           ;MKAL_layer/I2C/hal_i2c.c: 49:             SSPADD = i2c_obj->i2c_cfg.i2c_slave_address;
  7688   003962  EE20 F005          	lfsr	2,5
  7689   003966  519F               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  7690   003968  26D9               	addwf	fsr2l,f,c
  7691   00396A  51A0               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  7692   00396C  22DA               	addwfc	fsr2h,f,c
  7693   00396E  50DF               	movf	indf2,w,c
  7694   003970  6EC8               	movwf	200,c	;volatile
  7695   003972                     
  7696                           ; BSR set to: 1
  7697                           ;MKAL_layer/I2C/hal_i2c.c: 51:             I2C_Slave_Mode_Configurations(i2c_obj);
  7698   003972  C19F  F010         	movff	MSSP_I2C_Init@i2c_obj,I2C_Slave_Mode_Configurations@i2c_obj
  7699   003976  C1A0  F011         	movff	MSSP_I2C_Init@i2c_obj+1,I2C_Slave_Mode_Configurations@i2c_obj+1
  7700   00397A  ECFD  F02F         	call	_I2C_Slave_Mode_Configurations	;wreg free
  7701   00397E                     l11472:
  7702                           
  7703                           ;MKAL_layer/I2C/hal_i2c.c: 55:         MSSP_I2C_Mode_GPIO_CFG();
  7704   00397E  EC7F  F030         	call	_MSSP_I2C_Mode_GPIO_CFG	;wreg free
  7705   003982                     
  7706                           ;MKAL_layer/I2C/hal_i2c.c: 57:         if(1 == i2c_obj->i2c_cfg.i2c_slew_rate){
  7707   003982  0101               	movlb	1	; () banked
  7708   003984  EE20 F006          	lfsr	2,6
  7709   003988  519F               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  7710   00398A  26D9               	addwf	fsr2l,f,c
  7711   00398C  51A0               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  7712   00398E  22DA               	addwfc	fsr2h,f,c
  7713   003990  A2DF               	btfss	indf2,1,c
  7714   003992  EFCD  F01C         	goto	u12681
  7715   003996  EFCF  F01C         	goto	u12680
  7716   00399A                     u12681:
  7717   00399A  EFD2  F01C         	goto	l11478
  7718   00399E                     u12680:
  7719   00399E                     
  7720                           ; BSR set to: 1
  7721                           ;MKAL_layer/I2C/hal_i2c.c: 58:             (SSPSTATbits.SMP = 1);
  7722   00399E  8EC7               	bsf	199,7,c	;volatile
  7723                           
  7724                           ;MKAL_layer/I2C/hal_i2c.c: 59:         }
  7725   0039A0  EFE0  F01C         	goto	l11482
  7726   0039A4                     l11478:
  7727                           
  7728                           ; BSR set to: 1
  7729   0039A4  EE20 F006          	lfsr	2,6
  7730   0039A8  519F               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  7731   0039AA  26D9               	addwf	fsr2l,f,c
  7732   0039AC  51A0               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  7733   0039AE  22DA               	addwfc	fsr2h,f,c
  7734   0039B0  B2DF               	btfsc	indf2,1,c
  7735   0039B2  EFDD  F01C         	goto	u12691
  7736   0039B6  EFDF  F01C         	goto	u12690
  7737   0039BA                     u12691:
  7738   0039BA  EFE0  F01C         	goto	l11482
  7739   0039BE                     u12690:
  7740   0039BE                     
  7741                           ; BSR set to: 1
  7742                           ;MKAL_layer/I2C/hal_i2c.c: 61:             (SSPSTATbits.SMP = 0);
  7743   0039BE  9EC7               	bcf	199,7,c	;volatile
  7744   0039C0                     l11482:
  7745                           
  7746                           ; BSR set to: 1
  7747                           ;MKAL_layer/I2C/hal_i2c.c: 65:         if(1 == i2c_obj->i2c_cfg.i2c_SMBus_control){
  7748   0039C0  EE20 F006          	lfsr	2,6
  7749   0039C4  519F               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  7750   0039C6  26D9               	addwf	fsr2l,f,c
  7751   0039C8  51A0               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  7752   0039CA  22DA               	addwfc	fsr2h,f,c
  7753   0039CC  A4DF               	btfss	indf2,2,c
  7754   0039CE  EFEB  F01C         	goto	u12701
  7755   0039D2  EFED  F01C         	goto	u12700
  7756   0039D6                     u12701:
  7757   0039D6  EFF0  F01C         	goto	l11486
  7758   0039DA                     u12700:
  7759   0039DA                     
  7760                           ; BSR set to: 1
  7761                           ;MKAL_layer/I2C/hal_i2c.c: 66:             (SSPSTATbits.CKE = 1);
  7762   0039DA  8CC7               	bsf	199,6,c	;volatile
  7763                           
  7764                           ;MKAL_layer/I2C/hal_i2c.c: 67:         }
  7765   0039DC  EFFE  F01C         	goto	l11490
  7766   0039E0                     l11486:
  7767                           
  7768                           ; BSR set to: 1
  7769   0039E0  EE20 F006          	lfsr	2,6
  7770   0039E4  519F               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  7771   0039E6  26D9               	addwf	fsr2l,f,c
  7772   0039E8  51A0               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  7773   0039EA  22DA               	addwfc	fsr2h,f,c
  7774   0039EC  B4DF               	btfsc	indf2,2,c
  7775   0039EE  EFFB  F01C         	goto	u12711
  7776   0039F2  EFFD  F01C         	goto	u12710
  7777   0039F6                     u12711:
  7778   0039F6  EFFE  F01C         	goto	l11490
  7779   0039FA                     u12710:
  7780   0039FA                     
  7781                           ; BSR set to: 1
  7782                           ;MKAL_layer/I2C/hal_i2c.c: 69:             (SSPSTATbits.CKE = 0);
  7783   0039FA  9CC7               	bcf	199,6,c	;volatile
  7784   0039FC                     l11490:
  7785                           
  7786                           ; BSR set to: 1
  7787                           ;MKAL_layer/I2C/hal_i2c.c: 74:       MSSP_I2C_Interrupt_Configurations(i2c_obj);
  7788   0039FC  C19F  F010         	movff	MSSP_I2C_Init@i2c_obj,MSSP_I2C_Interrupt_Configurations@i2c_obj
  7789   003A00  C1A0  F011         	movff	MSSP_I2C_Init@i2c_obj+1,MSSP_I2C_Interrupt_Configurations@i2c_obj+1
  7790   003A04  EC4E  F02C         	call	_MSSP_I2C_Interrupt_Configurations	;wreg free
  7791   003A08                     
  7792                           ;MKAL_layer/I2C/hal_i2c.c: 77:         (SSPCON1bits.SSPEN = 1);
  7793   003A08  8AC6               	bsf	198,5,c	;volatile
  7794   003A0A                     
  7795                           ;MKAL_layer/I2C/hal_i2c.c: 78:         ret = (Std_ReturnType)0x01;
  7796   003A0A  0E01               	movlw	1
  7797   003A0C  0101               	movlb	1	; () banked
  7798   003A0E  6FA1               	movwf	MSSP_I2C_Init@ret& (0+255),b
  7799   003A10                     l11496:
  7800                           
  7801                           ; BSR set to: 1
  7802                           ;MKAL_layer/I2C/hal_i2c.c: 80:     return ret;
  7803   003A10  51A1               	movf	MSSP_I2C_Init@ret& (0+255),w,b
  7804   003A12                     
  7805                           ; BSR set to: 1
  7806   003A12  0012               	return		;funcret
  7807   003A14                     __end_of_MSSP_I2C_Init:
  7808                           	callstack 0
  7809                           
  7810 ;; *************** function _MSSP_I2C_Mode_GPIO_CFG *****************
  7811 ;; Defined at:
  7812 ;;		line 287 in file "MKAL_layer/I2C/hal_i2c.c"
  7813 ;; Parameters:    Size  Location     Type
  7814 ;;		None
  7815 ;; Auto vars:     Size  Location     Type
  7816 ;;		None
  7817 ;; Return value:  Size  Location     Type
  7818 ;;                  1    wreg      void 
  7819 ;; Registers used:
  7820 ;;		None
  7821 ;; Tracked objects:
  7822 ;;		On entry : 0/0
  7823 ;;		On exit  : 0/0
  7824 ;;		Unchanged: 0/0
  7825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7830 ;;Total ram usage:        0 bytes
  7831 ;; Hardware stack levels used: 1
  7832 ;; Hardware stack levels required when called: 4
  7833 ;; This function calls:
  7834 ;;		Nothing
  7835 ;; This function is called by:
  7836 ;;		_MSSP_I2C_Init
  7837 ;; This function uses a non-reentrant model
  7838 ;;
  7839                           
  7840                           	psect	text31
  7841   0060FE                     __ptext31:
  7842                           	callstack 0
  7843   0060FE                     _MSSP_I2C_Mode_GPIO_CFG:
  7844                           	callstack 24
  7845   0060FE                     
  7846                           ;MKAL_layer/I2C/hal_i2c.c: 288:     TRISCbits.TRISC3 = 1;
  7847   0060FE  8694               	bsf	148,3,c	;volatile
  7848                           
  7849                           ;MKAL_layer/I2C/hal_i2c.c: 289:     TRISCbits.TRISC4 = 1;
  7850   006100  8894               	bsf	148,4,c	;volatile
  7851   006102  0012               	return		;funcret
  7852   006104                     __end_of_MSSP_I2C_Mode_GPIO_CFG:
  7853                           	callstack 0
  7854                           
  7855 ;; *************** function _MSSP_I2C_Interrupt_Configurations *****************
  7856 ;; Defined at:
  7857 ;;		line 302 in file "MKAL_layer/I2C/hal_i2c.c"
  7858 ;; Parameters:    Size  Location     Type
  7859 ;;  i2c_obj         2   15[COMRAM] PTR const struct .
  7860 ;;		 -> mssp_i2c(15), 
  7861 ;; Auto vars:     Size  Location     Type
  7862 ;;		None
  7863 ;; Return value:  Size  Location     Type
  7864 ;;                  1    wreg      void 
  7865 ;; Registers used:
  7866 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7867 ;; Tracked objects:
  7868 ;;		On entry : 0/0
  7869 ;;		On exit  : 0/0
  7870 ;;		Unchanged: 0/0
  7871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7872 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7875 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7876 ;;Total ram usage:        2 bytes
  7877 ;; Hardware stack levels used: 1
  7878 ;; Hardware stack levels required when called: 4
  7879 ;; This function calls:
  7880 ;;		Nothing
  7881 ;; This function is called by:
  7882 ;;		_MSSP_I2C_Init
  7883 ;; This function uses a non-reentrant model
  7884 ;;
  7885                           
  7886                           	psect	text32
  7887   00589C                     __ptext32:
  7888                           	callstack 0
  7889   00589C                     _MSSP_I2C_Interrupt_Configurations:
  7890                           	callstack 24
  7891   00589C                     
  7892                           ;MKAL_layer/I2C/hal_i2c.c: 304:         (PIE1bits.SSPIE = 1);
  7893   00589C  869D               	bsf	157,3,c	;volatile
  7894                           
  7895                           ;MKAL_layer/I2C/hal_i2c.c: 305:         (PIE2bits.BCLIE = 1);
  7896   00589E  86A0               	bsf	160,3,c	;volatile
  7897                           
  7898                           ;MKAL_layer/I2C/hal_i2c.c: 306:         (PIR1bits.SSPIF = 0);
  7899   0058A0  969E               	bcf	158,3,c	;volatile
  7900                           
  7901                           ;MKAL_layer/I2C/hal_i2c.c: 307:         (PIR2bits.BCLIF = 0);
  7902   0058A2  96A1               	bcf	161,3,c	;volatile
  7903   0058A4                     
  7904                           ;MKAL_layer/I2C/hal_i2c.c: 308:         I2C_Report_Write_Collision_InterruptHandler = i2
      +                          c_obj->I2C_Report_Write_Collision;
  7905   0058A4  EE20 F009          	lfsr	2,9
  7906   0058A8  5010               	movf	MSSP_I2C_Interrupt_Configurations@i2c_obj^0,w,c
  7907   0058AA  26D9               	addwf	fsr2l,f,c
  7908   0058AC  5011               	movf	(MSSP_I2C_Interrupt_Configurations@i2c_obj+1)^0,w,c
  7909   0058AE  22DA               	addwfc	fsr2h,f,c
  7910   0058B0  CFDE F0B4          	movff	postinc2,_I2C_Report_Write_Collision_InterruptHandler
  7911   0058B4  CFDD F0B5          	movff	postdec2,_I2C_Report_Write_Collision_InterruptHandler+1
  7912                           
  7913                           ;MKAL_layer/I2C/hal_i2c.c: 309:         I2C_DefaultInterruptHandle = i2c_obj->I2C_Defaul
      +                          tInterruptHandler;
  7914   0058B8  EE20 F00B          	lfsr	2,11
  7915   0058BC  5010               	movf	MSSP_I2C_Interrupt_Configurations@i2c_obj^0,w,c
  7916   0058BE  26D9               	addwf	fsr2l,f,c
  7917   0058C0  5011               	movf	(MSSP_I2C_Interrupt_Configurations@i2c_obj+1)^0,w,c
  7918   0058C2  22DA               	addwfc	fsr2h,f,c
  7919   0058C4  CFDE F0B2          	movff	postinc2,_I2C_DefaultInterruptHandle
  7920   0058C8  CFDD F0B3          	movff	postdec2,_I2C_DefaultInterruptHandle+1
  7921                           
  7922                           ;MKAL_layer/I2C/hal_i2c.c: 310:         I2C_Report_Receive_Overflow_InterruptHandle = i2
      +                          c_obj->I2C_Report_Receive_Overflow;
  7923   0058CC  EE20 F00D          	lfsr	2,13
  7924   0058D0  5010               	movf	MSSP_I2C_Interrupt_Configurations@i2c_obj^0,w,c
  7925   0058D2  26D9               	addwf	fsr2l,f,c
  7926   0058D4  5011               	movf	(MSSP_I2C_Interrupt_Configurations@i2c_obj+1)^0,w,c
  7927   0058D6  22DA               	addwfc	fsr2h,f,c
  7928   0058D8  CFDE F0B0          	movff	postinc2,_I2C_Report_Receive_Overflow_InterruptHandle
  7929   0058DC  CFDD F0B1          	movff	postdec2,_I2C_Report_Receive_Overflow_InterruptHandle+1
  7930   0058E0                     
  7931                           ;MKAL_layer/I2C/hal_i2c.c: 338:         (INTCONbits.GIE =1);
  7932   0058E0  8EF2               	bsf	242,7,c	;volatile
  7933   0058E2                     
  7934                           ;MKAL_layer/I2C/hal_i2c.c: 339:         (INTCONbits.PEIE =1);
  7935   0058E2  8CF2               	bsf	242,6,c	;volatile
  7936   0058E4  0012               	return		;funcret
  7937   0058E6                     __end_of_MSSP_I2C_Interrupt_Configurations:
  7938                           	callstack 0
  7939                           
  7940 ;; *************** function _I2C_Slave_Mode_Configurations *****************
  7941 ;; Defined at:
  7942 ;;		line 298 in file "MKAL_layer/I2C/hal_i2c.c"
  7943 ;; Parameters:    Size  Location     Type
  7944 ;;  i2c_obj         2   15[COMRAM] PTR const struct .
  7945 ;;		 -> mssp_i2c(15), 
  7946 ;; Auto vars:     Size  Location     Type
  7947 ;;		None
  7948 ;; Return value:  Size  Location     Type
  7949 ;;                  1    wreg      void 
  7950 ;; Registers used:
  7951 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7952 ;; Tracked objects:
  7953 ;;		On entry : 0/0
  7954 ;;		On exit  : 0/0
  7955 ;;		Unchanged: 0/0
  7956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7957 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7959 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7960 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7961 ;;Total ram usage:        3 bytes
  7962 ;; Hardware stack levels used: 1
  7963 ;; Hardware stack levels required when called: 4
  7964 ;; This function calls:
  7965 ;;		Nothing
  7966 ;; This function is called by:
  7967 ;;		_MSSP_I2C_Init
  7968 ;; This function uses a non-reentrant model
  7969 ;;
  7970                           
  7971                           	psect	text33
  7972   005FFA                     __ptext33:
  7973                           	callstack 0
  7974   005FFA                     _I2C_Slave_Mode_Configurations:
  7975                           	callstack 24
  7976   005FFA                     
  7977                           ;MKAL_layer/I2C/hal_i2c.c: 299:     SSPCON1bits.SSPM = i2c_obj->i2c_cfg.i2c_mode_cfg;
  7978   005FFA  EE20 F004          	lfsr	2,4
  7979   005FFE  5010               	movf	I2C_Slave_Mode_Configurations@i2c_obj^0,w,c
  7980   006000  26D9               	addwf	fsr2l,f,c
  7981   006002  5011               	movf	(I2C_Slave_Mode_Configurations@i2c_obj+1)^0,w,c
  7982   006004  22DA               	addwfc	fsr2h,f,c
  7983   006006  50DF               	movf	indf2,w,c
  7984   006008  6E12               	movwf	??_I2C_Slave_Mode_Configurations^0,c
  7985   00600A  50C6               	movf	198,w,c	;volatile
  7986   00600C  1812               	xorwf	??_I2C_Slave_Mode_Configurations^0,w,c
  7987   00600E  0BF0               	andlw	-16
  7988   006010  1812               	xorwf	??_I2C_Slave_Mode_Configurations^0,w,c
  7989   006012  6EC6               	movwf	198,c	;volatile
  7990   006014  0012               	return		;funcret
  7991   006016                     __end_of_I2C_Slave_Mode_Configurations:
  7992                           	callstack 0
  7993                           
  7994 ;; *************** function _I2C_Master_Mode_Clock_Configurations *****************
  7995 ;; Defined at:
  7996 ;;		line 292 in file "MKAL_layer/I2C/hal_i2c.c"
  7997 ;; Parameters:    Size  Location     Type
  7998 ;;  i2c_obj         2    2[BANK1 ] PTR const struct .
  7999 ;;		 -> mssp_i2c(15), 
  8000 ;; Auto vars:     Size  Location     Type
  8001 ;;		None
  8002 ;; Return value:  Size  Location     Type
  8003 ;;                  1    wreg      void 
  8004 ;; Registers used:
  8005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8006 ;; Tracked objects:
  8007 ;;		On entry : 0/0
  8008 ;;		On exit  : 0/0
  8009 ;;		Unchanged: 0/0
  8010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8011 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8013 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8014 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8015 ;;Total ram usage:        3 bytes
  8016 ;; Hardware stack levels used: 1
  8017 ;; Hardware stack levels required when called: 5
  8018 ;; This function calls:
  8019 ;;		___fladd
  8020 ;;		___fldiv
  8021 ;;		___fltol
  8022 ;;		___xxtofl
  8023 ;; This function is called by:
  8024 ;;		_MSSP_I2C_Init
  8025 ;; This function uses a non-reentrant model
  8026 ;;
  8027                           
  8028                           	psect	text34
  8029   004D76                     __ptext34:
  8030                           	callstack 0
  8031   004D76                     _I2C_Master_Mode_Clock_Configurations:
  8032                           	callstack 23
  8033   004D76                     
  8034                           ;MKAL_layer/I2C/hal_i2c.c: 294:     SSPCON1bits.SSPM = i2c_obj->i2c_cfg.i2c_mode_cfg;
  8035   004D76  0101               	movlb	1	; () banked
  8036   004D78  EE20 F004          	lfsr	2,4
  8037   004D7C  519D               	movf	I2C_Master_Mode_Clock_Configurations@i2c_obj& (0+255),w,b
  8038   004D7E  26D9               	addwf	fsr2l,f,c
  8039   004D80  519E               	movf	(I2C_Master_Mode_Clock_Configurations@i2c_obj+1)& (0+255),w,b
  8040   004D82  22DA               	addwfc	fsr2h,f,c
  8041   004D84  50DF               	movf	indf2,w,c
  8042   004D86  0100               	movlb	0	; () banked
  8043   004D88  6FFE               	movwf	??_I2C_Master_Mode_Clock_Configurations& (0+255),b
  8044   004D8A  50C6               	movf	198,w,c	;volatile
  8045   004D8C  19FE               	xorwf	??_I2C_Master_Mode_Clock_Configurations& (0+255),w,b
  8046   004D8E  0BF0               	andlw	-16
  8047   004D90  19FE               	xorwf	??_I2C_Master_Mode_Clock_Configurations& (0+255),w,b
  8048   004D92  6EC6               	movwf	198,c	;volatile
  8049   004D94                     
  8050                           ; BSR set to: 0
  8051                           ;MKAL_layer/I2C/hal_i2c.c: 295:     SSPADD = (uint8)(((8000000UL / 4.0) / i2c_obj->i2c_c
      +                          lock) - 1);
  8052   004D94  0E00               	movlw	0
  8053   004D96  6E3B               	movwf	___fladd@a^0,c
  8054   004D98  0E00               	movlw	0
  8055   004D9A  6E3C               	movwf	(___fladd@a+1)^0,c
  8056   004D9C  0E80               	movlw	128
  8057   004D9E  6E3D               	movwf	(___fladd@a+2)^0,c
  8058   004DA0  0EBF               	movlw	191
  8059   004DA2  6E3E               	movwf	(___fladd@a+3)^0,c
  8060   004DA4  C19D  FFD9         	movff	I2C_Master_Mode_Clock_Configurations@i2c_obj,fsr2l
  8061   004DA8  C19E  FFDA         	movff	I2C_Master_Mode_Clock_Configurations@i2c_obj+1,fsr2h
  8062   004DAC  CFDE F010          	movff	postinc2,___xxtofl@val
  8063   004DB0  CFDE F011          	movff	postinc2,___xxtofl@val+1
  8064   004DB4  CFDE F012          	movff	postinc2,___xxtofl@val+2
  8065   004DB8  CFDE F013          	movff	postinc2,___xxtofl@val+3
  8066   004DBC  0E00               	movlw	0
  8067   004DBE  EC1D  F01A         	call	___xxtofl
  8068   004DC2  C010  F022         	movff	?___xxtofl,___fldiv@a
  8069   004DC6  C011  F023         	movff	?___xxtofl+1,___fldiv@a+1
  8070   004DCA  C012  F024         	movff	?___xxtofl+2,___fldiv@a+2
  8071   004DCE  C013  F025         	movff	?___xxtofl+3,___fldiv@a+3
  8072   004DD2  0E00               	movlw	0
  8073   004DD4  6E1E               	movwf	___fldiv@b^0,c
  8074   004DD6  0E24               	movlw	36
  8075   004DD8  6E1F               	movwf	(___fldiv@b+1)^0,c
  8076   004DDA  0EF4               	movlw	244
  8077   004DDC  6E20               	movwf	(___fldiv@b+2)^0,c
  8078   004DDE  0E49               	movlw	73
  8079   004DE0  6E21               	movwf	(___fldiv@b+3)^0,c
  8080   004DE2  EC69  F017         	call	___fldiv	;wreg free
  8081   004DE6  C01E  F037         	movff	?___fldiv,___fladd@b
  8082   004DEA  C01F  F038         	movff	?___fldiv+1,___fladd@b+1
  8083   004DEE  C020  F039         	movff	?___fldiv+2,___fladd@b+2
  8084   004DF2  C021  F03A         	movff	?___fldiv+3,___fladd@b+3
  8085   004DF6  ECE5  F010         	call	___fladd	;wreg free
  8086   004DFA  C037  F0F6         	movff	?___fladd,___fltol@f1
  8087   004DFE  C038  F0F7         	movff	?___fladd+1,___fltol@f1+1
  8088   004E02  C039  F0F8         	movff	?___fladd+2,___fltol@f1+2
  8089   004E06  C03A  F0F9         	movff	?___fladd+3,___fltol@f1+3
  8090   004E0A  ECE4  F01E         	call	___fltol	;wreg free
  8091   004E0E  0100               	movlb	0	; () banked
  8092   004E10  51F6               	movf	?___fltol& (0+255),w,b
  8093   004E12  6EC8               	movwf	200,c	;volatile
  8094   004E14                     
  8095                           ; BSR set to: 0
  8096   004E14  0012               	return		;funcret
  8097   004E16                     __end_of_I2C_Master_Mode_Clock_Configurations:
  8098                           	callstack 0
  8099                           
  8100 ;; *************** function _Interrupt_Intx_Inti *****************
  8101 ;; Defined at:
  8102 ;;		line 43 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
  8103 ;; Parameters:    Size  Location     Type
  8104 ;;  INTERRUPT_IN    2   31[COMRAM] PTR const struct .
  8105 ;;		 -> INT_1(6), INT_0(6), 
  8106 ;; Auto vars:     Size  Location     Type
  8107 ;;  ret             1   33[COMRAM] unsigned char 
  8108 ;; Return value:  Size  Location     Type
  8109 ;;                  1    wreg      unsigned char 
  8110 ;; Registers used:
  8111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8112 ;; Tracked objects:
  8113 ;;		On entry : 0/0
  8114 ;;		On exit  : 0/0
  8115 ;;		Unchanged: 0/0
  8116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8117 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8118 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8120 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8121 ;;Total ram usage:        3 bytes
  8122 ;; Hardware stack levels used: 1
  8123 ;; Hardware stack levels required when called: 7
  8124 ;; This function calls:
  8125 ;;		_interrupt_intx_clear
  8126 ;;		_interrupt_intx_disable
  8127 ;;		_interrupt_intx_edge_inti
  8128 ;;		_interrupt_intx_enable
  8129 ;;		_interrupt_intx_pin_inti
  8130 ;;		_interrupt_intx_sethandler
  8131 ;; This function is called by:
  8132 ;;		_intitialized_functions
  8133 ;; This function uses a non-reentrant model
  8134 ;;
  8135                           
  8136                           	psect	text35
  8137   0054E4                     __ptext35:
  8138                           	callstack 0
  8139   0054E4                     _Interrupt_Intx_Inti:
  8140                           	callstack 22
  8141   0054E4                     
  8142                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 45:     if(((void*)0) == INTERRUPT_INTX
      +                          ){
  8143   0054E4  5020               	movf	Interrupt_Intx_Inti@INTERRUPT_INTX^0,w,c
  8144   0054E6  1021               	iorwf	(Interrupt_Intx_Inti@INTERRUPT_INTX+1)^0,w,c
  8145   0054E8  A4D8               	btfss	status,2,c
  8146   0054EA  EF79  F02A         	goto	u12741
  8147   0054EE  EF7B  F02A         	goto	u12740
  8148   0054F2                     u12741:
  8149   0054F2  EF7F  F02A         	goto	l11550
  8150   0054F6                     u12740:
  8151   0054F6                     
  8152                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 46:         ret =(Std_ReturnType)0x00;
  8153   0054F6  0E00               	movlw	0
  8154   0054F8  6E22               	movwf	Interrupt_Intx_Inti@ret^0,c
  8155                           
  8156                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 47:     }
  8157   0054FA  EFA7  F02A         	goto	l11558
  8158   0054FE                     l11550:
  8159                           
  8160                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 49:     {;MKAL_layer/Interrupt/mcal_ext
      +                          ernal_interrupt.c: 51:         ret = interrupt_intx_disable(INTERRUPT_INTX);
  8161   0054FE  C020  F010         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX,interrupt_intx_disable@INTERRUPT_INTX
  8162   005502  C021  F011         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX+1,interrupt_intx_disable@INTERRUPT_INTX+1
  8163   005506  ECC8  F029         	call	_interrupt_intx_disable	;wreg free
  8164   00550A  6E22               	movwf	Interrupt_Intx_Inti@ret^0,c
  8165                           
  8166                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 53:         ret = interrupt_intx_clear(
      +                          INTERRUPT_INTX);
  8167   00550C  C020  F010         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX,interrupt_intx_clear@INTERRUPT_INTX
  8168   005510  C021  F011         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX+1,interrupt_intx_clear@INTERRUPT_INTX+1
  8169   005514  EC01  F02A         	call	_interrupt_intx_clear	;wreg free
  8170   005518  6E22               	movwf	Interrupt_Intx_Inti@ret^0,c
  8171                           
  8172                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 55:         ret = interrupt_intx_edge_i
      +                          nti(INTERRUPT_INTX);
  8173   00551A  C020  F010         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX,interrupt_intx_edge_inti@INTERRUPT_INTX
  8174   00551E  C021  F011         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX+1,interrupt_intx_edge_inti@INTERRUPT_INTX+1
  8175   005522  EC4E  F01E         	call	_interrupt_intx_edge_inti	;wreg free
  8176   005526  6E22               	movwf	Interrupt_Intx_Inti@ret^0,c
  8177   005528  C020  F01D         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX,interrupt_intx_pin_inti@INTERRUPT_INTX
  8178   00552C  C021  F01E         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX+1,interrupt_intx_pin_inti@INTERRUPT_INTX+1
  8179   005530  ECDA  F02E         	call	_interrupt_intx_pin_inti	;wreg free
  8180   005534  C020  F012         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX,interrupt_intx_sethandler@INTERRUPT_INTX
  8181   005538  C021  F013         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX+1,interrupt_intx_sethandler@INTERRUPT_INTX+1
  8182   00553C  ECBE  F025         	call	_interrupt_intx_sethandler	;wreg free
  8183   005540                     
  8184                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 65:         ret = interrupt_intx_enable
      +                          (INTERRUPT_INTX);
  8185   005540  C020  F010         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX,interrupt_intx_enable@INTERRUPT_INTX
  8186   005544  C021  F011         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX+1,interrupt_intx_enable@INTERRUPT_INTX+1
  8187   005548  EC4C  F029         	call	_interrupt_intx_enable	;wreg free
  8188   00554C  6E22               	movwf	Interrupt_Intx_Inti@ret^0,c
  8189   00554E                     l11558:
  8190                           
  8191                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 68:     return ret ;
  8192   00554E  5022               	movf	Interrupt_Intx_Inti@ret^0,w,c
  8193   005550  0012               	return		;funcret
  8194   005552                     __end_of_Interrupt_Intx_Inti:
  8195                           	callstack 0
  8196                           
  8197 ;; *************** function _interrupt_intx_sethandler *****************
  8198 ;; Defined at:
  8199 ;;		line 460 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
  8200 ;; Parameters:    Size  Location     Type
  8201 ;;  INTERRUPT_IN    2   17[COMRAM] PTR const struct .
  8202 ;;		 -> INT_1(6), INT_0(6), 
  8203 ;; Auto vars:     Size  Location     Type
  8204 ;;  ret             1   21[COMRAM] unsigned char 
  8205 ;; Return value:  Size  Location     Type
  8206 ;;                  1    wreg      unsigned char 
  8207 ;; Registers used:
  8208 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8209 ;; Tracked objects:
  8210 ;;		On entry : 0/0
  8211 ;;		On exit  : 0/0
  8212 ;;		Unchanged: 0/0
  8213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8214 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8215 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8216 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8217 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8218 ;;Total ram usage:        5 bytes
  8219 ;; Hardware stack levels used: 1
  8220 ;; Hardware stack levels required when called: 5
  8221 ;; This function calls:
  8222 ;;		_INT0_setinterrupthandler
  8223 ;;		_INT1_setinterrupthandler
  8224 ;;		_INT2_setinterrupthandler
  8225 ;; This function is called by:
  8226 ;;		_Interrupt_Intx_Inti
  8227 ;; This function uses a non-reentrant model
  8228 ;;
  8229                           
  8230                           	psect	text36
  8231   004B7C                     __ptext36:
  8232                           	callstack 0
  8233   004B7C                     _interrupt_intx_sethandler:
  8234                           	callstack 23
  8235   004B7C                     
  8236                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 461:     Std_ReturnType ret =(Std_Retur
      +                          nType)0x00;
  8237   004B7C  0E00               	movlw	0
  8238   004B7E  6E16               	movwf	interrupt_intx_sethandler@ret^0,c
  8239   004B80                     
  8240                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 462:     if(((void*)0) == INTERRUPT_INT
      +                          X){
  8241   004B80  5012               	movf	interrupt_intx_sethandler@INTERRUPT_INTX^0,w,c
  8242   004B82  1013               	iorwf	(interrupt_intx_sethandler@INTERRUPT_INTX+1)^0,w,c
  8243   004B84  A4D8               	btfss	status,2,c
  8244   004B86  EFC7  F025         	goto	u12301
  8245   004B8A  EFC9  F025         	goto	u12300
  8246   004B8E                     u12301:
  8247   004B8E  EFF3  F025         	goto	l11184
  8248   004B92                     u12300:
  8249   004B92                     l11174:
  8250                           
  8251                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 463:         ret =(Std_ReturnType)0x00;
  8252   004B92  0E00               	movlw	0
  8253   004B94  6E16               	movwf	interrupt_intx_sethandler@ret^0,c
  8254                           
  8255                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 464:     }
  8256   004B96  EF12  F026         	goto	l11186
  8257   004B9A                     l11176:
  8258                           
  8259                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 469:                 INT0_setinterrupth
      +                          andler(INTERRUPT_INTX->EXT_INTERRUPTHANDLE);
  8260   004B9A  C012  FFD9         	movff	interrupt_intx_sethandler@INTERRUPT_INTX,fsr2l
  8261   004B9E  C013  FFDA         	movff	interrupt_intx_sethandler@INTERRUPT_INTX+1,fsr2h
  8262   004BA2  CFDE F010          	movff	postinc2,INT0_setinterrupthandler@interrupthandler
  8263   004BA6  CFDD F011          	movff	postdec2,INT0_setinterrupthandler@interrupthandler+1
  8264   004BAA  ECDE  F02F         	call	_INT0_setinterrupthandler	;wreg free
  8265                           
  8266                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 470:                 break;
  8267   004BAE  EF12  F026         	goto	l11186
  8268   004BB2                     l11178:
  8269                           
  8270                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 472:                 ret =INT1_setinter
      +                          rupthandler(INTERRUPT_INTX->EXT_INTERRUPTHANDLE);
  8271   004BB2  C012  FFD9         	movff	interrupt_intx_sethandler@INTERRUPT_INTX,fsr2l
  8272   004BB6  C013  FFDA         	movff	interrupt_intx_sethandler@INTERRUPT_INTX+1,fsr2h
  8273   004BBA  CFDE F010          	movff	postinc2,INT1_setinterrupthandler@interrupthandler
  8274   004BBE  CFDD F011          	movff	postdec2,INT1_setinterrupthandler@interrupthandler+1
  8275   004BC2  ECCE  F02F         	call	_INT1_setinterrupthandler	;wreg free
  8276   004BC6  6E16               	movwf	interrupt_intx_sethandler@ret^0,c
  8277                           
  8278                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 473:                 break;
  8279   004BC8  EF12  F026         	goto	l11186
  8280   004BCC                     l11180:
  8281                           
  8282                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 475:                 ret =INT2_setinter
      +                          rupthandler(INTERRUPT_INTX->EXT_INTERRUPTHANDLE);;
  8283   004BCC  C012  FFD9         	movff	interrupt_intx_sethandler@INTERRUPT_INTX,fsr2l
  8284   004BD0  C013  FFDA         	movff	interrupt_intx_sethandler@INTERRUPT_INTX+1,fsr2h
  8285   004BD4  CFDE F010          	movff	postinc2,INT2_setinterrupthandler@interrupthandler
  8286   004BD8  CFDD F011          	movff	postdec2,INT2_setinterrupthandler@interrupthandler+1
  8287   004BDC  ECBE  F02F         	call	_INT2_setinterrupthandler	;wreg free
  8288   004BE0  6E16               	movwf	interrupt_intx_sethandler@ret^0,c
  8289                           
  8290                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 476:                 break;
  8291   004BE2  EF12  F026         	goto	l11186
  8292   004BE6                     l11184:
  8293   004BE6  EE20 F004          	lfsr	2,4
  8294   004BEA  5012               	movf	interrupt_intx_sethandler@INTERRUPT_INTX^0,w,c
  8295   004BEC  26D9               	addwf	fsr2l,f,c
  8296   004BEE  5013               	movf	(interrupt_intx_sethandler@INTERRUPT_INTX+1)^0,w,c
  8297   004BF0  22DA               	addwfc	fsr2h,f,c
  8298   004BF2  50DF               	movf	indf2,w,c
  8299   004BF4  6E14               	movwf	??_interrupt_intx_sethandler^0,c
  8300   004BF6  6A15               	clrf	(??_interrupt_intx_sethandler+1)^0,c
  8301                           
  8302                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8303                           ; Switch size 1, requested type "simple"
  8304                           ; Number of cases is 1, Range of values is 0 to 0
  8305                           ; switch strategies available:
  8306                           ; Name         Instructions Cycles
  8307                           ; simple_byte            4     3 (average)
  8308                           ;	Chosen strategy is simple_byte
  8309   004BF8  5015               	movf	(??_interrupt_intx_sethandler+1)^0,w,c
  8310   004BFA  0A00               	xorlw	0	; case 0
  8311   004BFC  B4D8               	btfsc	status,2,c
  8312   004BFE  EF03  F026         	goto	l13634
  8313   004C02  EFC9  F025         	goto	l11174
  8314   004C06                     l13634:
  8315                           
  8316                           ; Switch size 1, requested type "simple"
  8317                           ; Number of cases is 3, Range of values is 0 to 2
  8318                           ; switch strategies available:
  8319                           ; Name         Instructions Cycles
  8320                           ; simple_byte           10     6 (average)
  8321                           ;	Chosen strategy is simple_byte
  8322   004C06  5014               	movf	??_interrupt_intx_sethandler^0,w,c
  8323   004C08  0A00               	xorlw	0	; case 0
  8324   004C0A  B4D8               	btfsc	status,2,c
  8325   004C0C  EFCD  F025         	goto	l11176
  8326   004C10  0A01               	xorlw	1	; case 1
  8327   004C12  B4D8               	btfsc	status,2,c
  8328   004C14  EFD9  F025         	goto	l11178
  8329   004C18  0A03               	xorlw	3	; case 2
  8330   004C1A  B4D8               	btfsc	status,2,c
  8331   004C1C  EFE6  F025         	goto	l11180
  8332   004C20  EFC9  F025         	goto	l11174
  8333   004C24                     l11186:
  8334                           
  8335                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 481:     return ret ;
  8336   004C24  5016               	movf	interrupt_intx_sethandler@ret^0,w,c
  8337   004C26  0012               	return		;funcret
  8338   004C28                     __end_of_interrupt_intx_sethandler:
  8339                           	callstack 0
  8340                           
  8341 ;; *************** function _INT2_setinterrupthandler *****************
  8342 ;; Defined at:
  8343 ;;		line 446 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
  8344 ;; Parameters:    Size  Location     Type
  8345 ;;  interrupthan    2   15[COMRAM] PTR FTN()void 
  8346 ;;		 -> int1_interrupt(1), into_interrupt(1), 
  8347 ;; Auto vars:     Size  Location     Type
  8348 ;;  ret             1    0        unsigned char 
  8349 ;; Return value:  Size  Location     Type
  8350 ;;                  1    wreg      unsigned char 
  8351 ;; Registers used:
  8352 ;;		wreg, status,2, status,0
  8353 ;; Tracked objects:
  8354 ;;		On entry : 0/0
  8355 ;;		On exit  : 0/0
  8356 ;;		Unchanged: 0/0
  8357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8358 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8361 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8362 ;;Total ram usage:        2 bytes
  8363 ;; Hardware stack levels used: 1
  8364 ;; Hardware stack levels required when called: 4
  8365 ;; This function calls:
  8366 ;;		Nothing
  8367 ;; This function is called by:
  8368 ;;		_interrupt_intx_sethandler
  8369 ;; This function uses a non-reentrant model
  8370 ;;
  8371                           
  8372                           	psect	text37
  8373   005F7C                     __ptext37:
  8374                           	callstack 0
  8375   005F7C                     _INT2_setinterrupthandler:
  8376                           	callstack 23
  8377   005F7C                     
  8378                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 448:     if(((void*)0) == interrupthand
      +                          ler){
  8379   005F7C  5010               	movf	INT2_setinterrupthandler@interrupthandler^0,w,c
  8380   005F7E  1011               	iorwf	(INT2_setinterrupthandler@interrupthandler+1)^0,w,c
  8381   005F80  A4D8               	btfss	status,2,c
  8382   005F82  EFC5  F02F         	goto	u11121
  8383   005F86  EFC7  F02F         	goto	u11120
  8384   005F8A                     u11121:
  8385   005F8A  EFC9  F02F         	goto	l10454
  8386   005F8E                     u11120:
  8387   005F8E                     
  8388                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 450:     }
  8389   005F8E  EFCD  F02F         	goto	l1294
  8390   005F92                     l10454:
  8391                           
  8392                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 452:         Int2_interrupthandler = in
      +                          terrupthandler;
  8393   005F92  C010  F0AA         	movff	INT2_setinterrupthandler@interrupthandler,_Int2_interrupthandler
  8394   005F96  C011  F0AB         	movff	INT2_setinterrupthandler@interrupthandler+1,_Int2_interrupthandler+1
  8395   005F9A                     l1294:
  8396   005F9A  0012               	return		;funcret
  8397   005F9C                     __end_of_INT2_setinterrupthandler:
  8398                           	callstack 0
  8399                           
  8400 ;; *************** function _INT1_setinterrupthandler *****************
  8401 ;; Defined at:
  8402 ;;		line 432 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
  8403 ;; Parameters:    Size  Location     Type
  8404 ;;  interrupthan    2   15[COMRAM] PTR FTN()void 
  8405 ;;		 -> int1_interrupt(1), into_interrupt(1), 
  8406 ;; Auto vars:     Size  Location     Type
  8407 ;;  ret             1    0        unsigned char 
  8408 ;; Return value:  Size  Location     Type
  8409 ;;                  1    wreg      unsigned char 
  8410 ;; Registers used:
  8411 ;;		wreg, status,2, status,0
  8412 ;; Tracked objects:
  8413 ;;		On entry : 0/0
  8414 ;;		On exit  : 0/0
  8415 ;;		Unchanged: 0/0
  8416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8417 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8420 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8421 ;;Total ram usage:        2 bytes
  8422 ;; Hardware stack levels used: 1
  8423 ;; Hardware stack levels required when called: 4
  8424 ;; This function calls:
  8425 ;;		Nothing
  8426 ;; This function is called by:
  8427 ;;		_interrupt_intx_sethandler
  8428 ;; This function uses a non-reentrant model
  8429 ;;
  8430                           
  8431                           	psect	text38
  8432   005F9C                     __ptext38:
  8433                           	callstack 0
  8434   005F9C                     _INT1_setinterrupthandler:
  8435                           	callstack 23
  8436   005F9C                     
  8437                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 434:     if(((void*)0) == interrupthand
      +                          ler){
  8438   005F9C  5010               	movf	INT1_setinterrupthandler@interrupthandler^0,w,c
  8439   005F9E  1011               	iorwf	(INT1_setinterrupthandler@interrupthandler+1)^0,w,c
  8440   005FA0  A4D8               	btfss	status,2,c
  8441   005FA2  EFD5  F02F         	goto	u11111
  8442   005FA6  EFD7  F02F         	goto	u11110
  8443   005FAA                     u11111:
  8444   005FAA  EFD9  F02F         	goto	l10446
  8445   005FAE                     u11110:
  8446   005FAE                     
  8447                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 436:     }
  8448   005FAE  EFDD  F02F         	goto	l1289
  8449   005FB2                     l10446:
  8450                           
  8451                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 438:         Int1_interrupthandler = in
      +                          terrupthandler;
  8452   005FB2  C010  F0AC         	movff	INT1_setinterrupthandler@interrupthandler,_Int1_interrupthandler
  8453   005FB6  C011  F0AD         	movff	INT1_setinterrupthandler@interrupthandler+1,_Int1_interrupthandler+1
  8454   005FBA                     l1289:
  8455   005FBA  0012               	return		;funcret
  8456   005FBC                     __end_of_INT1_setinterrupthandler:
  8457                           	callstack 0
  8458                           
  8459 ;; *************** function _INT0_setinterrupthandler *****************
  8460 ;; Defined at:
  8461 ;;		line 418 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
  8462 ;; Parameters:    Size  Location     Type
  8463 ;;  interrupthan    2   15[COMRAM] PTR FTN()void 
  8464 ;;		 -> int1_interrupt(1), into_interrupt(1), 
  8465 ;; Auto vars:     Size  Location     Type
  8466 ;;  ret             1    0        unsigned char 
  8467 ;; Return value:  Size  Location     Type
  8468 ;;                  1    wreg      unsigned char 
  8469 ;; Registers used:
  8470 ;;		wreg, status,2, status,0
  8471 ;; Tracked objects:
  8472 ;;		On entry : 0/0
  8473 ;;		On exit  : 0/0
  8474 ;;		Unchanged: 0/0
  8475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8476 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8479 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8480 ;;Total ram usage:        2 bytes
  8481 ;; Hardware stack levels used: 1
  8482 ;; Hardware stack levels required when called: 4
  8483 ;; This function calls:
  8484 ;;		Nothing
  8485 ;; This function is called by:
  8486 ;;		_interrupt_intx_sethandler
  8487 ;; This function uses a non-reentrant model
  8488 ;;
  8489                           
  8490                           	psect	text39
  8491   005FBC                     __ptext39:
  8492                           	callstack 0
  8493   005FBC                     _INT0_setinterrupthandler:
  8494                           	callstack 23
  8495   005FBC                     
  8496                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 420:     if(((void*)0) == interrupthand
      +                          ler){
  8497   005FBC  5010               	movf	INT0_setinterrupthandler@interrupthandler^0,w,c
  8498   005FBE  1011               	iorwf	(INT0_setinterrupthandler@interrupthandler+1)^0,w,c
  8499   005FC0  A4D8               	btfss	status,2,c
  8500   005FC2  EFE5  F02F         	goto	u11101
  8501   005FC6  EFE7  F02F         	goto	u11100
  8502   005FCA                     u11101:
  8503   005FCA  EFE9  F02F         	goto	l10438
  8504   005FCE                     u11100:
  8505   005FCE                     
  8506                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 422:     }
  8507   005FCE  EFED  F02F         	goto	l1284
  8508   005FD2                     l10438:
  8509                           
  8510                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 424:         Int0_interrupthandler = in
      +                          terrupthandler;
  8511   005FD2  C010  F0AE         	movff	INT0_setinterrupthandler@interrupthandler,_Int0_interrupthandler
  8512   005FD6  C011  F0AF         	movff	INT0_setinterrupthandler@interrupthandler+1,_Int0_interrupthandler+1
  8513   005FDA                     l1284:
  8514   005FDA  0012               	return		;funcret
  8515   005FDC                     __end_of_INT0_setinterrupthandler:
  8516                           	callstack 0
  8517                           
  8518 ;; *************** function _interrupt_intx_pin_inti *****************
  8519 ;; Defined at:
  8520 ;;		line 367 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
  8521 ;; Parameters:    Size  Location     Type
  8522 ;;  INTERRUPT_IN    2   28[COMRAM] PTR const struct .
  8523 ;;		 -> INT_1(6), INT_0(6), 
  8524 ;; Auto vars:     Size  Location     Type
  8525 ;;  ret             1   30[COMRAM] unsigned char 
  8526 ;; Return value:  Size  Location     Type
  8527 ;;                  1    wreg      unsigned char 
  8528 ;; Registers used:
  8529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8530 ;; Tracked objects:
  8531 ;;		On entry : 0/0
  8532 ;;		On exit  : 0/0
  8533 ;;		Unchanged: 0/0
  8534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8535 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8536 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8538 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8539 ;;Total ram usage:        3 bytes
  8540 ;; Hardware stack levels used: 1
  8541 ;; Hardware stack levels required when called: 6
  8542 ;; This function calls:
  8543 ;;		_GPIO_pIN_INTIALIZE
  8544 ;; This function is called by:
  8545 ;;		_Interrupt_Intx_Inti
  8546 ;; This function uses a non-reentrant model
  8547 ;;
  8548                           
  8549                           	psect	text40
  8550   005DB4                     __ptext40:
  8551                           	callstack 0
  8552   005DB4                     _interrupt_intx_pin_inti:
  8553                           	callstack 22
  8554   005DB4                     
  8555                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 369:     if(((void*)0) == INTERRUPT_INT
      +                          X){
  8556   005DB4  501D               	movf	interrupt_intx_pin_inti@INTERRUPT_INTX^0,w,c
  8557   005DB6  101E               	iorwf	(interrupt_intx_pin_inti@INTERRUPT_INTX+1)^0,w,c
  8558   005DB8  A4D8               	btfss	status,2,c
  8559   005DBA  EFE1  F02E         	goto	u12291
  8560   005DBE  EFE3  F02E         	goto	u12290
  8561   005DC2                     u12291:
  8562   005DC2  EFE7  F02E         	goto	l11164
  8563   005DC6                     u12290:
  8564   005DC6                     
  8565                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 370:         ret =(Std_ReturnType)0x00;
  8566   005DC6  0E00               	movlw	0
  8567   005DC8  6E1F               	movwf	interrupt_intx_pin_inti@ret^0,c
  8568                           
  8569                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 371:     }
  8570   005DCA  EFF0  F02E         	goto	l11166
  8571   005DCE                     l11164:
  8572                           
  8573                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 373:     {;MKAL_layer/Interrupt/mcal_ex
      +                          ternal_interrupt.c: 374:         ret =GPIO_pIN_INTIALIZE(&(INTERRUPT_INTX->pin_config));
  8574   005DCE  0E02               	movlw	2
  8575   005DD0  241D               	addwf	interrupt_intx_pin_inti@INTERRUPT_INTX^0,w,c
  8576   005DD2  6E19               	movwf	GPIO_pIN_INTIALIZE@config_pin^0,c
  8577   005DD4  0E00               	movlw	0
  8578   005DD6  201E               	addwfc	(interrupt_intx_pin_inti@INTERRUPT_INTX+1)^0,w,c
  8579   005DD8  6E1A               	movwf	(GPIO_pIN_INTIALIZE@config_pin+1)^0,c
  8580   005DDA  ECA9  F02A         	call	_GPIO_pIN_INTIALIZE	;wreg free
  8581   005DDE  6E1F               	movwf	interrupt_intx_pin_inti@ret^0,c
  8582   005DE0                     l11166:
  8583                           
  8584                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 377:     return ret ;
  8585   005DE0  501F               	movf	interrupt_intx_pin_inti@ret^0,w,c
  8586   005DE2  0012               	return		;funcret
  8587   005DE4                     __end_of_interrupt_intx_pin_inti:
  8588                           	callstack 0
  8589                           
  8590 ;; *************** function _GPIO_pIN_INTIALIZE *****************
  8591 ;; Defined at:
  8592 ;;		line 72 in file "MKAL_layer/gpio/pro_gpio.c"
  8593 ;; Parameters:    Size  Location     Type
  8594 ;;  config_pin      2   24[COMRAM] PTR const struct .
  8595 ;;		 -> relay_intialize@pin_config(1), led_intialize@pin_config(1), leds_1(1), LED_ROOM_1(1), 
  8596 ;;		 -> ccp2_(10), ccp1_(10), motor_2$motor_pin_config(2), motor_2(2), 
  8597 ;;		 -> motor_1$motor_pin_config(2), motor_1(2), INT_1(6), INT_0(6), 
  8598 ;;		 -> lcd_4bit$lcd_data(4), lcd_4bit(6), 
  8599 ;; Auto vars:     Size  Location     Type
  8600 ;;  ret             1   27[COMRAM] unsigned char 
  8601 ;; Return value:  Size  Location     Type
  8602 ;;                  1    wreg      unsigned char 
  8603 ;; Registers used:
  8604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8605 ;; Tracked objects:
  8606 ;;		On entry : 0/0
  8607 ;;		On exit  : 0/0
  8608 ;;		Unchanged: 0/0
  8609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8610 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8611 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8612 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8613 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8614 ;;Total ram usage:        4 bytes
  8615 ;; Hardware stack levels used: 1
  8616 ;; Hardware stack levels required when called: 5
  8617 ;; This function calls:
  8618 ;;		_GPIO_pIN_DIRECTION_INTIALIZE
  8619 ;;		_GPIO_pIN_WRITE_LOGIC
  8620 ;; This function is called by:
  8621 ;;		_intitialized_functions
  8622 ;;		_lcd_4bit_intialize
  8623 ;;		_motor_intialize
  8624 ;;		_ccp1_init
  8625 ;;		_ccp2_init
  8626 ;;		_interrupt_intx_pin_inti
  8627 ;;		_segment_intialized
  8628 ;;		_lcd_8bit_intialize
  8629 ;;		_led_intialize
  8630 ;;		_keypad_intialize
  8631 ;;		_relay_intialize
  8632 ;; This function uses a non-reentrant model
  8633 ;;
  8634                           
  8635                           	psect	text41
  8636   005552                     __ptext41:
  8637                           	callstack 0
  8638   005552                     _GPIO_pIN_INTIALIZE:
  8639                           	callstack 23
  8640   005552                     
  8641                           ;MKAL_layer/gpio/pro_gpio.c: 75:     if ((((void*)0) == config_pin) || (config_pin->pin 
      +                          > 8 -1)){
  8642   005552  5019               	movf	GPIO_pIN_INTIALIZE@config_pin^0,w,c
  8643   005554  101A               	iorwf	(GPIO_pIN_INTIALIZE@config_pin+1)^0,w,c
  8644   005556  B4D8               	btfsc	status,2,c
  8645   005558  EFB0  F02A         	goto	u11081
  8646   00555C  EFB2  F02A         	goto	u11080
  8647   005560                     u11081:
  8648   005560  EFC3  F02A         	goto	l10400
  8649   005564                     u11080:
  8650   005564  C019  FFD9         	movff	GPIO_pIN_INTIALIZE@config_pin,fsr2l
  8651   005568  C01A  FFDA         	movff	GPIO_pIN_INTIALIZE@config_pin+1,fsr2h
  8652   00556C  30DF               	rrcf	223,w,c
  8653   00556E  32E8               	rrcf	wreg,f,c
  8654   005570  32E8               	rrcf	wreg,f,c
  8655   005572  0B07               	andlw	7
  8656   005574  6E1B               	movwf	??_GPIO_pIN_INTIALIZE^0,c
  8657   005576  0E07               	movlw	7
  8658   005578  641B               	cpfsgt	??_GPIO_pIN_INTIALIZE^0,c
  8659   00557A  EFC1  F02A         	goto	u11091
  8660   00557E  EFC3  F02A         	goto	u11090
  8661   005582                     u11091:
  8662   005582  EFC7  F02A         	goto	l10402
  8663   005586                     u11090:
  8664   005586                     l10400:
  8665                           
  8666                           ;MKAL_layer/gpio/pro_gpio.c: 76:         ret =(Std_ReturnType)0x00;
  8667   005586  0E00               	movlw	0
  8668   005588  6E1C               	movwf	GPIO_pIN_INTIALIZE@ret^0,c
  8669                           
  8670                           ;MKAL_layer/gpio/pro_gpio.c: 77:     }
  8671   00558A  EFDD  F02A         	goto	l10404
  8672   00558E                     l10402:
  8673                           
  8674                           ;MKAL_layer/gpio/pro_gpio.c: 79:         ret =GPIO_pIN_DIRECTION_INTIALIZE(config_pin);
  8675   00558E  C019  F010         	movff	GPIO_pIN_INTIALIZE@config_pin,GPIO_pIN_DIRECTION_INTIALIZE@config_pin
  8676   005592  C01A  F011         	movff	GPIO_pIN_INTIALIZE@config_pin+1,GPIO_pIN_DIRECTION_INTIALIZE@config_pin+1
  8677   005596  EC0A  F01D         	call	_GPIO_pIN_DIRECTION_INTIALIZE	;wreg free
  8678   00559A  6E1C               	movwf	GPIO_pIN_INTIALIZE@ret^0,c
  8679                           
  8680                           ;MKAL_layer/gpio/pro_gpio.c: 80:         ret =GPIO_pIN_WRITE_LOGIC(config_pin,config_pin
      +                          ->logic);
  8681   00559C  C019  F010         	movff	GPIO_pIN_INTIALIZE@config_pin,GPIO_pIN_WRITE_LOGIC@config_pin
  8682   0055A0  C01A  F011         	movff	GPIO_pIN_INTIALIZE@config_pin+1,GPIO_pIN_WRITE_LOGIC@config_pin+1
  8683   0055A4  C019  FFD9         	movff	GPIO_pIN_INTIALIZE@config_pin,fsr2l
  8684   0055A8  C01A  FFDA         	movff	GPIO_pIN_INTIALIZE@config_pin+1,fsr2h
  8685   0055AC  0E00               	movlw	0
  8686   0055AE  BEDF               	btfsc	indf2,7,c
  8687   0055B0  0E01               	movlw	1
  8688   0055B2  6E12               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  8689   0055B4  EC73  F01F         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  8690   0055B8  6E1C               	movwf	GPIO_pIN_INTIALIZE@ret^0,c
  8691   0055BA                     l10404:
  8692                           
  8693                           ;MKAL_layer/gpio/pro_gpio.c: 82:     return ret;
  8694   0055BA  501C               	movf	GPIO_pIN_INTIALIZE@ret^0,w,c
  8695   0055BC  0012               	return		;funcret
  8696   0055BE                     __end_of_GPIO_pIN_INTIALIZE:
  8697                           	callstack 0
  8698                           
  8699 ;; *************** function _GPIO_pIN_WRITE_LOGIC *****************
  8700 ;; Defined at:
  8701 ;;		line 50 in file "MKAL_layer/gpio/pro_gpio.c"
  8702 ;; Parameters:    Size  Location     Type
  8703 ;;  config_pin      2   15[COMRAM] PTR const struct .
  8704 ;;		 -> relay_turn_off@pin_config(1), relay_turn_on@pin_config(1), relay_intialize@pin_config(1), led_turn_off@pin_confi
      +g(1), 
  8705 ;;		 -> led_turn_on@pin_config(1), led_intialize@pin_config(1), leds_1(1), LED_ROOM_1(1), 
  8706 ;;		 -> ccp2_(10), ccp1_(10), motor_2$motor_pin_config(2), motor_2(2), 
  8707 ;;		 -> motor_1$motor_pin_config(2), motor_1(2), INT_1(6), INT_0(6), 
  8708 ;;		 -> lcd_4bit$lcd_data(4), lcd_4bit(6), 
  8709 ;;  logic           1   17[COMRAM] enum E2980
  8710 ;; Auto vars:     Size  Location     Type
  8711 ;;  ret             1   23[COMRAM] unsigned char 
  8712 ;; Return value:  Size  Location     Type
  8713 ;;                  1    wreg      unsigned char 
  8714 ;; Registers used:
  8715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8716 ;; Tracked objects:
  8717 ;;		On entry : 0/0
  8718 ;;		On exit  : 0/0
  8719 ;;		Unchanged: 0/0
  8720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8721 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8722 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8723 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8724 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8725 ;;Total ram usage:        9 bytes
  8726 ;; Hardware stack levels used: 1
  8727 ;; Hardware stack levels required when called: 4
  8728 ;; This function calls:
  8729 ;;		Nothing
  8730 ;; This function is called by:
  8731 ;;		_main
  8732 ;;		_lcd_4bit_send_command
  8733 ;;		_lcd_4bit_send_char_data
  8734 ;;		_lcd_send_4bits
  8735 ;;		_lcd_4bit_send_enable_signal
  8736 ;;		_morot_turn_right
  8737 ;;		_morot_turn_left
  8738 ;;		_morot_stop
  8739 ;;		_GPIO_pIN_INTIALIZE
  8740 ;;		_segment_wright_logic
  8741 ;;		_lcd_8bit_send_command
  8742 ;;		_lcd_8bit_send_char_data
  8743 ;;		_lcd_8bit_send_enable_signal
  8744 ;;		_led_turn_on
  8745 ;;		_led_turn_off
  8746 ;;		_keypad_get_value
  8747 ;;		_relay_turn_on
  8748 ;;		_relay_turn_off
  8749 ;; This function uses a non-reentrant model
  8750 ;;
  8751                           
  8752                           	psect	text42
  8753   003EE6                     __ptext42:
  8754                           	callstack 0
  8755   003EE6                     _GPIO_pIN_WRITE_LOGIC:
  8756                           	callstack 25
  8757   003EE6                     
  8758                           ;MKAL_layer/gpio/pro_gpio.c: 50: Std_ReturnType GPIO_pIN_WRITE_LOGIC(const pin_config_t 
      +                          *config_pin ,logic_t logic);MKAL_layer/gpio/pro_gpio.c: 51: {;MKAL_layer/gpio/pro_gpio.c
      +                          : 52:     Std_ReturnType ret =(Std_ReturnType)0x01;
  8759   003EE6  0E01               	movlw	1
  8760   003EE8  6E18               	movwf	GPIO_pIN_WRITE_LOGIC@ret^0,c
  8761   003EEA                     
  8762                           ;MKAL_layer/gpio/pro_gpio.c: 53:     if ((((void*)0) == config_pin) || (config_pin->pin 
      +                          > 8 -1)){
  8763   003EEA  5010               	movf	GPIO_pIN_WRITE_LOGIC@config_pin^0,w,c
  8764   003EEC  1011               	iorwf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,w,c
  8765   003EEE  B4D8               	btfsc	status,2,c
  8766   003EF0  EF7C  F01F         	goto	u10811
  8767   003EF4  EF7E  F01F         	goto	u10810
  8768   003EF8                     u10811:
  8769   003EF8  EF8F  F01F         	goto	l10254
  8770   003EFC                     u10810:
  8771   003EFC  C010  FFD9         	movff	GPIO_pIN_WRITE_LOGIC@config_pin,fsr2l
  8772   003F00  C011  FFDA         	movff	GPIO_pIN_WRITE_LOGIC@config_pin+1,fsr2h
  8773   003F04  30DF               	rrcf	223,w,c
  8774   003F06  32E8               	rrcf	wreg,f,c
  8775   003F08  32E8               	rrcf	wreg,f,c
  8776   003F0A  0B07               	andlw	7
  8777   003F0C  6E13               	movwf	??_GPIO_pIN_WRITE_LOGIC^0,c
  8778   003F0E  0E07               	movlw	7
  8779   003F10  6413               	cpfsgt	??_GPIO_pIN_WRITE_LOGIC^0,c
  8780   003F12  EF8D  F01F         	goto	u10821
  8781   003F16  EF8F  F01F         	goto	u10820
  8782   003F1A                     u10821:
  8783   003F1A  EFEA  F01F         	goto	l10262
  8784   003F1E                     u10820:
  8785   003F1E                     l10254:
  8786                           
  8787                           ;MKAL_layer/gpio/pro_gpio.c: 54:         ret =(Std_ReturnType)0x00;
  8788   003F1E  0E00               	movlw	0
  8789   003F20  6E18               	movwf	GPIO_pIN_WRITE_LOGIC@ret^0,c
  8790                           
  8791                           ;MKAL_layer/gpio/pro_gpio.c: 55:     }
  8792   003F22  EFFF  F01F         	goto	l10264
  8793   003F26                     l10256:
  8794                           
  8795                           ;MKAL_layer/gpio/pro_gpio.c: 59:                 (*lat_regisrers[config_pin->port] &= ~(
      +                          (uint8)1 << config_pin->pin));
  8796   003F26  C010  FFD9         	movff	GPIO_pIN_WRITE_LOGIC@config_pin,fsr2l
  8797   003F2A  C011  FFDA         	movff	GPIO_pIN_WRITE_LOGIC@config_pin+1,fsr2h
  8798   003F2E  30DF               	rrcf	223,w,c
  8799   003F30  32E8               	rrcf	wreg,f,c
  8800   003F32  32E8               	rrcf	wreg,f,c
  8801   003F34  0B07               	andlw	7
  8802   003F36  6E13               	movwf	??_GPIO_pIN_WRITE_LOGIC^0,c
  8803   003F38  0E01               	movlw	1
  8804   003F3A  6E14               	movwf	(??_GPIO_pIN_WRITE_LOGIC+1)^0,c
  8805   003F3C  2A13               	incf	??_GPIO_pIN_WRITE_LOGIC^0,f,c
  8806   003F3E  EFA3  F01F         	goto	u10834
  8807   003F42                     u10835:
  8808   003F42  90D8               	bcf	status,0,c
  8809   003F44  3614               	rlcf	(??_GPIO_pIN_WRITE_LOGIC+1)^0,f,c
  8810   003F46                     u10834:
  8811   003F46  2E13               	decfsz	??_GPIO_pIN_WRITE_LOGIC^0,f,c
  8812   003F48  EFA1  F01F         	goto	u10835
  8813   003F4C  5014               	movf	(??_GPIO_pIN_WRITE_LOGIC+1)^0,w,c
  8814   003F4E  0AFF               	xorlw	255
  8815   003F50  6E15               	movwf	(??_GPIO_pIN_WRITE_LOGIC+2)^0,c
  8816   003F52  C010  FFD9         	movff	GPIO_pIN_WRITE_LOGIC@config_pin,fsr2l
  8817   003F56  C011  FFDA         	movff	GPIO_pIN_WRITE_LOGIC@config_pin+1,fsr2h
  8818   003F5A  50DF               	movf	223,w,c
  8819   003F5C  0B07               	andlw	7
  8820   003F5E  0D02               	mullw	2
  8821   003F60  50F3               	movf	243,w,c
  8822   003F62  0FD9               	addlw	low _lat_regisrers
  8823   003F64  6ED9               	movwf	fsr2l,c
  8824   003F66  6ADA               	clrf	fsr2h,c
  8825   003F68  CFDE F016          	movff	postinc2,??_GPIO_pIN_WRITE_LOGIC+3
  8826   003F6C  CFDD F017          	movff	postdec2,??_GPIO_pIN_WRITE_LOGIC+4
  8827   003F70  C016  FFD9         	movff	??_GPIO_pIN_WRITE_LOGIC+3,fsr2l
  8828   003F74  C017  FFDA         	movff	??_GPIO_pIN_WRITE_LOGIC+4,fsr2h
  8829   003F78  5015               	movf	(??_GPIO_pIN_WRITE_LOGIC+2)^0,w,c
  8830   003F7A  16DF               	andwf	indf2,f,c
  8831                           
  8832                           ;MKAL_layer/gpio/pro_gpio.c: 60:                 break;
  8833   003F7C  EFFF  F01F         	goto	l10264
  8834   003F80                     l10258:
  8835                           
  8836                           ;MKAL_layer/gpio/pro_gpio.c: 62:                 (*lat_regisrers[config_pin->port] |= ((
      +                          uint8)1 << config_pin->pin));
  8837   003F80  C010  FFD9         	movff	GPIO_pIN_WRITE_LOGIC@config_pin,fsr2l
  8838   003F84  C011  FFDA         	movff	GPIO_pIN_WRITE_LOGIC@config_pin+1,fsr2h
  8839   003F88  30DF               	rrcf	223,w,c
  8840   003F8A  32E8               	rrcf	wreg,f,c
  8841   003F8C  32E8               	rrcf	wreg,f,c
  8842   003F8E  0B07               	andlw	7
  8843   003F90  6E13               	movwf	??_GPIO_pIN_WRITE_LOGIC^0,c
  8844   003F92  0E01               	movlw	1
  8845   003F94  6E14               	movwf	(??_GPIO_pIN_WRITE_LOGIC+1)^0,c
  8846   003F96  2A13               	incf	??_GPIO_pIN_WRITE_LOGIC^0,f,c
  8847   003F98  EFD0  F01F         	goto	u10844
  8848   003F9C                     u10845:
  8849   003F9C  90D8               	bcf	status,0,c
  8850   003F9E  3614               	rlcf	(??_GPIO_pIN_WRITE_LOGIC+1)^0,f,c
  8851   003FA0                     u10844:
  8852   003FA0  2E13               	decfsz	??_GPIO_pIN_WRITE_LOGIC^0,f,c
  8853   003FA2  EFCE  F01F         	goto	u10845
  8854   003FA6  C010  FFD9         	movff	GPIO_pIN_WRITE_LOGIC@config_pin,fsr2l
  8855   003FAA  C011  FFDA         	movff	GPIO_pIN_WRITE_LOGIC@config_pin+1,fsr2h
  8856   003FAE  50DF               	movf	223,w,c
  8857   003FB0  0B07               	andlw	7
  8858   003FB2  0D02               	mullw	2
  8859   003FB4  50F3               	movf	243,w,c
  8860   003FB6  0FD9               	addlw	low _lat_regisrers
  8861   003FB8  6ED9               	movwf	fsr2l,c
  8862   003FBA  6ADA               	clrf	fsr2h,c
  8863   003FBC  CFDE F015          	movff	postinc2,??_GPIO_pIN_WRITE_LOGIC+2
  8864   003FC0  CFDD F016          	movff	postdec2,??_GPIO_pIN_WRITE_LOGIC+3
  8865   003FC4  C015  FFD9         	movff	??_GPIO_pIN_WRITE_LOGIC+2,fsr2l
  8866   003FC8  C016  FFDA         	movff	??_GPIO_pIN_WRITE_LOGIC+3,fsr2h
  8867   003FCC  5014               	movf	(??_GPIO_pIN_WRITE_LOGIC+1)^0,w,c
  8868   003FCE  12DF               	iorwf	indf2,f,c
  8869                           
  8870                           ;MKAL_layer/gpio/pro_gpio.c: 63:                 break;
  8871   003FD0  EFFF  F01F         	goto	l10264
  8872   003FD4                     l10262:
  8873   003FD4  5012               	movf	GPIO_pIN_WRITE_LOGIC@logic^0,w,c
  8874   003FD6  6E13               	movwf	??_GPIO_pIN_WRITE_LOGIC^0,c
  8875   003FD8  6A14               	clrf	(??_GPIO_pIN_WRITE_LOGIC+1)^0,c
  8876                           
  8877                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8878                           ; Switch size 1, requested type "simple"
  8879                           ; Number of cases is 1, Range of values is 0 to 0
  8880                           ; switch strategies available:
  8881                           ; Name         Instructions Cycles
  8882                           ; simple_byte            4     3 (average)
  8883                           ;	Chosen strategy is simple_byte
  8884   003FDA  5014               	movf	(??_GPIO_pIN_WRITE_LOGIC+1)^0,w,c
  8885   003FDC  0A00               	xorlw	0	; case 0
  8886   003FDE  B4D8               	btfsc	status,2,c
  8887   003FE0  EFF4  F01F         	goto	l13636
  8888   003FE4  EF8F  F01F         	goto	l10254
  8889   003FE8                     l13636:
  8890                           
  8891                           ; Switch size 1, requested type "simple"
  8892                           ; Number of cases is 2, Range of values is 0 to 1
  8893                           ; switch strategies available:
  8894                           ; Name         Instructions Cycles
  8895                           ; simple_byte            7     4 (average)
  8896                           ;	Chosen strategy is simple_byte
  8897   003FE8  5013               	movf	??_GPIO_pIN_WRITE_LOGIC^0,w,c
  8898   003FEA  0A00               	xorlw	0	; case 0
  8899   003FEC  B4D8               	btfsc	status,2,c
  8900   003FEE  EF93  F01F         	goto	l10256
  8901   003FF2  0A01               	xorlw	1	; case 1
  8902   003FF4  B4D8               	btfsc	status,2,c
  8903   003FF6  EFC0  F01F         	goto	l10258
  8904   003FFA  EF8F  F01F         	goto	l10254
  8905   003FFE                     l10264:
  8906                           
  8907                           ;MKAL_layer/gpio/pro_gpio.c: 67:     return ret;
  8908   003FFE  5018               	movf	GPIO_pIN_WRITE_LOGIC@ret^0,w,c
  8909   004000  0012               	return		;funcret
  8910   004002                     __end_of_GPIO_pIN_WRITE_LOGIC:
  8911                           	callstack 0
  8912                           
  8913 ;; *************** function _GPIO_pIN_DIRECTION_INTIALIZE *****************
  8914 ;; Defined at:
  8915 ;;		line 14 in file "MKAL_layer/gpio/pro_gpio.c"
  8916 ;; Parameters:    Size  Location     Type
  8917 ;;  config_pin      2   15[COMRAM] PTR const struct .
  8918 ;;		 -> relay_intialize@pin_config(1), led_intialize@pin_config(1), leds_1(1), LED_ROOM_1(1), 
  8919 ;;		 -> ccp2_(10), ccp1_(10), motor_2$motor_pin_config(2), motor_2(2), 
  8920 ;;		 -> motor_1$motor_pin_config(2), motor_1(2), INT_1(6), INT_0(6), 
  8921 ;;		 -> lcd_4bit$lcd_data(4), lcd_4bit(6), 
  8922 ;; Auto vars:     Size  Location     Type
  8923 ;;  ret             1   23[COMRAM] unsigned char 
  8924 ;; Return value:  Size  Location     Type
  8925 ;;                  1    wreg      unsigned char 
  8926 ;; Registers used:
  8927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8928 ;; Tracked objects:
  8929 ;;		On entry : 0/0
  8930 ;;		On exit  : 0/0
  8931 ;;		Unchanged: 0/0
  8932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8933 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8934 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8935 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8936 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8937 ;;Total ram usage:        9 bytes
  8938 ;; Hardware stack levels used: 1
  8939 ;; Hardware stack levels required when called: 4
  8940 ;; This function calls:
  8941 ;;		Nothing
  8942 ;; This function is called by:
  8943 ;;		_GPIO_pIN_INTIALIZE
  8944 ;;		_button_intialize
  8945 ;;		_keypad_intialize
  8946 ;;		_Interrupt_Pbx_Inti
  8947 ;; This function uses a non-reentrant model
  8948 ;;
  8949                           
  8950                           	psect	text43
  8951   003A14                     __ptext43:
  8952                           	callstack 0
  8953   003A14                     _GPIO_pIN_DIRECTION_INTIALIZE:
  8954                           	callstack 23
  8955   003A14                     
  8956                           ;MKAL_layer/gpio/pro_gpio.c: 14: Std_ReturnType GPIO_pIN_DIRECTION_INTIALIZE(const pin_c
      +                          onfig_t *config_pin);MKAL_layer/gpio/pro_gpio.c: 15: {;MKAL_layer/gpio/pro_gpio.c: 16:  
      +                             Std_ReturnType ret =(Std_ReturnType)0x01;
  8957   003A14  0E01               	movlw	1
  8958   003A16  6E18               	movwf	GPIO_pIN_DIRECTION_INTIALIZE@ret^0,c
  8959   003A18                     
  8960                           ;MKAL_layer/gpio/pro_gpio.c: 17:     if ((((void*)0) == config_pin) || (config_pin->pin 
      +                          > 8 -1)){
  8961   003A18  5010               	movf	GPIO_pIN_DIRECTION_INTIALIZE@config_pin^0,w,c
  8962   003A1A  1011               	iorwf	(GPIO_pIN_DIRECTION_INTIALIZE@config_pin+1)^0,w,c
  8963   003A1C  B4D8               	btfsc	status,2,c
  8964   003A1E  EF13  F01D         	goto	u10851
  8965   003A22  EF15  F01D         	goto	u10850
  8966   003A26                     u10851:
  8967   003A26  EF26  F01D         	goto	l10278
  8968   003A2A                     u10850:
  8969   003A2A  C010  FFD9         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin,fsr2l
  8970   003A2E  C011  FFDA         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin+1,fsr2h
  8971   003A32  30DF               	rrcf	223,w,c
  8972   003A34  32E8               	rrcf	wreg,f,c
  8973   003A36  32E8               	rrcf	wreg,f,c
  8974   003A38  0B07               	andlw	7
  8975   003A3A  6E12               	movwf	??_GPIO_pIN_DIRECTION_INTIALIZE^0,c
  8976   003A3C  0E07               	movlw	7
  8977   003A3E  6412               	cpfsgt	??_GPIO_pIN_DIRECTION_INTIALIZE^0,c
  8978   003A40  EF24  F01D         	goto	u10861
  8979   003A44  EF26  F01D         	goto	u10860
  8980   003A48                     u10861:
  8981   003A48  EF89  F01D         	goto	l10286
  8982   003A4C                     u10860:
  8983   003A4C                     l10278:
  8984                           
  8985                           ;MKAL_layer/gpio/pro_gpio.c: 18:         ret =(Std_ReturnType)0x00;
  8986   003A4C  0E00               	movlw	0
  8987   003A4E  6E18               	movwf	GPIO_pIN_DIRECTION_INTIALIZE@ret^0,c
  8988                           
  8989                           ;MKAL_layer/gpio/pro_gpio.c: 19:     }
  8990   003A50  EFAA  F01D         	goto	l10288
  8991   003A54                     l10280:
  8992                           
  8993                           ;MKAL_layer/gpio/pro_gpio.c: 23:                 (*tris_regisrers[config_pin->port] &= ~
      +                          ((uint8)1 << config_pin->pin));
  8994   003A54  C010  FFD9         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin,fsr2l
  8995   003A58  C011  FFDA         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin+1,fsr2h
  8996   003A5C  30DF               	rrcf	223,w,c
  8997   003A5E  32E8               	rrcf	wreg,f,c
  8998   003A60  32E8               	rrcf	wreg,f,c
  8999   003A62  0B07               	andlw	7
  9000   003A64  6E12               	movwf	??_GPIO_pIN_DIRECTION_INTIALIZE^0,c
  9001   003A66  0E01               	movlw	1
  9002   003A68  6E13               	movwf	(??_GPIO_pIN_DIRECTION_INTIALIZE+1)^0,c
  9003   003A6A  2A12               	incf	??_GPIO_pIN_DIRECTION_INTIALIZE^0,f,c
  9004   003A6C  EF3A  F01D         	goto	u10874
  9005   003A70                     u10875:
  9006   003A70  90D8               	bcf	status,0,c
  9007   003A72  3613               	rlcf	(??_GPIO_pIN_DIRECTION_INTIALIZE+1)^0,f,c
  9008   003A74                     u10874:
  9009   003A74  2E12               	decfsz	??_GPIO_pIN_DIRECTION_INTIALIZE^0,f,c
  9010   003A76  EF38  F01D         	goto	u10875
  9011   003A7A  5013               	movf	(??_GPIO_pIN_DIRECTION_INTIALIZE+1)^0,w,c
  9012   003A7C  0AFF               	xorlw	255
  9013   003A7E  6E14               	movwf	(??_GPIO_pIN_DIRECTION_INTIALIZE+2)^0,c
  9014   003A80  C010  FFD9         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin,fsr2l
  9015   003A84  C011  FFDA         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin+1,fsr2h
  9016   003A88  50DF               	movf	223,w,c
  9017   003A8A  0B07               	andlw	7
  9018   003A8C  6E15               	movwf	(??_GPIO_pIN_DIRECTION_INTIALIZE+3)^0,c
  9019   003A8E  5015               	movf	(??_GPIO_pIN_DIRECTION_INTIALIZE+3)^0,w,c
  9020   003A90  0D02               	mullw	2
  9021   003A92  0E0A               	movlw	low _tris_regisrers
  9022   003A94  24F3               	addwf	243,w,c
  9023   003A96  6ED9               	movwf	fsr2l,c
  9024   003A98  0E01               	movlw	high _tris_regisrers
  9025   003A9A  20F4               	addwfc	prodh,w,c
  9026   003A9C  6EDA               	movwf	fsr2h,c
  9027   003A9E  CFDE F016          	movff	postinc2,??_GPIO_pIN_DIRECTION_INTIALIZE+4
  9028   003AA2  CFDD F017          	movff	postdec2,??_GPIO_pIN_DIRECTION_INTIALIZE+5
  9029   003AA6  C016  FFD9         	movff	??_GPIO_pIN_DIRECTION_INTIALIZE+4,fsr2l
  9030   003AAA  C017  FFDA         	movff	??_GPIO_pIN_DIRECTION_INTIALIZE+5,fsr2h
  9031   003AAE  5014               	movf	(??_GPIO_pIN_DIRECTION_INTIALIZE+2)^0,w,c
  9032   003AB0  16DF               	andwf	indf2,f,c
  9033                           
  9034                           ;MKAL_layer/gpio/pro_gpio.c: 24:                 break;
  9035   003AB2  EFAA  F01D         	goto	l10288
  9036   003AB6                     l10282:
  9037                           
  9038                           ;MKAL_layer/gpio/pro_gpio.c: 26:                 (*tris_regisrers[config_pin->port] |= (
      +                          (uint8)1 << config_pin->pin));
  9039   003AB6  C010  FFD9         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin,fsr2l
  9040   003ABA  C011  FFDA         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin+1,fsr2h
  9041   003ABE  30DF               	rrcf	223,w,c
  9042   003AC0  32E8               	rrcf	wreg,f,c
  9043   003AC2  32E8               	rrcf	wreg,f,c
  9044   003AC4  0B07               	andlw	7
  9045   003AC6  6E12               	movwf	??_GPIO_pIN_DIRECTION_INTIALIZE^0,c
  9046   003AC8  0E01               	movlw	1
  9047   003ACA  6E13               	movwf	(??_GPIO_pIN_DIRECTION_INTIALIZE+1)^0,c
  9048   003ACC  2A12               	incf	??_GPIO_pIN_DIRECTION_INTIALIZE^0,f,c
  9049   003ACE  EF6B  F01D         	goto	u10884
  9050   003AD2                     u10885:
  9051   003AD2  90D8               	bcf	status,0,c
  9052   003AD4  3613               	rlcf	(??_GPIO_pIN_DIRECTION_INTIALIZE+1)^0,f,c
  9053   003AD6                     u10884:
  9054   003AD6  2E12               	decfsz	??_GPIO_pIN_DIRECTION_INTIALIZE^0,f,c
  9055   003AD8  EF69  F01D         	goto	u10885
  9056   003ADC  C010  FFD9         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin,fsr2l
  9057   003AE0  C011  FFDA         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin+1,fsr2h
  9058   003AE4  50DF               	movf	223,w,c
  9059   003AE6  0B07               	andlw	7
  9060   003AE8  6E14               	movwf	(??_GPIO_pIN_DIRECTION_INTIALIZE+2)^0,c
  9061   003AEA  5014               	movf	(??_GPIO_pIN_DIRECTION_INTIALIZE+2)^0,w,c
  9062   003AEC  0D02               	mullw	2
  9063   003AEE  0E0A               	movlw	low _tris_regisrers
  9064   003AF0  24F3               	addwf	243,w,c
  9065   003AF2  6ED9               	movwf	fsr2l,c
  9066   003AF4  0E01               	movlw	high _tris_regisrers
  9067   003AF6  20F4               	addwfc	prodh,w,c
  9068   003AF8  6EDA               	movwf	fsr2h,c
  9069   003AFA  CFDE F015          	movff	postinc2,??_GPIO_pIN_DIRECTION_INTIALIZE+3
  9070   003AFE  CFDD F016          	movff	postdec2,??_GPIO_pIN_DIRECTION_INTIALIZE+4
  9071   003B02  C015  FFD9         	movff	??_GPIO_pIN_DIRECTION_INTIALIZE+3,fsr2l
  9072   003B06  C016  FFDA         	movff	??_GPIO_pIN_DIRECTION_INTIALIZE+4,fsr2h
  9073   003B0A  5013               	movf	(??_GPIO_pIN_DIRECTION_INTIALIZE+1)^0,w,c
  9074   003B0C  12DF               	iorwf	indf2,f,c
  9075                           
  9076                           ;MKAL_layer/gpio/pro_gpio.c: 27:                 break;
  9077   003B0E  EFAA  F01D         	goto	l10288
  9078   003B12                     l10286:
  9079   003B12  C010  FFD9         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin,fsr2l
  9080   003B16  C011  FFDA         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin+1,fsr2h
  9081   003B1A  BCDF               	btfsc	indf2,6,c
  9082   003B1C  EF92  F01D         	goto	u10891
  9083   003B20  EF95  F01D         	goto	u10890
  9084   003B24                     u10891:
  9085   003B24  0E01               	movlw	1
  9086   003B26  EF96  F01D         	goto	u10900
  9087   003B2A                     u10890:
  9088   003B2A  0E00               	movlw	0
  9089   003B2C                     u10900:
  9090   003B2C  6E12               	movwf	??_GPIO_pIN_DIRECTION_INTIALIZE^0,c
  9091   003B2E  6A13               	clrf	(??_GPIO_pIN_DIRECTION_INTIALIZE+1)^0,c
  9092                           
  9093                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9094                           ; Switch size 1, requested type "simple"
  9095                           ; Number of cases is 1, Range of values is 0 to 0
  9096                           ; switch strategies available:
  9097                           ; Name         Instructions Cycles
  9098                           ; simple_byte            4     3 (average)
  9099                           ;	Chosen strategy is simple_byte
  9100   003B30  5013               	movf	(??_GPIO_pIN_DIRECTION_INTIALIZE+1)^0,w,c
  9101   003B32  0A00               	xorlw	0	; case 0
  9102   003B34  B4D8               	btfsc	status,2,c
  9103   003B36  EF9F  F01D         	goto	l13638
  9104   003B3A  EF26  F01D         	goto	l10278
  9105   003B3E                     l13638:
  9106                           
  9107                           ; Switch size 1, requested type "simple"
  9108                           ; Number of cases is 2, Range of values is 0 to 1
  9109                           ; switch strategies available:
  9110                           ; Name         Instructions Cycles
  9111                           ; simple_byte            7     4 (average)
  9112                           ;	Chosen strategy is simple_byte
  9113   003B3E  5012               	movf	??_GPIO_pIN_DIRECTION_INTIALIZE^0,w,c
  9114   003B40  0A00               	xorlw	0	; case 0
  9115   003B42  B4D8               	btfsc	status,2,c
  9116   003B44  EF2A  F01D         	goto	l10280
  9117   003B48  0A01               	xorlw	1	; case 1
  9118   003B4A  B4D8               	btfsc	status,2,c
  9119   003B4C  EF5B  F01D         	goto	l10282
  9120   003B50  EF26  F01D         	goto	l10278
  9121   003B54                     l10288:
  9122                           
  9123                           ;MKAL_layer/gpio/pro_gpio.c: 31:     return ret;
  9124   003B54  5018               	movf	GPIO_pIN_DIRECTION_INTIALIZE@ret^0,w,c
  9125   003B56  0012               	return		;funcret
  9126   003B58                     __end_of_GPIO_pIN_DIRECTION_INTIALIZE:
  9127                           	callstack 0
  9128                           
  9129 ;; *************** function _interrupt_intx_enable *****************
  9130 ;; Defined at:
  9131 ;;		line 172 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
  9132 ;; Parameters:    Size  Location     Type
  9133 ;;  INTERRUPT_IN    2   15[COMRAM] PTR const struct .
  9134 ;;		 -> INT_1(6), INT_0(6), 
  9135 ;; Auto vars:     Size  Location     Type
  9136 ;;  ret             1   19[COMRAM] unsigned char 
  9137 ;; Return value:  Size  Location     Type
  9138 ;;                  1    wreg      unsigned char 
  9139 ;; Registers used:
  9140 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9141 ;; Tracked objects:
  9142 ;;		On entry : 0/0
  9143 ;;		On exit  : 0/0
  9144 ;;		Unchanged: 0/0
  9145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9146 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9147 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9148 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9149 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9150 ;;Total ram usage:        5 bytes
  9151 ;; Hardware stack levels used: 1
  9152 ;; Hardware stack levels required when called: 4
  9153 ;; This function calls:
  9154 ;;		Nothing
  9155 ;; This function is called by:
  9156 ;;		_Interrupt_Intx_Inti
  9157 ;; This function uses a non-reentrant model
  9158 ;;
  9159                           
  9160                           	psect	text44
  9161   005298                     __ptext44:
  9162                           	callstack 0
  9163   005298                     _interrupt_intx_enable:
  9164                           	callstack 24
  9165   005298                     
  9166                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 174:     if(((void*)0) == INTERRUPT_INT
      +                          X){
  9167   005298  5010               	movf	interrupt_intx_enable@INTERRUPT_INTX^0,w,c
  9168   00529A  1011               	iorwf	(interrupt_intx_enable@INTERRUPT_INTX+1)^0,w,c
  9169   00529C  A4D8               	btfss	status,2,c
  9170   00529E  EF53  F029         	goto	u12311
  9171   0052A2  EF55  F029         	goto	u12310
  9172   0052A6                     u12311:
  9173   0052A6  EF6A  F029         	goto	l11208
  9174   0052AA                     u12310:
  9175   0052AA                     l11198:
  9176                           
  9177                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 175:         ret =(Std_ReturnType)0x00;
  9178   0052AA  0E00               	movlw	0
  9179   0052AC  6E14               	movwf	interrupt_intx_enable@ret^0,c
  9180                           
  9181                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 176:     }
  9182   0052AE  EF89  F029         	goto	l11210
  9183   0052B2                     l1224:
  9184                           
  9185                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 184:                 (INTCONbits.GIE =1
      +                          );
  9186   0052B2  8EF2               	bsf	242,7,c	;volatile
  9187                           
  9188                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 185:                 (INTCONbits.PEIE =
      +                          1);
  9189   0052B4  8CF2               	bsf	242,6,c	;volatile
  9190                           
  9191                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 187:                 (INTCONbits.INT0IE
      +                           = 1);
  9192   0052B6  88F2               	bsf	242,4,c	;volatile
  9193   0052B8                     l11200:
  9194                           
  9195                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 188:                 ret =(Std_ReturnTy
      +                          pe)0x01;
  9196   0052B8  0E01               	movlw	1
  9197   0052BA  6E14               	movwf	interrupt_intx_enable@ret^0,c
  9198                           
  9199                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 189:                 break;
  9200   0052BC  EF89  F029         	goto	l11210
  9201   0052C0                     l1226:
  9202                           
  9203                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 203:                 (INTCONbits.GIE =1
      +                          );
  9204   0052C0  8EF2               	bsf	242,7,c	;volatile
  9205                           
  9206                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 204:                 (INTCONbits.PEIE =
      +                          1);
  9207   0052C2  8CF2               	bsf	242,6,c	;volatile
  9208                           
  9209                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 206:                 (INTCON3bits.INT1I
      +                          E = 1);
  9210   0052C4  86F0               	bsf	240,3,c	;volatile
  9211   0052C6  EF5C  F029         	goto	l11200
  9212   0052CA                     l1227:
  9213                           
  9214                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 223:                 (INTCONbits.GIE =1
      +                          );
  9215   0052CA  8EF2               	bsf	242,7,c	;volatile
  9216                           
  9217                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 224:                 (INTCONbits.PEIE =
      +                          1);
  9218   0052CC  8CF2               	bsf	242,6,c	;volatile
  9219                           
  9220                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 226:                 (INTCON3bits.INT2I
      +                          E = 1);
  9221   0052CE  88F0               	bsf	240,4,c	;volatile
  9222   0052D0  EF5C  F029         	goto	l11200
  9223   0052D4                     l11208:
  9224   0052D4  EE20 F004          	lfsr	2,4
  9225   0052D8  5010               	movf	interrupt_intx_enable@INTERRUPT_INTX^0,w,c
  9226   0052DA  26D9               	addwf	fsr2l,f,c
  9227   0052DC  5011               	movf	(interrupt_intx_enable@INTERRUPT_INTX+1)^0,w,c
  9228   0052DE  22DA               	addwfc	fsr2h,f,c
  9229   0052E0  50DF               	movf	indf2,w,c
  9230   0052E2  6E12               	movwf	??_interrupt_intx_enable^0,c
  9231   0052E4  6A13               	clrf	(??_interrupt_intx_enable+1)^0,c
  9232                           
  9233                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9234                           ; Switch size 1, requested type "simple"
  9235                           ; Number of cases is 1, Range of values is 0 to 0
  9236                           ; switch strategies available:
  9237                           ; Name         Instructions Cycles
  9238                           ; simple_byte            4     3 (average)
  9239                           ;	Chosen strategy is simple_byte
  9240   0052E6  5013               	movf	(??_interrupt_intx_enable+1)^0,w,c
  9241   0052E8  0A00               	xorlw	0	; case 0
  9242   0052EA  B4D8               	btfsc	status,2,c
  9243   0052EC  EF7A  F029         	goto	l13640
  9244   0052F0  EF55  F029         	goto	l11198
  9245   0052F4                     l13640:
  9246                           
  9247                           ; Switch size 1, requested type "simple"
  9248                           ; Number of cases is 3, Range of values is 0 to 2
  9249                           ; switch strategies available:
  9250                           ; Name         Instructions Cycles
  9251                           ; simple_byte           10     6 (average)
  9252                           ;	Chosen strategy is simple_byte
  9253   0052F4  5012               	movf	??_interrupt_intx_enable^0,w,c
  9254   0052F6  0A00               	xorlw	0	; case 0
  9255   0052F8  B4D8               	btfsc	status,2,c
  9256   0052FA  EF59  F029         	goto	l1224
  9257   0052FE  0A01               	xorlw	1	; case 1
  9258   005300  B4D8               	btfsc	status,2,c
  9259   005302  EF60  F029         	goto	l1226
  9260   005306  0A03               	xorlw	3	; case 2
  9261   005308  B4D8               	btfsc	status,2,c
  9262   00530A  EF65  F029         	goto	l1227
  9263   00530E  EF55  F029         	goto	l11198
  9264   005312                     l11210:
  9265                           
  9266                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 233:     return ret ;
  9267   005312  5014               	movf	interrupt_intx_enable@ret^0,w,c
  9268   005314  0012               	return		;funcret
  9269   005316                     __end_of_interrupt_intx_enable:
  9270                           	callstack 0
  9271                           
  9272 ;; *************** function _interrupt_intx_edge_inti *****************
  9273 ;; Defined at:
  9274 ;;		line 272 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
  9275 ;; Parameters:    Size  Location     Type
  9276 ;;  INTERRUPT_IN    2   15[COMRAM] PTR const struct .
  9277 ;;		 -> INT_1(6), INT_0(6), 
  9278 ;; Auto vars:     Size  Location     Type
  9279 ;;  ret             1   19[COMRAM] unsigned char 
  9280 ;; Return value:  Size  Location     Type
  9281 ;;                  1    wreg      unsigned char 
  9282 ;; Registers used:
  9283 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9284 ;; Tracked objects:
  9285 ;;		On entry : 0/0
  9286 ;;		On exit  : 0/0
  9287 ;;		Unchanged: 0/0
  9288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9289 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9290 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9291 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9292 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9293 ;;Total ram usage:        5 bytes
  9294 ;; Hardware stack levels used: 1
  9295 ;; Hardware stack levels required when called: 4
  9296 ;; This function calls:
  9297 ;;		Nothing
  9298 ;; This function is called by:
  9299 ;;		_Interrupt_Intx_Inti
  9300 ;; This function uses a non-reentrant model
  9301 ;;
  9302                           
  9303                           	psect	text45
  9304   003C9C                     __ptext45:
  9305                           	callstack 0
  9306   003C9C                     _interrupt_intx_edge_inti:
  9307                           	callstack 24
  9308   003C9C                     
  9309                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 274:     if(((void*)0) == INTERRUPT_INT
      +                          X){
  9310   003C9C  5010               	movf	interrupt_intx_edge_inti@INTERRUPT_INTX^0,w,c
  9311   003C9E  1011               	iorwf	(interrupt_intx_edge_inti@INTERRUPT_INTX+1)^0,w,c
  9312   003CA0  A4D8               	btfss	status,2,c
  9313   003CA2  EF55  F01E         	goto	u12221
  9314   003CA6  EF57  F01E         	goto	u12220
  9315   003CAA                     u12221:
  9316   003CAA  EFC3  F01E         	goto	l11148
  9317   003CAE                     u12220:
  9318   003CAE                     l11114:
  9319                           
  9320                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 275:         ret =(Std_ReturnType)0x00;
  9321   003CAE  0E00               	movlw	0
  9322   003CB0  6E14               	movwf	interrupt_intx_edge_inti@ret^0,c
  9323                           
  9324                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 276:     }
  9325   003CB2  EFE2  F01E         	goto	l11150
  9326   003CB6                     l11116:
  9327                           
  9328                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 281:                 if(INTERRUPT_FALLI
      +                          NG_EDGE == INTERRUPT_INTX->edge){
  9329   003CB6  EE20 F003          	lfsr	2,3
  9330   003CBA  5010               	movf	interrupt_intx_edge_inti@INTERRUPT_INTX^0,w,c
  9331   003CBC  26D9               	addwf	fsr2l,f,c
  9332   003CBE  5011               	movf	(interrupt_intx_edge_inti@INTERRUPT_INTX+1)^0,w,c
  9333   003CC0  22DA               	addwfc	fsr2h,f,c
  9334   003CC2  50DF               	movf	indf2,w,c
  9335   003CC4  A4D8               	btfss	status,2,c
  9336   003CC6  EF67  F01E         	goto	u12231
  9337   003CCA  EF69  F01E         	goto	u12230
  9338   003CCE                     u12231:
  9339   003CCE  EF6C  F01E         	goto	l11120
  9340   003CD2                     u12230:
  9341   003CD2                     
  9342                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 282:                     (INTCON2bits.I
      +                          NTEDG0 = 0);
  9343   003CD2  9CF1               	bcf	241,6,c	;volatile
  9344                           
  9345                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 283:                 }
  9346   003CD4  EF7B  F01E         	goto	l11124
  9347   003CD8                     l11120:
  9348   003CD8  EE20 F003          	lfsr	2,3
  9349   003CDC  5010               	movf	interrupt_intx_edge_inti@INTERRUPT_INTX^0,w,c
  9350   003CDE  26D9               	addwf	fsr2l,f,c
  9351   003CE0  5011               	movf	(interrupt_intx_edge_inti@INTERRUPT_INTX+1)^0,w,c
  9352   003CE2  22DA               	addwfc	fsr2h,f,c
  9353   003CE4  04DE               	decf	postinc2,w,c
  9354   003CE6  A4D8               	btfss	status,2,c
  9355   003CE8  EF78  F01E         	goto	u12241
  9356   003CEC  EF7A  F01E         	goto	u12240
  9357   003CF0                     u12241:
  9358   003CF0  EF7B  F01E         	goto	l11124
  9359   003CF4                     u12240:
  9360   003CF4                     
  9361                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 285:                     (INTCON2bits.I
      +                          NTEDG0 = 1);
  9362   003CF4  8CF1               	bsf	241,6,c	;volatile
  9363   003CF6                     l11124:
  9364                           
  9365                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 288:                 ret =(Std_ReturnTy
      +                          pe)0x01;
  9366   003CF6  0E01               	movlw	1
  9367   003CF8  6E14               	movwf	interrupt_intx_edge_inti@ret^0,c
  9368                           
  9369                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 289:                 break;
  9370   003CFA  EFE2  F01E         	goto	l11150
  9371   003CFE                     l11126:
  9372                           
  9373                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 291:                 if(INTERRUPT_FALLI
      +                          NG_EDGE == INTERRUPT_INTX->edge){
  9374   003CFE  EE20 F003          	lfsr	2,3
  9375   003D02  5010               	movf	interrupt_intx_edge_inti@INTERRUPT_INTX^0,w,c
  9376   003D04  26D9               	addwf	fsr2l,f,c
  9377   003D06  5011               	movf	(interrupt_intx_edge_inti@INTERRUPT_INTX+1)^0,w,c
  9378   003D08  22DA               	addwfc	fsr2h,f,c
  9379   003D0A  50DF               	movf	indf2,w,c
  9380   003D0C  A4D8               	btfss	status,2,c
  9381   003D0E  EF8B  F01E         	goto	u12251
  9382   003D12  EF8D  F01E         	goto	u12250
  9383   003D16                     u12251:
  9384   003D16  EF90  F01E         	goto	l11130
  9385   003D1A                     u12250:
  9386   003D1A                     
  9387                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 292:                     (INTCON2bits.I
      +                          NTEDG1 = 0);
  9388   003D1A  9AF1               	bcf	241,5,c	;volatile
  9389                           
  9390                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 293:                 }
  9391   003D1C  EF7B  F01E         	goto	l11124
  9392   003D20                     l11130:
  9393   003D20  EE20 F003          	lfsr	2,3
  9394   003D24  5010               	movf	interrupt_intx_edge_inti@INTERRUPT_INTX^0,w,c
  9395   003D26  26D9               	addwf	fsr2l,f,c
  9396   003D28  5011               	movf	(interrupt_intx_edge_inti@INTERRUPT_INTX+1)^0,w,c
  9397   003D2A  22DA               	addwfc	fsr2h,f,c
  9398   003D2C  04DE               	decf	postinc2,w,c
  9399   003D2E  A4D8               	btfss	status,2,c
  9400   003D30  EF9C  F01E         	goto	u12261
  9401   003D34  EF9E  F01E         	goto	u12260
  9402   003D38                     u12261:
  9403   003D38  EF7B  F01E         	goto	l11124
  9404   003D3C                     u12260:
  9405   003D3C                     
  9406                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 295:                     (INTCON2bits.I
      +                          NTEDG1 = 1);
  9407   003D3C  8AF1               	bsf	241,5,c	;volatile
  9408                           
  9409                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 296:                 }
  9410   003D3E  EF7B  F01E         	goto	l11124
  9411   003D42                     l11136:
  9412                           
  9413                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 301:                if(INTERRUPT_FALLIN
      +                          G_EDGE == INTERRUPT_INTX->edge){
  9414   003D42  EE20 F003          	lfsr	2,3
  9415   003D46  5010               	movf	interrupt_intx_edge_inti@INTERRUPT_INTX^0,w,c
  9416   003D48  26D9               	addwf	fsr2l,f,c
  9417   003D4A  5011               	movf	(interrupt_intx_edge_inti@INTERRUPT_INTX+1)^0,w,c
  9418   003D4C  22DA               	addwfc	fsr2h,f,c
  9419   003D4E  50DF               	movf	indf2,w,c
  9420   003D50  A4D8               	btfss	status,2,c
  9421   003D52  EFAD  F01E         	goto	u12271
  9422   003D56  EFAF  F01E         	goto	u12270
  9423   003D5A                     u12271:
  9424   003D5A  EFB2  F01E         	goto	l11140
  9425   003D5E                     u12270:
  9426   003D5E                     
  9427                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 302:                     (INTCON2bits.I
      +                          NTEDG2 = 0);
  9428   003D5E  98F1               	bcf	241,4,c	;volatile
  9429                           
  9430                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 303:                 }
  9431   003D60  EF7B  F01E         	goto	l11124
  9432   003D64                     l11140:
  9433   003D64  EE20 F003          	lfsr	2,3
  9434   003D68  5010               	movf	interrupt_intx_edge_inti@INTERRUPT_INTX^0,w,c
  9435   003D6A  26D9               	addwf	fsr2l,f,c
  9436   003D6C  5011               	movf	(interrupt_intx_edge_inti@INTERRUPT_INTX+1)^0,w,c
  9437   003D6E  22DA               	addwfc	fsr2h,f,c
  9438   003D70  04DE               	decf	postinc2,w,c
  9439   003D72  A4D8               	btfss	status,2,c
  9440   003D74  EFBE  F01E         	goto	u12281
  9441   003D78  EFC0  F01E         	goto	u12280
  9442   003D7C                     u12281:
  9443   003D7C  EF7B  F01E         	goto	l11124
  9444   003D80                     u12280:
  9445   003D80                     
  9446                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 305:                     (INTCON2bits.I
      +                          NTEDG2 = 1);
  9447   003D80  88F1               	bsf	241,4,c	;volatile
  9448                           
  9449                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 306:                 }
  9450   003D82  EF7B  F01E         	goto	l11124
  9451   003D86                     l11148:
  9452   003D86  EE20 F004          	lfsr	2,4
  9453   003D8A  5010               	movf	interrupt_intx_edge_inti@INTERRUPT_INTX^0,w,c
  9454   003D8C  26D9               	addwf	fsr2l,f,c
  9455   003D8E  5011               	movf	(interrupt_intx_edge_inti@INTERRUPT_INTX+1)^0,w,c
  9456   003D90  22DA               	addwfc	fsr2h,f,c
  9457   003D92  50DF               	movf	indf2,w,c
  9458   003D94  6E12               	movwf	??_interrupt_intx_edge_inti^0,c
  9459   003D96  6A13               	clrf	(??_interrupt_intx_edge_inti+1)^0,c
  9460                           
  9461                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9462                           ; Switch size 1, requested type "simple"
  9463                           ; Number of cases is 1, Range of values is 0 to 0
  9464                           ; switch strategies available:
  9465                           ; Name         Instructions Cycles
  9466                           ; simple_byte            4     3 (average)
  9467                           ;	Chosen strategy is simple_byte
  9468   003D98  5013               	movf	(??_interrupt_intx_edge_inti+1)^0,w,c
  9469   003D9A  0A00               	xorlw	0	; case 0
  9470   003D9C  B4D8               	btfsc	status,2,c
  9471   003D9E  EFD3  F01E         	goto	l13642
  9472   003DA2  EF57  F01E         	goto	l11114
  9473   003DA6                     l13642:
  9474                           
  9475                           ; Switch size 1, requested type "simple"
  9476                           ; Number of cases is 3, Range of values is 0 to 2
  9477                           ; switch strategies available:
  9478                           ; Name         Instructions Cycles
  9479                           ; simple_byte           10     6 (average)
  9480                           ;	Chosen strategy is simple_byte
  9481   003DA6  5012               	movf	??_interrupt_intx_edge_inti^0,w,c
  9482   003DA8  0A00               	xorlw	0	; case 0
  9483   003DAA  B4D8               	btfsc	status,2,c
  9484   003DAC  EF5B  F01E         	goto	l11116
  9485   003DB0  0A01               	xorlw	1	; case 1
  9486   003DB2  B4D8               	btfsc	status,2,c
  9487   003DB4  EF7F  F01E         	goto	l11126
  9488   003DB8  0A03               	xorlw	3	; case 2
  9489   003DBA  B4D8               	btfsc	status,2,c
  9490   003DBC  EFA1  F01E         	goto	l11136
  9491   003DC0  EF57  F01E         	goto	l11114
  9492   003DC4                     l11150:
  9493                           
  9494                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 314:     return ret ;
  9495   003DC4  5014               	movf	interrupt_intx_edge_inti@ret^0,w,c
  9496   003DC6  0012               	return		;funcret
  9497   003DC8                     __end_of_interrupt_intx_edge_inti:
  9498                           	callstack 0
  9499                           
  9500 ;; *************** function _interrupt_intx_disable *****************
  9501 ;; Defined at:
  9502 ;;		line 240 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
  9503 ;; Parameters:    Size  Location     Type
  9504 ;;  INTERRUPT_IN    2   15[COMRAM] PTR const struct .
  9505 ;;		 -> INT_1(6), INT_0(6), 
  9506 ;; Auto vars:     Size  Location     Type
  9507 ;;  ret             1   19[COMRAM] unsigned char 
  9508 ;; Return value:  Size  Location     Type
  9509 ;;                  1    wreg      unsigned char 
  9510 ;; Registers used:
  9511 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9512 ;; Tracked objects:
  9513 ;;		On entry : 0/0
  9514 ;;		On exit  : 0/0
  9515 ;;		Unchanged: 0/0
  9516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9517 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9518 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9519 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9520 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9521 ;;Total ram usage:        5 bytes
  9522 ;; Hardware stack levels used: 1
  9523 ;; Hardware stack levels required when called: 4
  9524 ;; This function calls:
  9525 ;;		Nothing
  9526 ;; This function is called by:
  9527 ;;		_Interrupt_Intx_Inti
  9528 ;;		_Interrupt_Intx_Deinti
  9529 ;; This function uses a non-reentrant model
  9530 ;;
  9531                           
  9532                           	psect	text46
  9533   005390                     __ptext46:
  9534                           	callstack 0
  9535   005390                     _interrupt_intx_disable:
  9536                           	callstack 24
  9537   005390                     
  9538                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 242:     if(((void*)0) == INTERRUPT_INT
      +                          X){
  9539   005390  5010               	movf	interrupt_intx_disable@INTERRUPT_INTX^0,w,c
  9540   005392  1011               	iorwf	(interrupt_intx_disable@INTERRUPT_INTX+1)^0,w,c
  9541   005394  A4D8               	btfss	status,2,c
  9542   005396  EFCF  F029         	goto	u12201
  9543   00539A  EFD1  F029         	goto	u12200
  9544   00539E                     u12201:
  9545   00539E  EFE0  F029         	goto	l11076
  9546   0053A2                     u12200:
  9547   0053A2                     l11066:
  9548                           
  9549                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 243:         ret =(Std_ReturnType)0x00;
  9550   0053A2  0E00               	movlw	0
  9551   0053A4  6E14               	movwf	interrupt_intx_disable@ret^0,c
  9552                           
  9553                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 244:     }
  9554   0053A6  EFFF  F029         	goto	l11078
  9555   0053AA                     l1235:
  9556                           
  9557                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 249:                 (INTCONbits.INT0IE
      +                           = 0);
  9558   0053AA  98F2               	bcf	242,4,c	;volatile
  9559   0053AC                     l11068:
  9560                           
  9561                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 250:                 ret =(Std_ReturnTy
      +                          pe)0x01;
  9562   0053AC  0E01               	movlw	1
  9563   0053AE  6E14               	movwf	interrupt_intx_disable@ret^0,c
  9564                           
  9565                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 251:                 break;
  9566   0053B0  EFFF  F029         	goto	l11078
  9567   0053B4                     l1237:
  9568                           
  9569                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 253:                 (INTCON3bits.INT1I
      +                          E = 0);
  9570   0053B4  96F0               	bcf	240,3,c	;volatile
  9571   0053B6  EFD6  F029         	goto	l11068
  9572   0053BA                     l1238:
  9573                           
  9574                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 257:                 (INTCON3bits.INT2I
      +                          E = 0);
  9575   0053BA  98F0               	bcf	240,4,c	;volatile
  9576   0053BC  EFD6  F029         	goto	l11068
  9577   0053C0                     l11076:
  9578   0053C0  EE20 F004          	lfsr	2,4
  9579   0053C4  5010               	movf	interrupt_intx_disable@INTERRUPT_INTX^0,w,c
  9580   0053C6  26D9               	addwf	fsr2l,f,c
  9581   0053C8  5011               	movf	(interrupt_intx_disable@INTERRUPT_INTX+1)^0,w,c
  9582   0053CA  22DA               	addwfc	fsr2h,f,c
  9583   0053CC  50DF               	movf	indf2,w,c
  9584   0053CE  6E12               	movwf	??_interrupt_intx_disable^0,c
  9585   0053D0  6A13               	clrf	(??_interrupt_intx_disable+1)^0,c
  9586                           
  9587                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9588                           ; Switch size 1, requested type "simple"
  9589                           ; Number of cases is 1, Range of values is 0 to 0
  9590                           ; switch strategies available:
  9591                           ; Name         Instructions Cycles
  9592                           ; simple_byte            4     3 (average)
  9593                           ;	Chosen strategy is simple_byte
  9594   0053D2  5013               	movf	(??_interrupt_intx_disable+1)^0,w,c
  9595   0053D4  0A00               	xorlw	0	; case 0
  9596   0053D6  B4D8               	btfsc	status,2,c
  9597   0053D8  EFF0  F029         	goto	l13644
  9598   0053DC  EFD1  F029         	goto	l11066
  9599   0053E0                     l13644:
  9600                           
  9601                           ; Switch size 1, requested type "simple"
  9602                           ; Number of cases is 3, Range of values is 0 to 2
  9603                           ; switch strategies available:
  9604                           ; Name         Instructions Cycles
  9605                           ; simple_byte           10     6 (average)
  9606                           ;	Chosen strategy is simple_byte
  9607   0053E0  5012               	movf	??_interrupt_intx_disable^0,w,c
  9608   0053E2  0A00               	xorlw	0	; case 0
  9609   0053E4  B4D8               	btfsc	status,2,c
  9610   0053E6  EFD5  F029         	goto	l1235
  9611   0053EA  0A01               	xorlw	1	; case 1
  9612   0053EC  B4D8               	btfsc	status,2,c
  9613   0053EE  EFDA  F029         	goto	l1237
  9614   0053F2  0A03               	xorlw	3	; case 2
  9615   0053F4  B4D8               	btfsc	status,2,c
  9616   0053F6  EFDD  F029         	goto	l1238
  9617   0053FA  EFD1  F029         	goto	l11066
  9618   0053FE                     l11078:
  9619                           
  9620                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 264:     return ret ;
  9621   0053FE  5014               	movf	interrupt_intx_disable@ret^0,w,c
  9622   005400  0012               	return		;funcret
  9623   005402                     __end_of_interrupt_intx_disable:
  9624                           	callstack 0
  9625                           
  9626 ;; *************** function _interrupt_intx_clear *****************
  9627 ;; Defined at:
  9628 ;;		line 384 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
  9629 ;; Parameters:    Size  Location     Type
  9630 ;;  INTERRUPT_IN    2   15[COMRAM] PTR const struct .
  9631 ;;		 -> INT_1(6), INT_0(6), 
  9632 ;; Auto vars:     Size  Location     Type
  9633 ;;  ret             1   19[COMRAM] unsigned char 
  9634 ;; Return value:  Size  Location     Type
  9635 ;;                  1    wreg      unsigned char 
  9636 ;; Registers used:
  9637 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9638 ;; Tracked objects:
  9639 ;;		On entry : 0/0
  9640 ;;		On exit  : 0/0
  9641 ;;		Unchanged: 0/0
  9642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9643 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9644 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9645 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9646 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9647 ;;Total ram usage:        5 bytes
  9648 ;; Hardware stack levels used: 1
  9649 ;; Hardware stack levels required when called: 4
  9650 ;; This function calls:
  9651 ;;		Nothing
  9652 ;; This function is called by:
  9653 ;;		_Interrupt_Intx_Inti
  9654 ;; This function uses a non-reentrant model
  9655 ;;
  9656                           
  9657                           	psect	text47
  9658   005402                     __ptext47:
  9659                           	callstack 0
  9660   005402                     _interrupt_intx_clear:
  9661                           	callstack 24
  9662   005402                     
  9663                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 386:     if(((void*)0) == INTERRUPT_INT
      +                          X){
  9664   005402  5010               	movf	interrupt_intx_clear@INTERRUPT_INTX^0,w,c
  9665   005404  1011               	iorwf	(interrupt_intx_clear@INTERRUPT_INTX+1)^0,w,c
  9666   005406  A4D8               	btfss	status,2,c
  9667   005408  EF08  F02A         	goto	u12211
  9668   00540C  EF0A  F02A         	goto	u12210
  9669   005410                     u12211:
  9670   005410  EF19  F02A         	goto	l11100
  9671   005414                     u12210:
  9672   005414                     l11090:
  9673                           
  9674                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 387:         ret =(Std_ReturnType)0x00;
  9675   005414  0E00               	movlw	0
  9676   005416  6E14               	movwf	interrupt_intx_clear@ret^0,c
  9677                           
  9678                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 388:     }
  9679   005418  EF38  F02A         	goto	l11102
  9680   00541C                     l1274:
  9681                           
  9682                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 393:                 (INTCONbits.INT0IF
      +                           = 0);
  9683   00541C  92F2               	bcf	242,1,c	;volatile
  9684   00541E                     l11092:
  9685                           
  9686                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 394:                 ret =(Std_ReturnTy
      +                          pe)0x01;
  9687   00541E  0E01               	movlw	1
  9688   005420  6E14               	movwf	interrupt_intx_clear@ret^0,c
  9689                           
  9690                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 395:                 break;
  9691   005422  EF38  F02A         	goto	l11102
  9692   005426                     l1276:
  9693                           
  9694                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 397:                 (INTCON3bits.INT1I
      +                          F = 0);
  9695   005426  90F0               	bcf	240,0,c	;volatile
  9696   005428  EF0F  F02A         	goto	l11092
  9697   00542C                     l1277:
  9698                           
  9699                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 401:                 (INTCON3bits.INT2I
      +                          F = 0);
  9700   00542C  92F0               	bcf	240,1,c	;volatile
  9701   00542E  EF0F  F02A         	goto	l11092
  9702   005432                     l11100:
  9703   005432  EE20 F004          	lfsr	2,4
  9704   005436  5010               	movf	interrupt_intx_clear@INTERRUPT_INTX^0,w,c
  9705   005438  26D9               	addwf	fsr2l,f,c
  9706   00543A  5011               	movf	(interrupt_intx_clear@INTERRUPT_INTX+1)^0,w,c
  9707   00543C  22DA               	addwfc	fsr2h,f,c
  9708   00543E  50DF               	movf	indf2,w,c
  9709   005440  6E12               	movwf	??_interrupt_intx_clear^0,c
  9710   005442  6A13               	clrf	(??_interrupt_intx_clear+1)^0,c
  9711                           
  9712                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9713                           ; Switch size 1, requested type "simple"
  9714                           ; Number of cases is 1, Range of values is 0 to 0
  9715                           ; switch strategies available:
  9716                           ; Name         Instructions Cycles
  9717                           ; simple_byte            4     3 (average)
  9718                           ;	Chosen strategy is simple_byte
  9719   005444  5013               	movf	(??_interrupt_intx_clear+1)^0,w,c
  9720   005446  0A00               	xorlw	0	; case 0
  9721   005448  B4D8               	btfsc	status,2,c
  9722   00544A  EF29  F02A         	goto	l13646
  9723   00544E  EF0A  F02A         	goto	l11090
  9724   005452                     l13646:
  9725                           
  9726                           ; Switch size 1, requested type "simple"
  9727                           ; Number of cases is 3, Range of values is 0 to 2
  9728                           ; switch strategies available:
  9729                           ; Name         Instructions Cycles
  9730                           ; simple_byte           10     6 (average)
  9731                           ;	Chosen strategy is simple_byte
  9732   005452  5012               	movf	??_interrupt_intx_clear^0,w,c
  9733   005454  0A00               	xorlw	0	; case 0
  9734   005456  B4D8               	btfsc	status,2,c
  9735   005458  EF0E  F02A         	goto	l1274
  9736   00545C  0A01               	xorlw	1	; case 1
  9737   00545E  B4D8               	btfsc	status,2,c
  9738   005460  EF13  F02A         	goto	l1276
  9739   005464  0A03               	xorlw	3	; case 2
  9740   005466  B4D8               	btfsc	status,2,c
  9741   005468  EF16  F02A         	goto	l1277
  9742   00546C  EF0A  F02A         	goto	l11090
  9743   005470                     l11102:
  9744                           
  9745                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 408:     return ret ;
  9746   005470  5014               	movf	interrupt_intx_clear@ret^0,w,c
  9747   005472  0012               	return		;funcret
  9748   005474                     __end_of_interrupt_intx_clear:
  9749                           	callstack 0
  9750                           
  9751 ;; *************** function _ADC_inti *****************
  9752 ;; Defined at:
  9753 ;;		line 15 in file "MKAL_layer/ADC/hal_adc.c"
  9754 ;; Parameters:    Size  Location     Type
  9755 ;;  ADC_conf        2   18[COMRAM] PTR const struct .
  9756 ;;		 -> ADC_(6), 
  9757 ;; Auto vars:     Size  Location     Type
  9758 ;;  ret             1   21[COMRAM] unsigned char 
  9759 ;; Return value:  Size  Location     Type
  9760 ;;                  1    wreg      unsigned char 
  9761 ;; Registers used:
  9762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9763 ;; Tracked objects:
  9764 ;;		On entry : 0/0
  9765 ;;		On exit  : 0/0
  9766 ;;		Unchanged: 0/0
  9767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9768 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9769 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9770 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9771 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9772 ;;Total ram usage:        4 bytes
  9773 ;; Hardware stack levels used: 1
  9774 ;; Hardware stack levels required when called: 5
  9775 ;; This function calls:
  9776 ;;		_adc_channel_port_confige
  9777 ;;		_configure_voltage_ref
  9778 ;;		_select_result_format
  9779 ;; This function is called by:
  9780 ;;		_intitialized_functions
  9781 ;; This function uses a non-reentrant model
  9782 ;;
  9783                           
  9784                           	psect	text48
  9785   00494E                     __ptext48:
  9786                           	callstack 0
  9787   00494E                     _ADC_inti:
  9788                           	callstack 24
  9789   00494E                     
  9790                           ;MKAL_layer/ADC/hal_adc.c: 17:     if (((void*)0) == ADC_conf){
  9791   00494E  5013               	movf	ADC_inti@ADC_conf^0,w,c
  9792   004950  1014               	iorwf	(ADC_inti@ADC_conf+1)^0,w,c
  9793   004952  A4D8               	btfss	status,2,c
  9794   004954  EFAE  F024         	goto	u12621
  9795   004958  EFB0  F024         	goto	u12620
  9796   00495C                     u12621:
  9797   00495C  EFB4  F024         	goto	l651
  9798   004960                     u12620:
  9799   004960                     
  9800                           ;MKAL_layer/ADC/hal_adc.c: 18:         ret =(Std_ReturnType)0x00;
  9801   004960  0E00               	movlw	0
  9802   004962  6E16               	movwf	ADC_inti@ret^0,c
  9803                           
  9804                           ;MKAL_layer/ADC/hal_adc.c: 19:     }
  9805   004964  EF05  F025         	goto	l11444
  9806   004968                     l651:
  9807                           
  9808                           ;MKAL_layer/ADC/hal_adc.c: 22:         (ADCON0bits.ADON = 0);
  9809   004968  90C2               	bcf	194,0,c	;volatile
  9810   00496A                     
  9811                           ;MKAL_layer/ADC/hal_adc.c: 24:         ADCON2bits.ACQT = ADC_conf->Acquisition_time;
  9812   00496A  EE20 F003          	lfsr	2,3
  9813   00496E  5013               	movf	ADC_inti@ADC_conf^0,w,c
  9814   004970  26D9               	addwf	fsr2l,f,c
  9815   004972  5014               	movf	(ADC_inti@ADC_conf+1)^0,w,c
  9816   004974  22DA               	addwfc	fsr2h,f,c
  9817   004976  50DF               	movf	indf2,w,c
  9818   004978  6E15               	movwf	??_ADC_inti^0,c
  9819   00497A  4615               	rlncf	??_ADC_inti^0,f,c
  9820   00497C  4615               	rlncf	??_ADC_inti^0,f,c
  9821   00497E  4615               	rlncf	??_ADC_inti^0,f,c
  9822   004980  50C0               	movf	192,w,c	;volatile
  9823   004982  1815               	xorwf	??_ADC_inti^0,w,c
  9824   004984  0BC7               	andlw	-57
  9825   004986  1815               	xorwf	??_ADC_inti^0,w,c
  9826   004988  6EC0               	movwf	192,c	;volatile
  9827                           
  9828                           ;MKAL_layer/ADC/hal_adc.c: 26:         ADCON2bits.ADCS = ADC_conf->Conversion_Clock;
  9829   00498A  EE20 F004          	lfsr	2,4
  9830   00498E  5013               	movf	ADC_inti@ADC_conf^0,w,c
  9831   004990  26D9               	addwf	fsr2l,f,c
  9832   004992  5014               	movf	(ADC_inti@ADC_conf+1)^0,w,c
  9833   004994  22DA               	addwfc	fsr2h,f,c
  9834   004996  50DF               	movf	indf2,w,c
  9835   004998  6E15               	movwf	??_ADC_inti^0,c
  9836   00499A  50C0               	movf	192,w,c	;volatile
  9837   00499C  1815               	xorwf	??_ADC_inti^0,w,c
  9838   00499E  0BF8               	andlw	-8
  9839   0049A0  1815               	xorwf	??_ADC_inti^0,w,c
  9840   0049A2  6EC0               	movwf	192,c	;volatile
  9841                           
  9842                           ;MKAL_layer/ADC/hal_adc.c: 28:         ADCON0bits.CHS = ADC_conf->ADC_CHANNAL_SELECT;
  9843   0049A4  EE20 F002          	lfsr	2,2
  9844   0049A8  5013               	movf	ADC_inti@ADC_conf^0,w,c
  9845   0049AA  26D9               	addwf	fsr2l,f,c
  9846   0049AC  5014               	movf	(ADC_inti@ADC_conf+1)^0,w,c
  9847   0049AE  22DA               	addwfc	fsr2h,f,c
  9848   0049B0  50DF               	movf	indf2,w,c
  9849   0049B2  6E15               	movwf	??_ADC_inti^0,c
  9850   0049B4  4615               	rlncf	??_ADC_inti^0,f,c
  9851   0049B6  4615               	rlncf	??_ADC_inti^0,f,c
  9852   0049B8  50C2               	movf	194,w,c	;volatile
  9853   0049BA  1815               	xorwf	??_ADC_inti^0,w,c
  9854   0049BC  0BC3               	andlw	-61
  9855   0049BE  1815               	xorwf	??_ADC_inti^0,w,c
  9856   0049C0  6EC2               	movwf	194,c	;volatile
  9857   0049C2                     
  9858                           ;MKAL_layer/ADC/hal_adc.c: 29:         adc_channel_port_confige(ADC_conf->ADC_CHANNAL_SE
      +                          LECT);
  9859   0049C2  EE20 F002          	lfsr	2,2
  9860   0049C6  5013               	movf	ADC_inti@ADC_conf^0,w,c
  9861   0049C8  26D9               	addwf	fsr2l,f,c
  9862   0049CA  5014               	movf	(ADC_inti@ADC_conf+1)^0,w,c
  9863   0049CC  22DA               	addwfc	fsr2h,f,c
  9864   0049CE  50DF               	movf	indf2,w,c
  9865   0049D0  ECA3  F022         	call	_adc_channel_port_confige
  9866   0049D4                     
  9867                           ;MKAL_layer/ADC/hal_adc.c: 50:         (INTCONbits.GIE =1);
  9868   0049D4  8EF2               	bsf	242,7,c	;volatile
  9869   0049D6                     
  9870                           ;MKAL_layer/ADC/hal_adc.c: 51:         (INTCONbits.PEIE =1);
  9871   0049D6  8CF2               	bsf	242,6,c	;volatile
  9872   0049D8                     
  9873                           ;MKAL_layer/ADC/hal_adc.c: 53:         (PIE1bits.ADIE = 1);
  9874   0049D8  8C9D               	bsf	157,6,c	;volatile
  9875   0049DA                     
  9876                           ;MKAL_layer/ADC/hal_adc.c: 55:         (PIR1bits.ADIF = 0);
  9877   0049DA  9C9E               	bcf	158,6,c	;volatile
  9878   0049DC                     
  9879                           ;MKAL_layer/ADC/hal_adc.c: 57:         ADC_INTERRUPTHANDLER = ADC_conf->ADC_interruptHan
      +                          dler;
  9880   0049DC  C013  FFD9         	movff	ADC_inti@ADC_conf,fsr2l
  9881   0049E0  C014  FFDA         	movff	ADC_inti@ADC_conf+1,fsr2h
  9882   0049E4  CFDE F0BA          	movff	postinc2,_ADC_INTERRUPTHANDLER
  9883   0049E8  CFDD F0BB          	movff	postdec2,_ADC_INTERRUPTHANDLER+1
  9884   0049EC                     
  9885                           ;MKAL_layer/ADC/hal_adc.c: 61:         select_result_format(ADC_conf);
  9886   0049EC  C013  F010         	movff	ADC_inti@ADC_conf,select_result_format@ADC_conf
  9887   0049F0  C014  F011         	movff	ADC_inti@ADC_conf+1,select_result_format@ADC_conf+1
  9888   0049F4  EC20  F02D         	call	_select_result_format	;wreg free
  9889   0049F8                     
  9890                           ;MKAL_layer/ADC/hal_adc.c: 63:         configure_voltage_ref(ADC_conf);
  9891   0049F8  C013  F010         	movff	ADC_inti@ADC_conf,configure_voltage_ref@ADC_conf
  9892   0049FC  C014  F011         	movff	ADC_inti@ADC_conf+1,configure_voltage_ref@ADC_conf+1
  9893   004A00  EC73  F02C         	call	_configure_voltage_ref	;wreg free
  9894   004A04                     
  9895                           ;MKAL_layer/ADC/hal_adc.c: 65:         (ADCON0bits.ADON = 1);
  9896   004A04  80C2               	bsf	194,0,c	;volatile
  9897   004A06                     
  9898                           ;MKAL_layer/ADC/hal_adc.c: 66:         ret = (Std_ReturnType)0x01;
  9899   004A06  0E01               	movlw	1
  9900   004A08  6E16               	movwf	ADC_inti@ret^0,c
  9901   004A0A                     l11444:
  9902                           
  9903                           ;MKAL_layer/ADC/hal_adc.c: 68:     return ret;
  9904   004A0A  5016               	movf	ADC_inti@ret^0,w,c
  9905   004A0C  0012               	return		;funcret
  9906   004A0E                     __end_of_ADC_inti:
  9907                           	callstack 0
  9908                           
  9909 ;; *************** function _select_result_format *****************
  9910 ;; Defined at:
  9911 ;;		line 195 in file "MKAL_layer/ADC/hal_adc.c"
  9912 ;; Parameters:    Size  Location     Type
  9913 ;;  ADC_conf        2   15[COMRAM] PTR const struct .
  9914 ;;		 -> ADC_(6), 
  9915 ;; Auto vars:     Size  Location     Type
  9916 ;;		None
  9917 ;; Return value:  Size  Location     Type
  9918 ;;                  1    wreg      void 
  9919 ;; Registers used:
  9920 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9921 ;; Tracked objects:
  9922 ;;		On entry : 0/0
  9923 ;;		On exit  : 0/0
  9924 ;;		Unchanged: 0/0
  9925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9926 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9929 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9930 ;;Total ram usage:        2 bytes
  9931 ;; Hardware stack levels used: 1
  9932 ;; Hardware stack levels required when called: 4
  9933 ;; This function calls:
  9934 ;;		Nothing
  9935 ;; This function is called by:
  9936 ;;		_ADC_inti
  9937 ;; This function uses a non-reentrant model
  9938 ;;
  9939                           
  9940                           	psect	text49
  9941   005A40                     __ptext49:
  9942                           	callstack 0
  9943   005A40                     _select_result_format:
  9944                           	callstack 24
  9945   005A40                     
  9946                           ;MKAL_layer/ADC/hal_adc.c: 196:     if(ADC_conf->result_format == 1){
  9947   005A40  EE20 F005          	lfsr	2,5
  9948   005A44  5010               	movf	select_result_format@ADC_conf^0,w,c
  9949   005A46  26D9               	addwf	fsr2l,f,c
  9950   005A48  5011               	movf	(select_result_format@ADC_conf+1)^0,w,c
  9951   005A4A  22DA               	addwfc	fsr2h,f,c
  9952   005A4C  A2DF               	btfss	indf2,1,c
  9953   005A4E  EF2B  F02D         	goto	u12141
  9954   005A52  EF2D  F02D         	goto	u12140
  9955   005A56                     u12141:
  9956   005A56  EF30  F02D         	goto	l11024
  9957   005A5A                     u12140:
  9958   005A5A                     
  9959                           ;MKAL_layer/ADC/hal_adc.c: 197:         (ADCON2bits.ADFM = 1);
  9960   005A5A  8EC0               	bsf	192,7,c	;volatile
  9961                           
  9962                           ;MKAL_layer/ADC/hal_adc.c: 198:     }else if(ADC_conf->result_format == 0){
  9963   005A5C  EF41  F02D         	goto	l726
  9964   005A60                     l11024:
  9965   005A60  EE20 F005          	lfsr	2,5
  9966   005A64  5010               	movf	select_result_format@ADC_conf^0,w,c
  9967   005A66  26D9               	addwf	fsr2l,f,c
  9968   005A68  5011               	movf	(select_result_format@ADC_conf+1)^0,w,c
  9969   005A6A  22DA               	addwfc	fsr2h,f,c
  9970   005A6C  B2DF               	btfsc	indf2,1,c
  9971   005A6E  EF3B  F02D         	goto	u12151
  9972   005A72  EF3D  F02D         	goto	u12150
  9973   005A76                     u12151:
  9974   005A76  EF40  F02D         	goto	l724
  9975   005A7A                     u12150:
  9976   005A7A                     
  9977                           ;MKAL_layer/ADC/hal_adc.c: 199:         (ADCON2bits.ADFM = 0) ;
  9978   005A7A  9EC0               	bcf	192,7,c	;volatile
  9979                           
  9980                           ;MKAL_layer/ADC/hal_adc.c: 200:     }
  9981   005A7C  EF41  F02D         	goto	l726
  9982   005A80                     l724:
  9983                           
  9984                           ;MKAL_layer/ADC/hal_adc.c: 202:     {;MKAL_layer/ADC/hal_adc.c: 203:         (ADCON2bits
      +                          .ADFM = 1);
  9985   005A80  8EC0               	bsf	192,7,c	;volatile
  9986   005A82                     l726:
  9987   005A82  0012               	return		;funcret
  9988   005A84                     __end_of_select_result_format:
  9989                           	callstack 0
  9990                           
  9991 ;; *************** function _configure_voltage_ref *****************
  9992 ;; Defined at:
  9993 ;;		line 207 in file "MKAL_layer/ADC/hal_adc.c"
  9994 ;; Parameters:    Size  Location     Type
  9995 ;;  ADC_conf        2   15[COMRAM] PTR const struct .
  9996 ;;		 -> ADC_(6), 
  9997 ;; Auto vars:     Size  Location     Type
  9998 ;;		None
  9999 ;; Return value:  Size  Location     Type
 10000 ;;                  1    wreg      void 
 10001 ;; Registers used:
 10002 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10003 ;; Tracked objects:
 10004 ;;		On entry : 0/0
 10005 ;;		On exit  : 0/0
 10006 ;;		Unchanged: 0/0
 10007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10008 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10011 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10012 ;;Total ram usage:        2 bytes
 10013 ;; Hardware stack levels used: 1
 10014 ;; Hardware stack levels required when called: 4
 10015 ;; This function calls:
 10016 ;;		Nothing
 10017 ;; This function is called by:
 10018 ;;		_ADC_inti
 10019 ;; This function uses a non-reentrant model
 10020 ;;
 10021                           
 10022                           	psect	text50
 10023   0058E6                     __ptext50:
 10024                           	callstack 0
 10025   0058E6                     _configure_voltage_ref:
 10026                           	callstack 24
 10027   0058E6                     
 10028                           ;MKAL_layer/ADC/hal_adc.c: 208:       if(ADC_conf->result_format == 1){
 10029   0058E6  EE20 F005          	lfsr	2,5
 10030   0058EA  5010               	movf	configure_voltage_ref@ADC_conf^0,w,c
 10031   0058EC  26D9               	addwf	fsr2l,f,c
 10032   0058EE  5011               	movf	(configure_voltage_ref@ADC_conf+1)^0,w,c
 10033   0058F0  22DA               	addwfc	fsr2h,f,c
 10034   0058F2  A2DF               	btfss	indf2,1,c
 10035   0058F4  EF7E  F02C         	goto	u12161
 10036   0058F8  EF80  F02C         	goto	u12160
 10037   0058FC                     u12161:
 10038   0058FC  EF84  F02C         	goto	l11032
 10039   005900                     u12160:
 10040   005900                     
 10041                           ;MKAL_layer/ADC/hal_adc.c: 209:         (ADCON1bits.VCFG0 = 0);
 10042   005900  98C1               	bcf	193,4,c	;volatile
 10043                           
 10044                           ;MKAL_layer/ADC/hal_adc.c: 210:         (ADCON1bits.VCFG0 = 0);
 10045   005902  98C1               	bcf	193,4,c	;volatile
 10046                           
 10047                           ;MKAL_layer/ADC/hal_adc.c: 211:     }else if(ADC_conf->result_format == 0){
 10048   005904  EF97  F02C         	goto	l733
 10049   005908                     l11032:
 10050   005908  EE20 F005          	lfsr	2,5
 10051   00590C  5010               	movf	configure_voltage_ref@ADC_conf^0,w,c
 10052   00590E  26D9               	addwf	fsr2l,f,c
 10053   005910  5011               	movf	(configure_voltage_ref@ADC_conf+1)^0,w,c
 10054   005912  22DA               	addwfc	fsr2h,f,c
 10055   005914  B2DF               	btfsc	indf2,1,c
 10056   005916  EF8F  F02C         	goto	u12171
 10057   00591A  EF91  F02C         	goto	u12170
 10058   00591E                     u12171:
 10059   00591E  EF95  F02C         	goto	l731
 10060   005922                     u12170:
 10061   005922                     
 10062                           ;MKAL_layer/ADC/hal_adc.c: 212:         (ADCON1bits.VCFG0 = 1) ;
 10063   005922  88C1               	bsf	193,4,c	;volatile
 10064                           
 10065                           ;MKAL_layer/ADC/hal_adc.c: 213:         (ADCON1bits.VCFG1 = 1) ;
 10066   005924  8AC1               	bsf	193,5,c	;volatile
 10067                           
 10068                           ;MKAL_layer/ADC/hal_adc.c: 214:     }
 10069   005926  EF97  F02C         	goto	l733
 10070   00592A                     l731:
 10071                           
 10072                           ;MKAL_layer/ADC/hal_adc.c: 216:     {;MKAL_layer/ADC/hal_adc.c: 217:         (ADCON1bits
      +                          .VCFG0 = 0);
 10073   00592A  98C1               	bcf	193,4,c	;volatile
 10074                           
 10075                           ;MKAL_layer/ADC/hal_adc.c: 218:         (ADCON1bits.VCFG0 = 0);
 10076   00592C  98C1               	bcf	193,4,c	;volatile
 10077   00592E                     l733:
 10078   00592E  0012               	return		;funcret
 10079   005930                     __end_of_configure_voltage_ref:
 10080                           	callstack 0
 10081                           
 10082 ;; *************** function _ds1307_read_values *****************
 10083 ;; Defined at:
 10084 ;;		line 12 in file "ECU_layer/DS1307/hal_ds1307.c"
 10085 ;; Parameters:    Size  Location     Type
 10086 ;;  i2c_obj         2   26[COMRAM] PTR const struct .
 10087 ;;		 -> mssp_i2c(15), 
 10088 ;;  address_1       1   28[COMRAM] unsigned char 
 10089 ;;  return_data_    1   29[COMRAM] PTR unsigned char 
 10090 ;;		 -> ds13_data(6), 
 10091 ;;  _ack            1   30[COMRAM] PTR unsigned char 
 10092 ;;		 -> i2c_ack(1), 
 10093 ;; Auto vars:     Size  Location     Type
 10094 ;;		None
 10095 ;; Return value:  Size  Location     Type
 10096 ;;                  1    wreg      void 
 10097 ;; Registers used:
 10098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10099 ;; Tracked objects:
 10100 ;;		On entry : 0/0
 10101 ;;		On exit  : 0/0
 10102 ;;		Unchanged: 0/0
 10103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10104 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10107 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10108 ;;Total ram usage:        5 bytes
 10109 ;; Hardware stack levels used: 1
 10110 ;; Hardware stack levels required when called: 6
 10111 ;; This function calls:
 10112 ;;		_MSSP_I2C_Master_Send_Start
 10113 ;;		_MSSP_I2C_Master_Send_Stop
 10114 ;;		_MSSP_I2C_Master_read_data_in_register
 10115 ;; This function is called by:
 10116 ;;		_main
 10117 ;; This function uses a non-reentrant model
 10118 ;;
 10119                           
 10120                           	psect	text51
 10121   003B58                     __ptext51:
 10122                           	callstack 0
 10123   003B58                     _ds1307_read_values:
 10124                           	callstack 24
 10125   003B58                     
 10126                           ;ECU_layer/DS1307/hal_ds1307.c: 13:         MSSP_I2C_Master_Send_Start(i2c_obj);
 10127   003B58  C01B  F010         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_Send_Start@i2c_obj
 10128   003B5C  C01C  F011         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_Send_Start@i2c_obj+1
 10129   003B60  EC53  F02E         	call	_MSSP_I2C_Master_Send_Start	;wreg free
 10130   003B64                     
 10131                           ;ECU_layer/DS1307/hal_ds1307.c: 14:         MSSP_I2C_Master_read_data_in_register(i2c_ob
      +                          j,address_1,0x00,return_data_array++,_ack);
 10132   003B64  C01B  F014         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_read_data_in_register@i2c_obj
 10133   003B68  C01C  F015         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_read_data_in_register@i2c_obj+1
 10134   003B6C  C01D  F016         	movff	ds1307_read_values@address_1,MSSP_I2C_Master_read_data_in_register@i2c_data_1
 10135   003B70  0E00               	movlw	0
 10136   003B72  6E17               	movwf	MSSP_I2C_Master_read_data_in_register@i2c_data_2^0,c
 10137   003B74  C01E  F018         	movff	ds1307_read_values@return_data_array,MSSP_I2C_Master_read_data_in_register@ret_da
      +                          ta
 10138   003B78  C01F  F019         	movff	ds1307_read_values@_ack,MSSP_I2C_Master_read_data_in_register@_ack
 10139   003B7C  ECF1  F027         	call	_MSSP_I2C_Master_read_data_in_register	;wreg free
 10140   003B80  2A1E               	incf	ds1307_read_values@return_data_array^0,f,c
 10141   003B82                     
 10142                           ;ECU_layer/DS1307/hal_ds1307.c: 15:         MSSP_I2C_Master_Send_Stop(i2c_obj);
 10143   003B82  C01B  F010         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_Send_Stop@i2c_obj
 10144   003B86  C01C  F011         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_Send_Stop@i2c_obj+1
 10145   003B8A  EC37  F02E         	call	_MSSP_I2C_Master_Send_Stop	;wreg free
 10146   003B8E                     
 10147                           ;ECU_layer/DS1307/hal_ds1307.c: 16:         MSSP_I2C_Master_Send_Start(i2c_obj);
 10148   003B8E  C01B  F010         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_Send_Start@i2c_obj
 10149   003B92  C01C  F011         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_Send_Start@i2c_obj+1
 10150   003B96  EC53  F02E         	call	_MSSP_I2C_Master_Send_Start	;wreg free
 10151   003B9A                     
 10152                           ;ECU_layer/DS1307/hal_ds1307.c: 17:         MSSP_I2C_Master_read_data_in_register(i2c_ob
      +                          j,address_1,0x01,return_data_array++,_ack);
 10153   003B9A  C01B  F014         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_read_data_in_register@i2c_obj
 10154   003B9E  C01C  F015         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_read_data_in_register@i2c_obj+1
 10155   003BA2  C01D  F016         	movff	ds1307_read_values@address_1,MSSP_I2C_Master_read_data_in_register@i2c_data_1
 10156   003BA6  0E01               	movlw	1
 10157   003BA8  6E17               	movwf	MSSP_I2C_Master_read_data_in_register@i2c_data_2^0,c
 10158   003BAA  C01E  F018         	movff	ds1307_read_values@return_data_array,MSSP_I2C_Master_read_data_in_register@ret_da
      +                          ta
 10159   003BAE  C01F  F019         	movff	ds1307_read_values@_ack,MSSP_I2C_Master_read_data_in_register@_ack
 10160   003BB2  ECF1  F027         	call	_MSSP_I2C_Master_read_data_in_register	;wreg free
 10161   003BB6  2A1E               	incf	ds1307_read_values@return_data_array^0,f,c
 10162                           
 10163                           ;ECU_layer/DS1307/hal_ds1307.c: 18:         MSSP_I2C_Master_Send_Stop(i2c_obj);
 10164   003BB8  C01B  F010         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_Send_Stop@i2c_obj
 10165   003BBC  C01C  F011         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_Send_Stop@i2c_obj+1
 10166   003BC0  EC37  F02E         	call	_MSSP_I2C_Master_Send_Stop	;wreg free
 10167                           
 10168                           ;ECU_layer/DS1307/hal_ds1307.c: 19:         MSSP_I2C_Master_Send_Start(i2c_obj);
 10169   003BC4  C01B  F010         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_Send_Start@i2c_obj
 10170   003BC8  C01C  F011         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_Send_Start@i2c_obj+1
 10171   003BCC  EC53  F02E         	call	_MSSP_I2C_Master_Send_Start	;wreg free
 10172   003BD0                     
 10173                           ;ECU_layer/DS1307/hal_ds1307.c: 20:         MSSP_I2C_Master_read_data_in_register(i2c_ob
      +                          j,address_1,0x02,return_data_array++,_ack);
 10174   003BD0  C01B  F014         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_read_data_in_register@i2c_obj
 10175   003BD4  C01C  F015         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_read_data_in_register@i2c_obj+1
 10176   003BD8  C01D  F016         	movff	ds1307_read_values@address_1,MSSP_I2C_Master_read_data_in_register@i2c_data_1
 10177   003BDC  0E02               	movlw	2
 10178   003BDE  6E17               	movwf	MSSP_I2C_Master_read_data_in_register@i2c_data_2^0,c
 10179   003BE0  C01E  F018         	movff	ds1307_read_values@return_data_array,MSSP_I2C_Master_read_data_in_register@ret_da
      +                          ta
 10180   003BE4  C01F  F019         	movff	ds1307_read_values@_ack,MSSP_I2C_Master_read_data_in_register@_ack
 10181   003BE8  ECF1  F027         	call	_MSSP_I2C_Master_read_data_in_register	;wreg free
 10182   003BEC  2A1E               	incf	ds1307_read_values@return_data_array^0,f,c
 10183   003BEE                     
 10184                           ;ECU_layer/DS1307/hal_ds1307.c: 21:         MSSP_I2C_Master_Send_Stop(i2c_obj);
 10185   003BEE  C01B  F010         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_Send_Stop@i2c_obj
 10186   003BF2  C01C  F011         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_Send_Stop@i2c_obj+1
 10187   003BF6  EC37  F02E         	call	_MSSP_I2C_Master_Send_Stop	;wreg free
 10188   003BFA                     
 10189                           ;ECU_layer/DS1307/hal_ds1307.c: 22:         MSSP_I2C_Master_Send_Start(i2c_obj);
 10190   003BFA  C01B  F010         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_Send_Start@i2c_obj
 10191   003BFE  C01C  F011         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_Send_Start@i2c_obj+1
 10192   003C02  EC53  F02E         	call	_MSSP_I2C_Master_Send_Start	;wreg free
 10193   003C06                     
 10194                           ;ECU_layer/DS1307/hal_ds1307.c: 23:         MSSP_I2C_Master_read_data_in_register(i2c_ob
      +                          j,address_1,0x04,return_data_array++,_ack);
 10195   003C06  C01B  F014         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_read_data_in_register@i2c_obj
 10196   003C0A  C01C  F015         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_read_data_in_register@i2c_obj+1
 10197   003C0E  C01D  F016         	movff	ds1307_read_values@address_1,MSSP_I2C_Master_read_data_in_register@i2c_data_1
 10198   003C12  0E04               	movlw	4
 10199   003C14  6E17               	movwf	MSSP_I2C_Master_read_data_in_register@i2c_data_2^0,c
 10200   003C16  C01E  F018         	movff	ds1307_read_values@return_data_array,MSSP_I2C_Master_read_data_in_register@ret_da
      +                          ta
 10201   003C1A  C01F  F019         	movff	ds1307_read_values@_ack,MSSP_I2C_Master_read_data_in_register@_ack
 10202   003C1E  ECF1  F027         	call	_MSSP_I2C_Master_read_data_in_register	;wreg free
 10203   003C22  2A1E               	incf	ds1307_read_values@return_data_array^0,f,c
 10204                           
 10205                           ;ECU_layer/DS1307/hal_ds1307.c: 24:         MSSP_I2C_Master_Send_Stop(i2c_obj);
 10206   003C24  C01B  F010         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_Send_Stop@i2c_obj
 10207   003C28  C01C  F011         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_Send_Stop@i2c_obj+1
 10208   003C2C  EC37  F02E         	call	_MSSP_I2C_Master_Send_Stop	;wreg free
 10209                           
 10210                           ;ECU_layer/DS1307/hal_ds1307.c: 25:         MSSP_I2C_Master_Send_Start(i2c_obj);
 10211   003C30  C01B  F010         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_Send_Start@i2c_obj
 10212   003C34  C01C  F011         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_Send_Start@i2c_obj+1
 10213   003C38  EC53  F02E         	call	_MSSP_I2C_Master_Send_Start	;wreg free
 10214   003C3C                     
 10215                           ;ECU_layer/DS1307/hal_ds1307.c: 26:         MSSP_I2C_Master_read_data_in_register(i2c_ob
      +                          j,address_1,0x05,return_data_array++,_ack);
 10216   003C3C  C01B  F014         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_read_data_in_register@i2c_obj
 10217   003C40  C01C  F015         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_read_data_in_register@i2c_obj+1
 10218   003C44  C01D  F016         	movff	ds1307_read_values@address_1,MSSP_I2C_Master_read_data_in_register@i2c_data_1
 10219   003C48  0E05               	movlw	5
 10220   003C4A  6E17               	movwf	MSSP_I2C_Master_read_data_in_register@i2c_data_2^0,c
 10221   003C4C  C01E  F018         	movff	ds1307_read_values@return_data_array,MSSP_I2C_Master_read_data_in_register@ret_da
      +                          ta
 10222   003C50  C01F  F019         	movff	ds1307_read_values@_ack,MSSP_I2C_Master_read_data_in_register@_ack
 10223   003C54  ECF1  F027         	call	_MSSP_I2C_Master_read_data_in_register	;wreg free
 10224   003C58  2A1E               	incf	ds1307_read_values@return_data_array^0,f,c
 10225   003C5A                     
 10226                           ;ECU_layer/DS1307/hal_ds1307.c: 27:         MSSP_I2C_Master_Send_Stop(i2c_obj);
 10227   003C5A  C01B  F010         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_Send_Stop@i2c_obj
 10228   003C5E  C01C  F011         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_Send_Stop@i2c_obj+1
 10229   003C62  EC37  F02E         	call	_MSSP_I2C_Master_Send_Stop	;wreg free
 10230   003C66                     
 10231                           ;ECU_layer/DS1307/hal_ds1307.c: 28:         MSSP_I2C_Master_Send_Start(i2c_obj);
 10232   003C66  C01B  F010         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_Send_Start@i2c_obj
 10233   003C6A  C01C  F011         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_Send_Start@i2c_obj+1
 10234   003C6E  EC53  F02E         	call	_MSSP_I2C_Master_Send_Start	;wreg free
 10235   003C72                     
 10236                           ;ECU_layer/DS1307/hal_ds1307.c: 29:         MSSP_I2C_Master_read_data_in_register(i2c_ob
      +                          j,address_1,0x06,return_data_array,_ack);
 10237   003C72  C01B  F014         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_read_data_in_register@i2c_obj
 10238   003C76  C01C  F015         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_read_data_in_register@i2c_obj+1
 10239   003C7A  C01D  F016         	movff	ds1307_read_values@address_1,MSSP_I2C_Master_read_data_in_register@i2c_data_1
 10240   003C7E  0E06               	movlw	6
 10241   003C80  6E17               	movwf	MSSP_I2C_Master_read_data_in_register@i2c_data_2^0,c
 10242   003C82  C01E  F018         	movff	ds1307_read_values@return_data_array,MSSP_I2C_Master_read_data_in_register@ret_da
      +                          ta
 10243   003C86  C01F  F019         	movff	ds1307_read_values@_ack,MSSP_I2C_Master_read_data_in_register@_ack
 10244   003C8A  ECF1  F027         	call	_MSSP_I2C_Master_read_data_in_register	;wreg free
 10245   003C8E                     
 10246                           ;ECU_layer/DS1307/hal_ds1307.c: 30:         MSSP_I2C_Master_Send_Stop(i2c_obj);
 10247   003C8E  C01B  F010         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_Send_Stop@i2c_obj
 10248   003C92  C01C  F011         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_Send_Stop@i2c_obj+1
 10249   003C96  EC37  F02E         	call	_MSSP_I2C_Master_Send_Stop	;wreg free
 10250   003C9A  0012               	return		;funcret
 10251   003C9C                     __end_of_ds1307_read_values:
 10252                           	callstack 0
 10253                           
 10254 ;; *************** function _MSSP_I2C_Master_read_data_in_register *****************
 10255 ;; Defined at:
 10256 ;;		line 242 in file "MKAL_layer/I2C/hal_i2c.c"
 10257 ;; Parameters:    Size  Location     Type
 10258 ;;  i2c_obj         2   19[COMRAM] PTR const struct .
 10259 ;;		 -> mssp_i2c(15), 
 10260 ;;  i2c_data_1      1   21[COMRAM] unsigned char 
 10261 ;;  i2c_data_2      1   22[COMRAM] unsigned char 
 10262 ;;  ret_data        1   23[COMRAM] PTR unsigned char 
 10263 ;;		 -> tc74(1), ds13_data(6), 
 10264 ;;  _ack            1   24[COMRAM] PTR unsigned char 
 10265 ;;		 -> i2c_ack(1), 
 10266 ;; Auto vars:     Size  Location     Type
 10267 ;;  ret             1    0        unsigned char 
 10268 ;; Return value:  Size  Location     Type
 10269 ;;                  1    wreg      void 
 10270 ;; Registers used:
 10271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10272 ;; Tracked objects:
 10273 ;;		On entry : 0/0
 10274 ;;		On exit  : 0/0
 10275 ;;		Unchanged: 0/0
 10276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10277 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10279 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10280 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10281 ;;Total ram usage:        7 bytes
 10282 ;; Hardware stack levels used: 1
 10283 ;; Hardware stack levels required when called: 5
 10284 ;; This function calls:
 10285 ;;		_MSSP_I2C_Master_Read_Blocking
 10286 ;;		_MSSP_I2C_Master_Send_Repeated_Start
 10287 ;;		_MSSP_I2C_Master_Write_Blocking
 10288 ;; This function is called by:
 10289 ;;		_ds1307_read_values
 10290 ;;		_tc74_read_value
 10291 ;; This function uses a non-reentrant model
 10292 ;;
 10293                           
 10294                           	psect	text52
 10295   004FE2                     __ptext52:
 10296                           	callstack 0
 10297   004FE2                     _MSSP_I2C_Master_read_data_in_register:
 10298                           	callstack 24
 10299   004FE2                     
 10300                           ;MKAL_layer/I2C/hal_i2c.c: 246:     if((((void*)0) == i2c_obj) || (((void*)0) == _ack)){
 10301   004FE2  5014               	movf	MSSP_I2C_Master_read_data_in_register@i2c_obj^0,w,c
 10302   004FE4  1015               	iorwf	(MSSP_I2C_Master_read_data_in_register@i2c_obj+1)^0,w,c
 10303   004FE6  B4D8               	btfsc	status,2,c
 10304   004FE8  EFF8  F027         	goto	u13011
 10305   004FEC  EFFA  F027         	goto	u13010
 10306   004FF0                     u13011:
 10307   004FF0  EF02  F028         	goto	l11872
 10308   004FF4                     u13010:
 10309   004FF4  5019               	movf	MSSP_I2C_Master_read_data_in_register@_ack^0,w,c
 10310   004FF6  A4D8               	btfss	status,2,c
 10311   004FF8  EF00  F028         	goto	u13021
 10312   004FFC  EF02  F028         	goto	u13020
 10313   005000                     u13021:
 10314   005000  EF04  F028         	goto	l11874
 10315   005004                     u13020:
 10316   005004                     l11872:
 10317                           
 10318                           ;MKAL_layer/I2C/hal_i2c.c: 248:     }
 10319   005004  EF3A  F028         	goto	l1125
 10320   005008                     l11874:
 10321                           
 10322                           ;MKAL_layer/I2C/hal_i2c.c: 250:          MSSP_I2C_Master_Write_Blocking(i2c_obj,i2c_data
      +                          _1,_ack);
 10323   005008  C014  F010         	movff	MSSP_I2C_Master_read_data_in_register@i2c_obj,MSSP_I2C_Master_Write_Blocking@i2c_
      +                          obj
 10324   00500C  C015  F011         	movff	MSSP_I2C_Master_read_data_in_register@i2c_obj+1,MSSP_I2C_Master_Write_Blocking@i2
      +                          c_obj+1
 10325   005010  C016  F012         	movff	MSSP_I2C_Master_read_data_in_register@i2c_data_1,MSSP_I2C_Master_Write_Blocking@i
      +                          2c_data
 10326   005014  C019  F013         	movff	MSSP_I2C_Master_read_data_in_register@_ack,MSSP_I2C_Master_Write_Blocking@_ack
 10327   005018  EC4A  F02B         	call	_MSSP_I2C_Master_Write_Blocking	;wreg free
 10328                           
 10329                           ;MKAL_layer/I2C/hal_i2c.c: 251:          MSSP_I2C_Master_Write_Blocking(i2c_obj,i2c_data
      +                          _2,_ack);
 10330   00501C  C014  F010         	movff	MSSP_I2C_Master_read_data_in_register@i2c_obj,MSSP_I2C_Master_Write_Blocking@i2c_
      +                          obj
 10331   005020  C015  F011         	movff	MSSP_I2C_Master_read_data_in_register@i2c_obj+1,MSSP_I2C_Master_Write_Blocking@i2
      +                          c_obj+1
 10332   005024  C017  F012         	movff	MSSP_I2C_Master_read_data_in_register@i2c_data_2,MSSP_I2C_Master_Write_Blocking@i
      +                          2c_data
 10333   005028  C019  F013         	movff	MSSP_I2C_Master_read_data_in_register@_ack,MSSP_I2C_Master_Write_Blocking@_ack
 10334   00502C  EC4A  F02B         	call	_MSSP_I2C_Master_Write_Blocking	;wreg free
 10335   005030                     
 10336                           ;MKAL_layer/I2C/hal_i2c.c: 252:          MSSP_I2C_Master_Send_Repeated_Start(i2c_obj);
 10337   005030  C014  F010         	movff	MSSP_I2C_Master_read_data_in_register@i2c_obj,MSSP_I2C_Master_Send_Repeated_Start
      +                          @i2c_obj
 10338   005034  C015  F011         	movff	MSSP_I2C_Master_read_data_in_register@i2c_obj+1,MSSP_I2C_Master_Send_Repeated_Sta
      +                          rt@i2c_obj+1
 10339   005038  EC97  F02F         	call	_MSSP_I2C_Master_Send_Repeated_Start	;wreg free
 10340   00503C                     
 10341                           ;MKAL_layer/I2C/hal_i2c.c: 253:          MSSP_I2C_Master_Write_Blocking(i2c_obj,(i2c_dat
      +                          a_1 + 0x01),_ack);
 10342   00503C  C014  F010         	movff	MSSP_I2C_Master_read_data_in_register@i2c_obj,MSSP_I2C_Master_Write_Blocking@i2c_
      +                          obj
 10343   005040  C015  F011         	movff	MSSP_I2C_Master_read_data_in_register@i2c_obj+1,MSSP_I2C_Master_Write_Blocking@i2
      +                          c_obj+1
 10344   005044  2816               	incf	MSSP_I2C_Master_read_data_in_register@i2c_data_1^0,w,c
 10345   005046  6E12               	movwf	MSSP_I2C_Master_Write_Blocking@i2c_data^0,c
 10346   005048  C019  F013         	movff	MSSP_I2C_Master_read_data_in_register@_ack,MSSP_I2C_Master_Write_Blocking@_ack
 10347   00504C  EC4A  F02B         	call	_MSSP_I2C_Master_Write_Blocking	;wreg free
 10348   005050                     
 10349                           ;MKAL_layer/I2C/hal_i2c.c: 254:          MSSP_I2C_Master_Read_Blocking(i2c_obj,1,ret_dat
      +                          a);
 10350   005050  C014  F010         	movff	MSSP_I2C_Master_read_data_in_register@i2c_obj,MSSP_I2C_Master_Read_Blocking@i2c_o
      +                          bj
 10351   005054  C015  F011         	movff	MSSP_I2C_Master_read_data_in_register@i2c_obj+1,MSSP_I2C_Master_Read_Blocking@i2c
      +                          _obj+1
 10352   005058  0E01               	movlw	1
 10353   00505A  6E12               	movwf	MSSP_I2C_Master_Read_Blocking@ack^0,c
 10354   00505C  C018  F013         	movff	MSSP_I2C_Master_read_data_in_register@ret_data,MSSP_I2C_Master_Read_Blocking@i2c_
      +                          data
 10355   005060  ECC8  F028         	call	_MSSP_I2C_Master_Read_Blocking	;wreg free
 10356   005064                     
 10357                           ;MKAL_layer/I2C/hal_i2c.c: 255:          _delay((unsigned long)((10)*(8000000UL/4000.0))
      +                          );
 10358   005064  0E1A               	movlw	26
 10359   005066  6E1A               	movwf	??_MSSP_I2C_Master_read_data_in_register^0,c
 10360   005068  0EF8               	movlw	248
 10361   00506A                     u15587:
 10362   00506A  2EE8               	decfsz	wreg,f,c
 10363   00506C  D7FE               	bra	u15587
 10364   00506E  2E1A               	decfsz	??_MSSP_I2C_Master_read_data_in_register^0,f,c
 10365   005070  D7FC               	bra	u15587
 10366   005072  D000               	nop2	
 10367   005074                     l1125:
 10368   005074  0012               	return		;funcret
 10369   005076                     __end_of_MSSP_I2C_Master_read_data_in_register:
 10370                           	callstack 0
 10371                           
 10372 ;; *************** function _MSSP_I2C_Master_Send_Repeated_Start *****************
 10373 ;; Defined at:
 10374 ;;		line 124 in file "MKAL_layer/I2C/hal_i2c.c"
 10375 ;; Parameters:    Size  Location     Type
 10376 ;;  i2c_obj         2   15[COMRAM] PTR const struct .
 10377 ;;		 -> mssp_i2c(15), 
 10378 ;; Auto vars:     Size  Location     Type
 10379 ;;  ret             1    0        unsigned char 
 10380 ;; Return value:  Size  Location     Type
 10381 ;;                  1    wreg      unsigned char 
 10382 ;; Registers used:
 10383 ;;		wreg, status,2, status,0
 10384 ;; Tracked objects:
 10385 ;;		On entry : 0/0
 10386 ;;		On exit  : 0/0
 10387 ;;		Unchanged: 0/0
 10388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10389 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10392 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10393 ;;Total ram usage:        2 bytes
 10394 ;; Hardware stack levels used: 1
 10395 ;; Hardware stack levels required when called: 4
 10396 ;; This function calls:
 10397 ;;		Nothing
 10398 ;; This function is called by:
 10399 ;;		_MSSP_I2C_Master_read_data_in_register
 10400 ;; This function uses a non-reentrant model
 10401 ;;
 10402                           
 10403                           	psect	text53
 10404   005F2E                     __ptext53:
 10405                           	callstack 0
 10406   005F2E                     _MSSP_I2C_Master_Send_Repeated_Start:
 10407                           	callstack 24
 10408   005F2E                     
 10409                           ;MKAL_layer/I2C/hal_i2c.c: 126:     if(((void*)0) == i2c_obj){
 10410   005F2E  5010               	movf	MSSP_I2C_Master_Send_Repeated_Start@i2c_obj^0,w,c
 10411   005F30  1011               	iorwf	(MSSP_I2C_Master_Send_Repeated_Start@i2c_obj+1)^0,w,c
 10412   005F32  A4D8               	btfss	status,2,c
 10413   005F34  EF9E  F02F         	goto	u12181
 10414   005F38  EFA0  F02F         	goto	u12180
 10415   005F3C                     u12181:
 10416   005F3C  EFA2  F02F         	goto	l1057
 10417   005F40                     u12180:
 10418   005F40                     
 10419                           ;MKAL_layer/I2C/hal_i2c.c: 128:     }
 10420   005F40  EFAB  F02F         	goto	l1062
 10421   005F44                     l1057:
 10422                           
 10423                           ;MKAL_layer/I2C/hal_i2c.c: 131:         SSPCON2bits.RSEN = 1;
 10424   005F44  82C5               	bsf	197,1,c	;volatile
 10425   005F46                     l1059:
 10426   005F46  B2C5               	btfsc	197,1,c	;volatile
 10427   005F48  EFA8  F02F         	goto	u12191
 10428   005F4C  EFAA  F02F         	goto	u12190
 10429   005F50                     u12191:
 10430   005F50  EFA3  F02F         	goto	l1059
 10431   005F54                     u12190:
 10432   005F54                     
 10433                           ;MKAL_layer/I2C/hal_i2c.c: 135:         PIR1bits.SSPIF = 0;
 10434   005F54  969E               	bcf	158,3,c	;volatile
 10435   005F56                     l1062:
 10436   005F56  0012               	return		;funcret
 10437   005F58                     __end_of_MSSP_I2C_Master_Send_Repeated_Start:
 10438                           	callstack 0
 10439                           
 10440 ;; *************** function _MSSP_I2C_Master_Read_Blocking *****************
 10441 ;; Defined at:
 10442 ;;		line 199 in file "MKAL_layer/I2C/hal_i2c.c"
 10443 ;; Parameters:    Size  Location     Type
 10444 ;;  i2c_obj         2   15[COMRAM] PTR const struct .
 10445 ;;		 -> read_byte_24c02c@mssp_i2c(2), mssp_i2c(15), 
 10446 ;;  ack             1   17[COMRAM] unsigned char 
 10447 ;;  i2c_data        1   18[COMRAM] PTR unsigned char 
 10448 ;;		 -> tc74(1), ds13_data(6), 
 10449 ;; Auto vars:     Size  Location     Type
 10450 ;;  ret             1    0        unsigned char 
 10451 ;; Return value:  Size  Location     Type
 10452 ;;                  1    wreg      unsigned char 
 10453 ;; Registers used:
 10454 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10455 ;; Tracked objects:
 10456 ;;		On entry : 0/0
 10457 ;;		On exit  : 0/0
 10458 ;;		Unchanged: 0/0
 10459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10460 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10463 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10464 ;;Total ram usage:        4 bytes
 10465 ;; Hardware stack levels used: 1
 10466 ;; Hardware stack levels required when called: 4
 10467 ;; This function calls:
 10468 ;;		Nothing
 10469 ;; This function is called by:
 10470 ;;		_MSSP_I2C_Master_read_data_in_register
 10471 ;;		_read_byte_24c02c
 10472 ;; This function uses a non-reentrant model
 10473 ;;
 10474                           
 10475                           	psect	text54
 10476   005190                     __ptext54:
 10477                           	callstack 0
 10478   005190                     _MSSP_I2C_Master_Read_Blocking:
 10479                           	callstack 24
 10480   005190                     
 10481                           ;MKAL_layer/I2C/hal_i2c.c: 201:     if((((void*)0) == i2c_obj) || (((void*)0) == i2c_dat
      +                          a)){
 10482   005190  5010               	movf	MSSP_I2C_Master_Read_Blocking@i2c_obj^0,w,c
 10483   005192  1011               	iorwf	(MSSP_I2C_Master_Read_Blocking@i2c_obj+1)^0,w,c
 10484   005194  B4D8               	btfsc	status,2,c
 10485   005196  EFCF  F028         	goto	u12061
 10486   00519A  EFD1  F028         	goto	u12060
 10487   00519E                     u12061:
 10488   00519E  EFD9  F028         	goto	l10958
 10489   0051A2                     u12060:
 10490   0051A2  5013               	movf	MSSP_I2C_Master_Read_Blocking@i2c_data^0,w,c
 10491   0051A4  A4D8               	btfss	status,2,c
 10492   0051A6  EFD7  F028         	goto	u12071
 10493   0051AA  EFD9  F028         	goto	u12070
 10494   0051AE                     u12071:
 10495   0051AE  EFDB  F028         	goto	l1094
 10496   0051B2                     u12070:
 10497   0051B2                     l10958:
 10498                           
 10499                           ;MKAL_layer/I2C/hal_i2c.c: 203:     }
 10500   0051B2  EF0C  F029         	goto	l1111
 10501   0051B6                     l1094:
 10502                           
 10503                           ;MKAL_layer/I2C/hal_i2c.c: 206:         (SSPCON2bits.RCEN = 1);
 10504   0051B6  86C5               	bsf	197,3,c	;volatile
 10505   0051B8                     l1098:
 10506   0051B8  A0C7               	btfss	199,0,c	;volatile
 10507   0051BA  EFE1  F028         	goto	u12081
 10508   0051BE  EFE3  F028         	goto	u12080
 10509   0051C2                     u12081:
 10510   0051C2  EFDC  F028         	goto	l1098
 10511   0051C6                     u12080:
 10512   0051C6                     
 10513                           ;MKAL_layer/I2C/hal_i2c.c: 210:         *i2c_data = SSPBUF;
 10514   0051C6  5013               	movf	MSSP_I2C_Master_Read_Blocking@i2c_data^0,w,c
 10515   0051C8  6ED9               	movwf	fsr2l,c
 10516   0051CA  6ADA               	clrf	fsr2h,c
 10517   0051CC  CFC9 FFDF          	movff	4041,indf2	;volatile
 10518   0051D0                     
 10519                           ;MKAL_layer/I2C/hal_i2c.c: 212:         if(0 == ack){
 10520   0051D0  5012               	movf	MSSP_I2C_Master_Read_Blocking@ack^0,w,c
 10521   0051D2  A4D8               	btfss	status,2,c
 10522   0051D4  EFEE  F028         	goto	u12091
 10523   0051D8  EFF0  F028         	goto	u12090
 10524   0051DC                     u12091:
 10525   0051DC  EFFB  F028         	goto	l10966
 10526   0051E0                     u12090:
 10527   0051E0                     
 10528                           ;MKAL_layer/I2C/hal_i2c.c: 213:             SSPCON2bits.ACKDT = 0;
 10529   0051E0  9AC5               	bcf	197,5,c	;volatile
 10530                           
 10531                           ;MKAL_layer/I2C/hal_i2c.c: 215:             SSPCON2bits.ACKEN = 1;
 10532   0051E2  88C5               	bsf	197,4,c	;volatile
 10533   0051E4                     l1102:
 10534   0051E4  B8C5               	btfsc	197,4,c	;volatile
 10535   0051E6  EFF7  F028         	goto	u12101
 10536   0051EA  EFF9  F028         	goto	u12100
 10537   0051EE                     u12101:
 10538   0051EE  EFF2  F028         	goto	l1102
 10539   0051F2                     u12100:
 10540   0051F2  EF0C  F029         	goto	l10970
 10541   0051F6                     l10966:
 10542   0051F6  0412               	decf	MSSP_I2C_Master_Read_Blocking@ack^0,w,c
 10543   0051F8  A4D8               	btfss	status,2,c
 10544   0051FA  EF01  F029         	goto	u12111
 10545   0051FE  EF03  F029         	goto	u12110
 10546   005202                     u12111:
 10547   005202  EF0C  F029         	goto	l10970
 10548   005206                     u12110:
 10549   005206                     
 10550                           ;MKAL_layer/I2C/hal_i2c.c: 219:             SSPCON2bits.ACKDT = 1;
 10551   005206  8AC5               	bsf	197,5,c	;volatile
 10552                           
 10553                           ;MKAL_layer/I2C/hal_i2c.c: 221:             SSPCON2bits.ACKEN = 1;
 10554   005208  88C5               	bsf	197,4,c	;volatile
 10555   00520A                     l1107:
 10556   00520A  B8C5               	btfsc	197,4,c	;volatile
 10557   00520C  EF0A  F029         	goto	u12121
 10558   005210  EF0C  F029         	goto	u12120
 10559   005214                     u12121:
 10560   005214  EF05  F029         	goto	l1107
 10561   005218                     u12120:
 10562   005218                     l10970:
 10563   005218                     l1111:
 10564   005218  0012               	return		;funcret
 10565   00521A                     __end_of_MSSP_I2C_Master_Read_Blocking:
 10566                           	callstack 0
 10567                           
 10568 ;; *************** function _convert_uint8_to_string *****************
 10569 ;; Defined at:
 10570 ;;		line 397 in file "ECU_layer/chr_lcd/ecu_chr_lcd.c"
 10571 ;; Parameters:    Size  Location     Type
 10572 ;;  value           1    wreg     unsigned char 
 10573 ;;  str             1   59[COMRAM] PTR unsigned char 
 10574 ;;		 -> addd(1), 
 10575 ;; Auto vars:     Size  Location     Type
 10576 ;;  value           1   60[COMRAM] unsigned char 
 10577 ;;  ret             1   61[COMRAM] unsigned char 
 10578 ;; Return value:  Size  Location     Type
 10579 ;;                  1    wreg      unsigned char 
 10580 ;; Registers used:
 10581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10582 ;; Tracked objects:
 10583 ;;		On entry : 0/0
 10584 ;;		On exit  : 0/0
 10585 ;;		Unchanged: 0/0
 10586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10587 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10588 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10590 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10591 ;;Total ram usage:        3 bytes
 10592 ;; Hardware stack levels used: 1
 10593 ;; Hardware stack levels required when called: 9
 10594 ;; This function calls:
 10595 ;;		_memset
 10596 ;;		_sprintf
 10597 ;; This function is called by:
 10598 ;;		_main
 10599 ;; This function uses a non-reentrant model
 10600 ;;
 10601                           
 10602                           	psect	text55
 10603   005804                     __ptext55:
 10604                           	callstack 0
 10605   005804                     _convert_uint8_to_string:
 10606                           	callstack 21
 10607                           
 10608                           ;incstack = 0
 10609                           ;convert_uint8_to_string@value stored from wreg
 10610   005804  6E3D               	movwf	convert_uint8_to_string@value^0,c
 10611   005806                     
 10612                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 398:     Std_ReturnType ret = (Std_ReturnType)0x01;
 10613   005806  0E01               	movlw	1
 10614   005808  6E3E               	movwf	convert_uint8_to_string@ret^0,c
 10615   00580A                     
 10616                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 399:     if(((void*)0) == str){
 10617   00580A  503C               	movf	convert_uint8_to_string@str^0,w,c
 10618   00580C  A4D8               	btfss	status,2,c
 10619   00580E  EF0B  F02C         	goto	u13411
 10620   005812  EF0D  F02C         	goto	u13410
 10621   005816                     u13411:
 10622   005816  EF11  F02C         	goto	l12200
 10623   00581A                     u13410:
 10624   00581A                     
 10625                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 400:         ret = 0;
 10626   00581A  0E00               	movlw	0
 10627   00581C  6E3E               	movwf	convert_uint8_to_string@ret^0,c
 10628                           
 10629                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 401:     }
 10630   00581E  EF26  F02C         	goto	l12204
 10631   005822                     l12200:
 10632                           
 10633                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 403:         memset((char *)str, '\0', 4);
 10634   005822  C03C  F010         	movff	convert_uint8_to_string@str,memset@dest
 10635   005826  0E00               	movlw	0
 10636   005828  6E12               	movwf	(memset@c+1)^0,c
 10637   00582A  0E00               	movlw	0
 10638   00582C  6E11               	movwf	memset@c^0,c
 10639   00582E  0E00               	movlw	0
 10640   005830  6E14               	movwf	(memset@n+1)^0,c
 10641   005832  0E04               	movlw	4
 10642   005834  6E13               	movwf	memset@n^0,c
 10643   005836  ECF2  F02E         	call	_memset	;wreg free
 10644   00583A                     
 10645                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 404:         sprintf(str, "%i", value);
 10646   00583A  C03C  F029         	movff	convert_uint8_to_string@str,sprintf@s
 10647   00583E  0E36               	movlw	low STR_4
 10648   005840  6E2A               	movwf	sprintf@fmt^0,c
 10649   005842  C03D  F02B         	movff	convert_uint8_to_string@value,?_sprintf+2
 10650   005846  6A2C               	clrf	(?_sprintf+3)^0,c
 10651   005848  ECA6  F02E         	call	_sprintf	;wreg free
 10652   00584C                     l12204:
 10653                           
 10654                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 406:     return ret;
 10655   00584C  503E               	movf	convert_uint8_to_string@ret^0,w,c
 10656   00584E  0012               	return		;funcret
 10657   005850                     __end_of_convert_uint8_to_string:
 10658                           	callstack 0
 10659                           
 10660 ;; *************** function _sprintf *****************
 10661 ;; Defined at:
 10662 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
 10663 ;; Parameters:    Size  Location     Type
 10664 ;;  s               1   40[COMRAM] PTR unsigned char 
 10665 ;;		 -> convert_uint16_to_string@Temp_String(6), addd(1), 
 10666 ;;  fmt             1   41[COMRAM] PTR const unsigned char 
 10667 ;;		 -> STR_6(3), STR_5(3), STR_4(3), 
 10668 ;; Auto vars:     Size  Location     Type
 10669 ;;  f              12   47[COMRAM] struct _IO_FILE
 10670 ;;  ret             2    0        int 
 10671 ;;  ap              1   46[COMRAM] PTR void [1]
 10672 ;;		 -> ?_sprintf(2), 
 10673 ;; Return value:  Size  Location     Type
 10674 ;;                  2   40[COMRAM] int 
 10675 ;; Registers used:
 10676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10677 ;; Tracked objects:
 10678 ;;		On entry : 0/0
 10679 ;;		On exit  : 0/0
 10680 ;;		Unchanged: 0/0
 10681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10682 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10683 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10685 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10686 ;;Total ram usage:       19 bytes
 10687 ;; Hardware stack levels used: 1
 10688 ;; Hardware stack levels required when called: 8
 10689 ;; This function calls:
 10690 ;;		_vfprintf
 10691 ;; This function is called by:
 10692 ;;		_convert_uint8_to_string
 10693 ;;		_convert_uint16_to_string
 10694 ;;		_convert_uint32_to_string
 10695 ;; This function uses a non-reentrant model
 10696 ;;
 10697                           
 10698                           	psect	text56
 10699   005D4C                     __ptext56:
 10700                           	callstack 0
 10701   005D4C                     _sprintf:
 10702                           	callstack 21
 10703   005D4C  0E2B               	movlw	low (?_sprintf+2)
 10704   005D4E  6E2F               	movwf	sprintf@ap^0,c
 10705   005D50  C029  F030         	movff	sprintf@s,sprintf@f
 10706   005D54  0E00               	movlw	0
 10707   005D56  6E34               	movwf	(sprintf@f+4)^0,c
 10708   005D58  0E00               	movlw	0
 10709   005D5A  6E33               	movwf	(sprintf@f+3)^0,c
 10710   005D5C  0E00               	movlw	0
 10711   005D5E  6E3B               	movwf	(sprintf@f+11)^0,c
 10712   005D60  0E00               	movlw	0
 10713   005D62  6E3A               	movwf	(sprintf@f+10)^0,c
 10714   005D64  0E30               	movlw	low sprintf@f
 10715   005D66  6E25               	movwf	vfprintf@fp^0,c
 10716   005D68  C02A  F026         	movff	sprintf@fmt,vfprintf@fmt
 10717   005D6C  0E2F               	movlw	low sprintf@ap
 10718   005D6E  6E27               	movwf	vfprintf@ap^0,c
 10719   005D70  EC63  F02D         	call	_vfprintf	;wreg free
 10720   005D74  5029               	movf	sprintf@s^0,w,c
 10721   005D76  2433               	addwf	(sprintf@f+3)^0,w,c
 10722   005D78  6ED9               	movwf	fsr2l,c
 10723   005D7A  6ADA               	clrf	fsr2h,c
 10724   005D7C  6ADF               	clrf	indf2,c
 10725   005D7E  0012               	return		;funcret
 10726   005D80                     __end_of_sprintf:
 10727                           	callstack 0
 10728                           
 10729 ;; *************** function _vfprintf *****************
 10730 ;; Defined at:
 10731 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
 10732 ;; Parameters:    Size  Location     Type
 10733 ;;  fp              1   36[COMRAM] PTR struct _IO_FILE
 10734 ;;		 -> sprintf@f(12), 
 10735 ;;  fmt             1   37[COMRAM] PTR const unsigned char 
 10736 ;;		 -> STR_6(3), STR_5(3), STR_4(3), 
 10737 ;;  ap              1   38[COMRAM] PTR PTR void 
 10738 ;;		 -> sprintf@ap(1), 
 10739 ;; Auto vars:     Size  Location     Type
 10740 ;;  cfmt            1   39[COMRAM] PTR unsigned char 
 10741 ;;		 -> STR_6(3), STR_5(3), STR_4(3), 
 10742 ;; Return value:  Size  Location     Type
 10743 ;;                  2   36[COMRAM] int 
 10744 ;; Registers used:
 10745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10746 ;; Tracked objects:
 10747 ;;		On entry : 0/0
 10748 ;;		On exit  : 0/0
 10749 ;;		Unchanged: 0/0
 10750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10751 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10752 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10754 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10755 ;;Total ram usage:        4 bytes
 10756 ;; Hardware stack levels used: 1
 10757 ;; Hardware stack levels required when called: 7
 10758 ;; This function calls:
 10759 ;;		_vfpfcnvrt
 10760 ;; This function is called by:
 10761 ;;		_sprintf
 10762 ;; This function uses a non-reentrant model
 10763 ;;
 10764                           
 10765                           	psect	text57
 10766   005AC6                     __ptext57:
 10767                           	callstack 0
 10768   005AC6                     _vfprintf:
 10769                           	callstack 21
 10770   005AC6                     
 10771                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
 10772   005AC6  C026  F028         	movff	vfprintf@fmt,vfprintf@cfmt
 10773                           
 10774                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 10775   005ACA  EF6F  F02D         	goto	l11386
 10776   005ACE                     l11384:
 10777                           
 10778                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
 10779   005ACE  C025  F01A         	movff	vfprintf@fp,vfpfcnvrt@fp
 10780   005AD2  0E28               	movlw	low vfprintf@cfmt
 10781   005AD4  6E1B               	movwf	vfpfcnvrt@fmt^0,c
 10782   005AD6  C027  F01C         	movff	vfprintf@ap,vfpfcnvrt@ap
 10783   005ADA  EC36  F019         	call	_vfpfcnvrt	;wreg free
 10784   005ADE                     l11386:
 10785                           
 10786                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 10787   005ADE  C028  FFF6         	movff	vfprintf@cfmt,tblptrl
 10788   005AE2                     	if	1	;There is more than 1 active tblptr byte
 10789   005AE2  0E10               	movlw	high __smallconst
 10790   005AE4  6EF7               	movwf	tblptrh,c
 10791   005AE6                     	endif
 10792   005AE6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10793   005AE6  6AF8               	clrf	tblptru,c
 10794   005AE8                     	endif
 10795   005AE8                     	if	0	;tblptru may be non-zero
 10796   005AE8                     	endif
 10797   005AE8  0008               	tblrd		*
 10798   005AEA  50F5               	movf	tablat,w,c
 10799   005AEC  0900               	iorlw	0
 10800   005AEE  A4D8               	btfss	status,2,c
 10801   005AF0  EF7C  F02D         	goto	u12571
 10802   005AF4  EF7E  F02D         	goto	u12570
 10803   005AF8                     u12571:
 10804   005AF8  EF67  F02D         	goto	l11384
 10805   005AFC                     u12570:
 10806   005AFC                     
 10807                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
 10808   005AFC  0E00               	movlw	0
 10809   005AFE  6E26               	movwf	(?_vfprintf+1)^0,c
 10810   005B00  0E00               	movlw	0
 10811   005B02  6E25               	movwf	?_vfprintf^0,c
 10812   005B04  0012               	return		;funcret
 10813   005B06                     __end_of_vfprintf:
 10814                           	callstack 0
 10815                           
 10816 ;; *************** function _vfpfcnvrt *****************
 10817 ;; Defined at:
 10818 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
 10819 ;; Parameters:    Size  Location     Type
 10820 ;;  fp              1   25[COMRAM] PTR struct _IO_FILE
 10821 ;;		 -> sprintf@f(12), 
 10822 ;;  fmt             1   26[COMRAM] PTR PTR unsigned char 
 10823 ;;		 -> vfprintf@cfmt(1), 
 10824 ;;  ap              1   27[COMRAM] PTR PTR void 
 10825 ;;		 -> sprintf@ap(1), 
 10826 ;; Auto vars:     Size  Location     Type
 10827 ;;  convarg         4   31[COMRAM] struct .
 10828 ;;  c               1   35[COMRAM] unsigned char 
 10829 ;;  cp              1   30[COMRAM] PTR unsigned char 
 10830 ;;		 -> STR_6(3), STR_5(3), STR_4(3), 
 10831 ;;  done            1   29[COMRAM] _Bool 
 10832 ;; Return value:  Size  Location     Type
 10833 ;;                  1    wreg      void 
 10834 ;; Registers used:
 10835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10836 ;; Tracked objects:
 10837 ;;		On entry : 0/0
 10838 ;;		On exit  : 0/0
 10839 ;;		Unchanged: 0/0
 10840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10841 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10842 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10843 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10844 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10845 ;;Total ram usage:       11 bytes
 10846 ;; Hardware stack levels used: 1
 10847 ;; Hardware stack levels required when called: 6
 10848 ;; This function calls:
 10849 ;;		___awdiv
 10850 ;;		___awmod
 10851 ;;		_abs
 10852 ;;		_fputc
 10853 ;; This function is called by:
 10854 ;;		_vfprintf
 10855 ;; This function uses a non-reentrant model
 10856 ;;
 10857                           
 10858                           	psect	text58
 10859   00326C                     __ptext58:
 10860                           	callstack 0
 10861   00326C                     _vfpfcnvrt:
 10862                           	callstack 21
 10863   00326C                     
 10864                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
 10865   00326C  501B               	movf	vfpfcnvrt@fmt^0,w,c
 10866   00326E  6ED9               	movwf	fsr2l,c
 10867   003270  6ADA               	clrf	fsr2h,c
 10868   003272  CFDF FFF6          	movff	indf2,tblptrl
 10869   003276                     	if	1	;There is more than 1 active tblptr byte
 10870   003276  0E10               	movlw	high __smallconst
 10871   003278  6EF7               	movwf	tblptrh,c
 10872   00327A                     	endif
 10873   00327A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10874   00327A  6AF8               	clrf	tblptru,c
 10875   00327C                     	endif
 10876   00327C                     	if	0	;tblptru may be non-zero
 10877   00327C                     	endif
 10878   00327C  0008               	tblrd		*
 10879   00327E  50F5               	movf	tablat,w,c
 10880   003280  0A25               	xorlw	37
 10881   003282  A4D8               	btfss	status,2,c
 10882   003284  EF46  F019         	goto	u11921
 10883   003288  EF48  F019         	goto	u11920
 10884   00328C                     u11921:
 10885   00328C  EF0A  F01A         	goto	l10930
 10886   003290                     u11920:
 10887   003290                     
 10888                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
 10889   003290  501B               	movf	vfpfcnvrt@fmt^0,w,c
 10890   003292  6ED9               	movwf	fsr2l,c
 10891   003294  6ADA               	clrf	fsr2h,c
 10892   003296  2ADF               	incf	indf2,f,c
 10893   003298                     
 10894                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
 10895   003298  0E00               	movlw	0
 10896   00329A  0100               	movlb	0	; () banked
 10897   00329C  6F81               	movwf	(_width+1)& (0+255),b
 10898   00329E  0E00               	movlw	0
 10899   0032A0  6F80               	movwf	_width& (0+255),b
 10900   0032A2  C080  F0BC         	movff	_width,_flags
 10901   0032A6                     
 10902                           ; BSR set to: 0
 10903                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
 10904   0032A6  6982               	setf	_prec& (0+255),b
 10905   0032A8  6983               	setf	(_prec+1)& (0+255),b
 10906   0032AA                     
 10907                           ; BSR set to: 0
 10908                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
 10909   0032AA  501B               	movf	vfpfcnvrt@fmt^0,w,c
 10910   0032AC  6ED9               	movwf	fsr2l,c
 10911   0032AE  6ADA               	clrf	fsr2h,c
 10912   0032B0  50DF               	movf	indf2,w,c
 10913   0032B2  6E1F               	movwf	vfpfcnvrt@cp^0,c
 10914   0032B4                     
 10915                           ; BSR set to: 0
 10916                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
 10917   0032B4  C01F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10918   0032B8                     	if	1	;There is more than 1 active tblptr byte
 10919   0032B8  0E10               	movlw	high __smallconst
 10920   0032BA  6EF7               	movwf	tblptrh,c
 10921   0032BC                     	endif
 10922   0032BC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10923   0032BC  6AF8               	clrf	tblptru,c
 10924   0032BE                     	endif
 10925   0032BE                     	if	0	;tblptru may be non-zero
 10926   0032BE                     	endif
 10927   0032BE  0008               	tblrd		*
 10928   0032C0  50F5               	movf	tablat,w,c
 10929   0032C2  0A64               	xorlw	100
 10930   0032C4  B4D8               	btfsc	status,2,c
 10931   0032C6  EF67  F019         	goto	u11931
 10932   0032CA  EF69  F019         	goto	u11930
 10933   0032CE                     u11931:
 10934   0032CE  EF78  F019         	goto	l10900
 10935   0032D2                     u11930:
 10936   0032D2                     
 10937                           ; BSR set to: 0
 10938   0032D2  C01F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 10939   0032D6                     	if	1	;There is more than 1 active tblptr byte
 10940   0032D6  0E10               	movlw	high __smallconst
 10941   0032D8  6EF7               	movwf	tblptrh,c
 10942   0032DA                     	endif
 10943   0032DA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10944   0032DA  6AF8               	clrf	tblptru,c
 10945   0032DC                     	endif
 10946   0032DC                     	if	0	;tblptru may be non-zero
 10947   0032DC                     	endif
 10948   0032DC  0008               	tblrd		*
 10949   0032DE  50F5               	movf	tablat,w,c
 10950   0032E0  0A69               	xorlw	105
 10951   0032E2  A4D8               	btfss	status,2,c
 10952   0032E4  EF76  F019         	goto	u11941
 10953   0032E8  EF78  F019         	goto	u11940
 10954   0032EC                     u11941:
 10955   0032EC  EF04  F01A         	goto	l10926
 10956   0032F0                     u11940:
 10957   0032F0                     l10900:
 10958                           
 10959                           ; BSR set to: 0
 10960                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
 10961   0032F0  501C               	movf	vfpfcnvrt@ap^0,w,c
 10962   0032F2  6ED9               	movwf	fsr2l,c
 10963   0032F4  6ADA               	clrf	fsr2h,c
 10964   0032F6  0E02               	movlw	2
 10965   0032F8  26DF               	addwf	indf2,f,c
 10966   0032FA  5CDF               	subwf	indf2,w,c
 10967   0032FC  6ED9               	movwf	fsr2l,c
 10968   0032FE  6ADA               	clrf	fsr2h,c
 10969   003300  CFDE F020          	movff	postinc2,vfpfcnvrt@convarg
 10970   003304  CFDE F021          	movff	postinc2,vfpfcnvrt@convarg+1
 10971   003308                     
 10972                           ; BSR set to: 0
 10973                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
 10974   003308  501B               	movf	vfpfcnvrt@fmt^0,w,c
 10975   00330A  6ED9               	movwf	fsr2l,c
 10976   00330C  6ADA               	clrf	fsr2h,c
 10977   00330E  281F               	incf	vfpfcnvrt@cp^0,w,c
 10978   003310  6EDF               	movwf	indf2,c
 10979   003312                     
 10980                           ; BSR set to: 0
 10981                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
 10982   003312  0E20               	movlw	32
 10983   003314  6E24               	movwf	vfpfcnvrt@c^0,c
 10984                           
 10985                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
 10986   003316  BE21               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
 10987   003318  EF90  F019         	goto	u11951
 10988   00331C  EF93  F019         	goto	u11950
 10989   003320                     u11951:
 10990   003320  0E01               	movlw	1
 10991   003322  EF94  F019         	goto	u11960
 10992   003326                     u11950:
 10993   003326  0E00               	movlw	0
 10994   003328                     u11960:
 10995   003328  6E1E               	movwf	vfpfcnvrt@done^0,c
 10996   00332A                     l10906:
 10997                           
 10998                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
 10999   00332A  0624               	decf	vfpfcnvrt@c^0,f,c
 11000   00332C  0E6B               	movlw	low _dbuf
 11001   00332E  2424               	addwf	vfpfcnvrt@c^0,w,c
 11002   003330  6ED9               	movwf	fsr2l,c
 11003   003332  6ADA               	clrf	fsr2h,c
 11004   003334  0E01               	movlw	high _dbuf
 11005   003336  22DA               	addwfc	fsr2h,f,c
 11006   003338  C020  F010         	movff	vfpfcnvrt@convarg,___awmod@dividend
 11007   00333C  C021  F011         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
 11008   003340  0E00               	movlw	0
 11009   003342  6E13               	movwf	(___awmod@divisor+1)^0,c
 11010   003344  0E0A               	movlw	10
 11011   003346  6E12               	movwf	___awmod@divisor^0,c
 11012   003348  EC66  F025         	call	___awmod	;wreg free
 11013   00334C  C010  F016         	movff	?___awmod,abs@a
 11014   003350  C011  F017         	movff	?___awmod+1,abs@a+1
 11015   003354  ECC0  F02E         	call	_abs	;wreg free
 11016   003358  5016               	movf	?_abs^0,w,c
 11017   00335A  0F30               	addlw	48
 11018   00335C  6EDF               	movwf	indf2,c
 11019   00335E                     
 11020                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
 11021   00335E  C020  F010         	movff	vfpfcnvrt@convarg,___awdiv@dividend
 11022   003362  C021  F011         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
 11023   003366  0E00               	movlw	0
 11024   003368  6E13               	movwf	(___awdiv@divisor+1)^0,c
 11025   00336A  0E0A               	movlw	10
 11026   00336C  6E12               	movwf	___awdiv@divisor^0,c
 11027   00336E  ECE4  F023         	call	___awdiv	;wreg free
 11028   003372  C010  F020         	movff	?___awdiv,vfpfcnvrt@convarg
 11029   003376  C011  F021         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
 11030   00337A                     
 11031                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
 11032   00337A  5020               	movf	vfpfcnvrt@convarg^0,w,c
 11033   00337C  1021               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
 11034   00337E  B4D8               	btfsc	status,2,c
 11035   003380  EFC4  F019         	goto	u11971
 11036   003384  EFC6  F019         	goto	u11970
 11037   003388                     u11971:
 11038   003388  EFCE  F019         	goto	l10914
 11039   00338C                     u11970:
 11040   00338C  5024               	movf	vfpfcnvrt@c^0,w,c
 11041   00338E  A4D8               	btfss	status,2,c
 11042   003390  EFCC  F019         	goto	u11981
 11043   003394  EFCE  F019         	goto	u11980
 11044   003398                     u11981:
 11045   003398  EF95  F019         	goto	l10906
 11046   00339C                     u11980:
 11047   00339C                     l10914:
 11048                           
 11049                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
 11050   00339C  5024               	movf	vfpfcnvrt@c^0,w,c
 11051   00339E  B4D8               	btfsc	status,2,c
 11052   0033A0  EFD4  F019         	goto	u11991
 11053   0033A4  EFD6  F019         	goto	u11990
 11054   0033A8                     u11991:
 11055   0033A8  EFF9  F019         	goto	l10924
 11056   0033AC                     u11990:
 11057   0033AC  501E               	movf	vfpfcnvrt@done^0,w,c
 11058   0033AE  B4D8               	btfsc	status,2,c
 11059   0033B0  EFDC  F019         	goto	u12001
 11060   0033B4  EFDE  F019         	goto	u12000
 11061   0033B8                     u12001:
 11062   0033B8  EFF9  F019         	goto	l10924
 11063   0033BC                     u12000:
 11064   0033BC                     
 11065                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
 11066   0033BC  0624               	decf	vfpfcnvrt@c^0,f,c
 11067   0033BE  0E6B               	movlw	low _dbuf
 11068   0033C0  2424               	addwf	vfpfcnvrt@c^0,w,c
 11069   0033C2  6ED9               	movwf	fsr2l,c
 11070   0033C4  6ADA               	clrf	fsr2h,c
 11071   0033C6  0E01               	movlw	high _dbuf
 11072   0033C8  22DA               	addwfc	fsr2h,f,c
 11073   0033CA  0E2D               	movlw	45
 11074   0033CC  6EDF               	movwf	indf2,c
 11075   0033CE  EFF9  F019         	goto	l10924
 11076   0033D2                     l10920:
 11077                           
 11078                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
 11079   0033D2  0E6B               	movlw	low _dbuf
 11080   0033D4  2424               	addwf	vfpfcnvrt@c^0,w,c
 11081   0033D6  6ED9               	movwf	fsr2l,c
 11082   0033D8  6ADA               	clrf	fsr2h,c
 11083   0033DA  0E01               	movlw	high _dbuf
 11084   0033DC  22DA               	addwfc	fsr2h,f,c
 11085   0033DE  50DF               	movf	indf2,w,c
 11086   0033E0  6E1D               	movwf	??_vfpfcnvrt^0,c
 11087   0033E2  501D               	movf	??_vfpfcnvrt^0,w,c
 11088   0033E4  6E10               	movwf	fputc@c^0,c
 11089   0033E6  6A11               	clrf	(fputc@c+1)^0,c
 11090   0033E8  C01A  F012         	movff	vfpfcnvrt@fp,fputc@fp
 11091   0033EC  EC14  F026         	call	_fputc	;wreg free
 11092   0033F0  2A24               	incf	vfpfcnvrt@c^0,f,c
 11093   0033F2                     l10924:
 11094                           
 11095                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
 11096   0033F2  0E20               	movlw	32
 11097   0033F4  1824               	xorwf	vfpfcnvrt@c^0,w,c
 11098   0033F6  A4D8               	btfss	status,2,c
 11099   0033F8  EF00  F01A         	goto	u12011
 11100   0033FC  EF02  F01A         	goto	u12010
 11101   003400                     u12011:
 11102   003400  EFE9  F019         	goto	l10920
 11103   003404                     u12010:
 11104   003404  EF1C  F01A         	goto	l2568
 11105   003408                     l10926:
 11106                           
 11107                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 11108   003408  501B               	movf	vfpfcnvrt@fmt^0,w,c
 11109   00340A  6ED9               	movwf	fsr2l,c
 11110   00340C  6ADA               	clrf	fsr2h,c
 11111   00340E  2ADF               	incf	indf2,f,c
 11112   003410  EF1C  F01A         	goto	l2568
 11113   003414                     l10930:
 11114                           
 11115                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 11116   003414  501B               	movf	vfpfcnvrt@fmt^0,w,c
 11117   003416  6ED9               	movwf	fsr2l,c
 11118   003418  6ADA               	clrf	fsr2h,c
 11119   00341A  CFDF FFF6          	movff	indf2,tblptrl
 11120   00341E                     	if	1	;There is more than 1 active tblptr byte
 11121   00341E  0E10               	movlw	high __smallconst
 11122   003420  6EF7               	movwf	tblptrh,c
 11123   003422                     	endif
 11124   003422                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11125   003422  6AF8               	clrf	tblptru,c
 11126   003424                     	endif
 11127   003424                     	if	0	;tblptru may be non-zero
 11128   003424                     	endif
 11129   003424  0008               	tblrd		*
 11130   003426  50F5               	movf	tablat,w,c
 11131   003428  6E10               	movwf	fputc@c^0,c
 11132   00342A  6A11               	clrf	(fputc@c+1)^0,c
 11133   00342C  C01A  F012         	movff	vfpfcnvrt@fp,fputc@fp
 11134   003430  EC14  F026         	call	_fputc	;wreg free
 11135   003434  EF04  F01A         	goto	l10926
 11136   003438                     l2568:
 11137   003438  0012               	return		;funcret
 11138   00343A                     __end_of_vfpfcnvrt:
 11139                           	callstack 0
 11140                           
 11141 ;; *************** function _fputc *****************
 11142 ;; Defined at:
 11143 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
 11144 ;; Parameters:    Size  Location     Type
 11145 ;;  c               2   15[COMRAM] int 
 11146 ;;  fp              1   17[COMRAM] PTR struct _IO_FILE
 11147 ;;		 -> sprintf@f(12), 
 11148 ;; Auto vars:     Size  Location     Type
 11149 ;;		None
 11150 ;; Return value:  Size  Location     Type
 11151 ;;                  2   15[COMRAM] int 
 11152 ;; Registers used:
 11153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11154 ;; Tracked objects:
 11155 ;;		On entry : 0/0
 11156 ;;		On exit  : 0/0
 11157 ;;		Unchanged: 0/0
 11158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11159 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11161 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11162 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11163 ;;Total ram usage:        8 bytes
 11164 ;; Hardware stack levels used: 1
 11165 ;; Hardware stack levels required when called: 5
 11166 ;; This function calls:
 11167 ;;		_putch
 11168 ;; This function is called by:
 11169 ;;		_vfpfcnvrt
 11170 ;; This function uses a non-reentrant model
 11171 ;;
 11172                           
 11173                           	psect	text59
 11174   004C28                     __ptext59:
 11175                           	callstack 0
 11176   004C28                     _fputc:
 11177                           	callstack 21
 11178   004C28  5012               	movf	fputc@fp^0,w,c
 11179   004C2A  B4D8               	btfsc	status,2,c
 11180   004C2C  EF1A  F026         	goto	u11031
 11181   004C30  EF1C  F026         	goto	u11030
 11182   004C34                     u11031:
 11183   004C34  EF24  F026         	goto	l10380
 11184   004C38                     u11030:
 11185   004C38  5012               	movf	fputc@fp^0,w,c
 11186   004C3A  A4D8               	btfss	status,2,c
 11187   004C3C  EF22  F026         	goto	u11041
 11188   004C40  EF24  F026         	goto	u11040
 11189   004C44                     u11041:
 11190   004C44  EF29  F026         	goto	l10382
 11191   004C48                     u11040:
 11192   004C48                     l10380:
 11193   004C48  5010               	movf	fputc@c^0,w,c
 11194   004C4A  EC90  F030         	call	_putch
 11195   004C4E  EF68  F026         	goto	l2593
 11196   004C52                     l10382:
 11197   004C52  5012               	movf	fputc@fp^0,w,c
 11198   004C54  6ED9               	movwf	fsr2l,c
 11199   004C56  6ADA               	clrf	fsr2h,c
 11200   004C58  0E0A               	movlw	10
 11201   004C5A  26D9               	addwf	fsr2l,f,c
 11202   004C5C  50DE               	movf	postinc2,w,c
 11203   004C5E  10DE               	iorwf	postinc2,w,c
 11204   004C60  B4D8               	btfsc	status,2,c
 11205   004C62  EF35  F026         	goto	u11051
 11206   004C66  EF37  F026         	goto	u11050
 11207   004C6A                     u11051:
 11208   004C6A  EF50  F026         	goto	l10386
 11209   004C6E                     u11050:
 11210   004C6E  5012               	movf	fputc@fp^0,w,c
 11211   004C70  6ED9               	movwf	fsr2l,c
 11212   004C72  6ADA               	clrf	fsr2h,c
 11213   004C74  0E0A               	movlw	10
 11214   004C76  26D9               	addwf	fsr2l,f,c
 11215   004C78  5012               	movf	fputc@fp^0,w,c
 11216   004C7A  6EE1               	movwf	fsr1l,c
 11217   004C7C  6AE2               	clrf	fsr1h,c
 11218   004C7E  0E03               	movlw	3
 11219   004C80  26E1               	addwf	fsr1l,f,c
 11220   004C82  50DE               	movf	postinc2,w,c
 11221   004C84  5CE6               	subwf	postinc1,w,c
 11222   004C86  50E6               	movf	postinc1,w,c
 11223   004C88  0A80               	xorlw	128
 11224   004C8A  6E17               	movwf	(??_fputc+4)^0,c
 11225   004C8C  50DE               	movf	postinc2,w,c
 11226   004C8E  0A80               	xorlw	128
 11227   004C90  5817               	subwfb	(??_fputc+4)^0,w,c
 11228   004C92  B0D8               	btfsc	status,0,c
 11229   004C94  EF4E  F026         	goto	u11061
 11230   004C98  EF50  F026         	goto	u11060
 11231   004C9C                     u11061:
 11232   004C9C  EF68  F026         	goto	l2593
 11233   004CA0                     u11060:
 11234   004CA0                     l10386:
 11235   004CA0  5012               	movf	fputc@fp^0,w,c
 11236   004CA2  6ED9               	movwf	fsr2l,c
 11237   004CA4  6ADA               	clrf	fsr2h,c
 11238   004CA6  0E03               	movlw	3
 11239   004CA8  26D9               	addwf	fsr2l,f,c
 11240   004CAA  50DF               	movf	indf2,w,c
 11241   004CAC  6E13               	movwf	??_fputc^0,c
 11242   004CAE  5012               	movf	fputc@fp^0,w,c
 11243   004CB0  6ED9               	movwf	fsr2l,c
 11244   004CB2  6ADA               	clrf	fsr2h,c
 11245   004CB4  50DF               	movf	indf2,w,c
 11246   004CB6  2413               	addwf	??_fputc^0,w,c
 11247   004CB8  6ED9               	movwf	fsr2l,c
 11248   004CBA  6ADA               	clrf	fsr2h,c
 11249   004CBC  C010  FFDF         	movff	fputc@c,indf2
 11250   004CC0  5012               	movf	fputc@fp^0,w,c
 11251   004CC2  6ED9               	movwf	fsr2l,c
 11252   004CC4  6ADA               	clrf	fsr2h,c
 11253   004CC6  0E03               	movlw	3
 11254   004CC8  26D9               	addwf	fsr2l,f,c
 11255   004CCA  2ADE               	incf	postinc2,f,c
 11256   004CCC  0E00               	movlw	0
 11257   004CCE  22DD               	addwfc	postdec2,f,c
 11258   004CD0                     l2593:
 11259   004CD0  0012               	return		;funcret
 11260   004CD2                     __end_of_fputc:
 11261                           	callstack 0
 11262                           
 11263 ;; *************** function _putch *****************
 11264 ;; Defined at:
 11265 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
 11266 ;; Parameters:    Size  Location     Type
 11267 ;;  c               1    wreg     unsigned char 
 11268 ;; Auto vars:     Size  Location     Type
 11269 ;;  c               1    0[COMRAM] unsigned char 
 11270 ;; Return value:  Size  Location     Type
 11271 ;;                  1    wreg      void 
 11272 ;; Registers used:
 11273 ;;		wreg
 11274 ;; Tracked objects:
 11275 ;;		On entry : 0/0
 11276 ;;		On exit  : 0/0
 11277 ;;		Unchanged: 0/0
 11278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11283 ;;Total ram usage:        0 bytes
 11284 ;; Hardware stack levels used: 1
 11285 ;; Hardware stack levels required when called: 4
 11286 ;; This function calls:
 11287 ;;		Nothing
 11288 ;; This function is called by:
 11289 ;;		_fputc
 11290 ;; This function uses a non-reentrant model
 11291 ;;
 11292                           
 11293                           	psect	text60
 11294   006120                     __ptext60:
 11295                           	callstack 0
 11296   006120                     _putch:
 11297                           	callstack 21
 11298   006120  0012               	return		;funcret
 11299   006122                     __end_of_putch:
 11300                           	callstack 0
 11301                           
 11302 ;; *************** function _abs *****************
 11303 ;; Defined at:
 11304 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
 11305 ;; Parameters:    Size  Location     Type
 11306 ;;  a               2   21[COMRAM] int 
 11307 ;; Auto vars:     Size  Location     Type
 11308 ;;		None
 11309 ;; Return value:  Size  Location     Type
 11310 ;;                  2   21[COMRAM] int 
 11311 ;; Registers used:
 11312 ;;		wreg, status,2, status,0
 11313 ;; Tracked objects:
 11314 ;;		On entry : 0/0
 11315 ;;		On exit  : 0/0
 11316 ;;		Unchanged: 0/0
 11317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11318 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11320 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11321 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11322 ;;Total ram usage:        4 bytes
 11323 ;; Hardware stack levels used: 1
 11324 ;; Hardware stack levels required when called: 4
 11325 ;; This function calls:
 11326 ;;		Nothing
 11327 ;; This function is called by:
 11328 ;;		_vfpfcnvrt
 11329 ;; This function uses a non-reentrant model
 11330 ;;
 11331                           
 11332                           	psect	text61
 11333   005D80                     __ptext61:
 11334                           	callstack 0
 11335   005D80                     _abs:
 11336                           	callstack 22
 11337   005D80  BE17               	btfsc	(abs@a+1)^0,7,c
 11338   005D82  EFC5  F02E         	goto	u11071
 11339   005D86  EFC7  F02E         	goto	u11070
 11340   005D8A                     u11071:
 11341   005D8A  EFCD  F02E         	goto	l2578
 11342   005D8E                     u11070:
 11343   005D8E  C016  F016         	movff	abs@a,?_abs
 11344   005D92  C017  F017         	movff	abs@a+1,?_abs+1
 11345   005D96  EFD9  F02E         	goto	l2581
 11346   005D9A                     l2578:
 11347   005D9A  C016  F018         	movff	abs@a,??_abs
 11348   005D9E  C017  F019         	movff	abs@a+1,??_abs+1
 11349   005DA2  1E18               	comf	??_abs^0,f,c
 11350   005DA4  1E19               	comf	(??_abs+1)^0,f,c
 11351   005DA6  4A18               	infsnz	??_abs^0,f,c
 11352   005DA8  2A19               	incf	(??_abs+1)^0,f,c
 11353   005DAA  C018  F016         	movff	??_abs,?_abs
 11354   005DAE  C019  F017         	movff	??_abs+1,?_abs+1
 11355   005DB2                     l2581:
 11356   005DB2  0012               	return		;funcret
 11357   005DB4                     __end_of_abs:
 11358                           	callstack 0
 11359                           
 11360 ;; *************** function ___awmod *****************
 11361 ;; Defined at:
 11362 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
 11363 ;; Parameters:    Size  Location     Type
 11364 ;;  dividend        2   15[COMRAM] int 
 11365 ;;  divisor         2   17[COMRAM] int 
 11366 ;; Auto vars:     Size  Location     Type
 11367 ;;  sign            1   20[COMRAM] unsigned char 
 11368 ;;  counter         1   19[COMRAM] unsigned char 
 11369 ;; Return value:  Size  Location     Type
 11370 ;;                  2   15[COMRAM] int 
 11371 ;; Registers used:
 11372 ;;		wreg, status,2, status,0
 11373 ;; Tracked objects:
 11374 ;;		On entry : 0/0
 11375 ;;		On exit  : 0/0
 11376 ;;		Unchanged: 0/0
 11377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11378 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11379 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11381 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11382 ;;Total ram usage:        6 bytes
 11383 ;; Hardware stack levels used: 1
 11384 ;; Hardware stack levels required when called: 4
 11385 ;; This function calls:
 11386 ;;		Nothing
 11387 ;; This function is called by:
 11388 ;;		_transfer_0x_d
 11389 ;;		_vfpfcnvrt
 11390 ;; This function uses a non-reentrant model
 11391 ;;
 11392                           
 11393                           	psect	text62
 11394   004ACC                     __ptext62:
 11395                           	callstack 0
 11396   004ACC                     ___awmod:
 11397                           	callstack 25
 11398   004ACC  0E00               	movlw	0
 11399   004ACE  6E15               	movwf	___awmod@sign^0,c
 11400   004AD0  BE11               	btfsc	(___awmod@dividend+1)^0,7,c
 11401   004AD2  EF6F  F025         	goto	u10970
 11402   004AD6  EF6D  F025         	goto	u10971
 11403   004ADA                     u10971:
 11404   004ADA  EF75  F025         	goto	l10348
 11405   004ADE                     u10970:
 11406   004ADE  6C10               	negf	___awmod@dividend^0,c
 11407   004AE0  1E11               	comf	(___awmod@dividend+1)^0,f,c
 11408   004AE2  B0D8               	btfsc	status,0,c
 11409   004AE4  2A11               	incf	(___awmod@dividend+1)^0,f,c
 11410   004AE6  0E01               	movlw	1
 11411   004AE8  6E15               	movwf	___awmod@sign^0,c
 11412   004AEA                     l10348:
 11413   004AEA  BE13               	btfsc	(___awmod@divisor+1)^0,7,c
 11414   004AEC  EF7C  F025         	goto	u10980
 11415   004AF0  EF7A  F025         	goto	u10981
 11416   004AF4                     u10981:
 11417   004AF4  EF80  F025         	goto	l10352
 11418   004AF8                     u10980:
 11419   004AF8  6C12               	negf	___awmod@divisor^0,c
 11420   004AFA  1E13               	comf	(___awmod@divisor+1)^0,f,c
 11421   004AFC  B0D8               	btfsc	status,0,c
 11422   004AFE  2A13               	incf	(___awmod@divisor+1)^0,f,c
 11423   004B00                     l10352:
 11424   004B00  5012               	movf	___awmod@divisor^0,w,c
 11425   004B02  1013               	iorwf	(___awmod@divisor+1)^0,w,c
 11426   004B04  B4D8               	btfsc	status,2,c
 11427   004B06  EF87  F025         	goto	u10991
 11428   004B0A  EF89  F025         	goto	u10990
 11429   004B0E                     u10991:
 11430   004B0E  EFAD  F025         	goto	l10368
 11431   004B12                     u10990:
 11432   004B12  0E01               	movlw	1
 11433   004B14  6E14               	movwf	___awmod@counter^0,c
 11434   004B16  EF91  F025         	goto	l10358
 11435   004B1A                     l10356:
 11436   004B1A  90D8               	bcf	status,0,c
 11437   004B1C  3612               	rlcf	___awmod@divisor^0,f,c
 11438   004B1E  3613               	rlcf	(___awmod@divisor+1)^0,f,c
 11439   004B20  2A14               	incf	___awmod@counter^0,f,c
 11440   004B22                     l10358:
 11441   004B22  AE13               	btfss	(___awmod@divisor+1)^0,7,c
 11442   004B24  EF96  F025         	goto	u11001
 11443   004B28  EF98  F025         	goto	u11000
 11444   004B2C                     u11001:
 11445   004B2C  EF8D  F025         	goto	l10356
 11446   004B30                     u11000:
 11447   004B30                     l10360:
 11448   004B30  5012               	movf	___awmod@divisor^0,w,c
 11449   004B32  5C10               	subwf	___awmod@dividend^0,w,c
 11450   004B34  5013               	movf	(___awmod@divisor+1)^0,w,c
 11451   004B36  5811               	subwfb	(___awmod@dividend+1)^0,w,c
 11452   004B38  A0D8               	btfss	status,0,c
 11453   004B3A  EFA1  F025         	goto	u11011
 11454   004B3E  EFA3  F025         	goto	u11010
 11455   004B42                     u11011:
 11456   004B42  EFA7  F025         	goto	l10364
 11457   004B46                     u11010:
 11458   004B46  5012               	movf	___awmod@divisor^0,w,c
 11459   004B48  5E10               	subwf	___awmod@dividend^0,f,c
 11460   004B4A  5013               	movf	(___awmod@divisor+1)^0,w,c
 11461   004B4C  5A11               	subwfb	(___awmod@dividend+1)^0,f,c
 11462   004B4E                     l10364:
 11463   004B4E  90D8               	bcf	status,0,c
 11464   004B50  3213               	rrcf	(___awmod@divisor+1)^0,f,c
 11465   004B52  3212               	rrcf	___awmod@divisor^0,f,c
 11466   004B54  2E14               	decfsz	___awmod@counter^0,f,c
 11467   004B56  EF98  F025         	goto	l10360
 11468   004B5A                     l10368:
 11469   004B5A  5015               	movf	___awmod@sign^0,w,c
 11470   004B5C  B4D8               	btfsc	status,2,c
 11471   004B5E  EFB3  F025         	goto	u11021
 11472   004B62  EFB5  F025         	goto	u11020
 11473   004B66                     u11021:
 11474   004B66  EFB9  F025         	goto	l10372
 11475   004B6A                     u11020:
 11476   004B6A  6C10               	negf	___awmod@dividend^0,c
 11477   004B6C  1E11               	comf	(___awmod@dividend+1)^0,f,c
 11478   004B6E  B0D8               	btfsc	status,0,c
 11479   004B70  2A11               	incf	(___awmod@dividend+1)^0,f,c
 11480   004B72                     l10372:
 11481   004B72  C010  F010         	movff	___awmod@dividend,?___awmod
 11482   004B76  C011  F011         	movff	___awmod@dividend+1,?___awmod+1
 11483   004B7A  0012               	return		;funcret
 11484   004B7C                     __end_of___awmod:
 11485                           	callstack 0
 11486                           
 11487 ;; *************** function ___awdiv *****************
 11488 ;; Defined at:
 11489 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
 11490 ;; Parameters:    Size  Location     Type
 11491 ;;  dividend        2   15[COMRAM] int 
 11492 ;;  divisor         2   17[COMRAM] int 
 11493 ;; Auto vars:     Size  Location     Type
 11494 ;;  quotient        2   21[COMRAM] int 
 11495 ;;  sign            1   20[COMRAM] unsigned char 
 11496 ;;  counter         1   19[COMRAM] unsigned char 
 11497 ;; Return value:  Size  Location     Type
 11498 ;;                  2   15[COMRAM] int 
 11499 ;; Registers used:
 11500 ;;		wreg, status,2, status,0
 11501 ;; Tracked objects:
 11502 ;;		On entry : 0/0
 11503 ;;		On exit  : 0/0
 11504 ;;		Unchanged: 0/0
 11505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11506 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11507 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11509 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11510 ;;Total ram usage:        8 bytes
 11511 ;; Hardware stack levels used: 1
 11512 ;; Hardware stack levels required when called: 4
 11513 ;; This function calls:
 11514 ;;		Nothing
 11515 ;; This function is called by:
 11516 ;;		_transfer_0x_d
 11517 ;;		_vfpfcnvrt
 11518 ;; This function uses a non-reentrant model
 11519 ;;
 11520                           
 11521                           	psect	text63
 11522   0047C8                     __ptext63:
 11523                           	callstack 0
 11524   0047C8                     ___awdiv:
 11525                           	callstack 25
 11526   0047C8  0E00               	movlw	0
 11527   0047CA  6E15               	movwf	___awdiv@sign^0,c
 11528   0047CC  BE13               	btfsc	(___awdiv@divisor+1)^0,7,c
 11529   0047CE  EFED  F023         	goto	u10910
 11530   0047D2  EFEB  F023         	goto	u10911
 11531   0047D6                     u10911:
 11532   0047D6  EFF3  F023         	goto	l10304
 11533   0047DA                     u10910:
 11534   0047DA  6C12               	negf	___awdiv@divisor^0,c
 11535   0047DC  1E13               	comf	(___awdiv@divisor+1)^0,f,c
 11536   0047DE  B0D8               	btfsc	status,0,c
 11537   0047E0  2A13               	incf	(___awdiv@divisor+1)^0,f,c
 11538   0047E2  0E01               	movlw	1
 11539   0047E4  6E15               	movwf	___awdiv@sign^0,c
 11540   0047E6                     l10304:
 11541   0047E6  BE11               	btfsc	(___awdiv@dividend+1)^0,7,c
 11542   0047E8  EFFA  F023         	goto	u10920
 11543   0047EC  EFF8  F023         	goto	u10921
 11544   0047F0                     u10921:
 11545   0047F0  EF00  F024         	goto	l10310
 11546   0047F4                     u10920:
 11547   0047F4  6C10               	negf	___awdiv@dividend^0,c
 11548   0047F6  1E11               	comf	(___awdiv@dividend+1)^0,f,c
 11549   0047F8  B0D8               	btfsc	status,0,c
 11550   0047FA  2A11               	incf	(___awdiv@dividend+1)^0,f,c
 11551   0047FC  0E01               	movlw	1
 11552   0047FE  1A15               	xorwf	___awdiv@sign^0,f,c
 11553   004800                     l10310:
 11554   004800  0E00               	movlw	0
 11555   004802  6E17               	movwf	(___awdiv@quotient+1)^0,c
 11556   004804  0E00               	movlw	0
 11557   004806  6E16               	movwf	___awdiv@quotient^0,c
 11558   004808  5012               	movf	___awdiv@divisor^0,w,c
 11559   00480A  1013               	iorwf	(___awdiv@divisor+1)^0,w,c
 11560   00480C  B4D8               	btfsc	status,2,c
 11561   00480E  EF0B  F024         	goto	u10931
 11562   004812  EF0D  F024         	goto	u10930
 11563   004816                     u10931:
 11564   004816  EF35  F024         	goto	l10332
 11565   00481A                     u10930:
 11566   00481A  0E01               	movlw	1
 11567   00481C  6E14               	movwf	___awdiv@counter^0,c
 11568   00481E  EF15  F024         	goto	l10318
 11569   004822                     l10316:
 11570   004822  90D8               	bcf	status,0,c
 11571   004824  3612               	rlcf	___awdiv@divisor^0,f,c
 11572   004826  3613               	rlcf	(___awdiv@divisor+1)^0,f,c
 11573   004828  2A14               	incf	___awdiv@counter^0,f,c
 11574   00482A                     l10318:
 11575   00482A  AE13               	btfss	(___awdiv@divisor+1)^0,7,c
 11576   00482C  EF1A  F024         	goto	u10941
 11577   004830  EF1C  F024         	goto	u10940
 11578   004834                     u10941:
 11579   004834  EF11  F024         	goto	l10316
 11580   004838                     u10940:
 11581   004838                     l10320:
 11582   004838  90D8               	bcf	status,0,c
 11583   00483A  3616               	rlcf	___awdiv@quotient^0,f,c
 11584   00483C  3617               	rlcf	(___awdiv@quotient+1)^0,f,c
 11585   00483E  5012               	movf	___awdiv@divisor^0,w,c
 11586   004840  5C10               	subwf	___awdiv@dividend^0,w,c
 11587   004842  5013               	movf	(___awdiv@divisor+1)^0,w,c
 11588   004844  5811               	subwfb	(___awdiv@dividend+1)^0,w,c
 11589   004846  A0D8               	btfss	status,0,c
 11590   004848  EF28  F024         	goto	u10951
 11591   00484C  EF2A  F024         	goto	u10950
 11592   004850                     u10951:
 11593   004850  EF2F  F024         	goto	l10328
 11594   004854                     u10950:
 11595   004854  5012               	movf	___awdiv@divisor^0,w,c
 11596   004856  5E10               	subwf	___awdiv@dividend^0,f,c
 11597   004858  5013               	movf	(___awdiv@divisor+1)^0,w,c
 11598   00485A  5A11               	subwfb	(___awdiv@dividend+1)^0,f,c
 11599   00485C  8016               	bsf	___awdiv@quotient^0,0,c
 11600   00485E                     l10328:
 11601   00485E  90D8               	bcf	status,0,c
 11602   004860  3213               	rrcf	(___awdiv@divisor+1)^0,f,c
 11603   004862  3212               	rrcf	___awdiv@divisor^0,f,c
 11604   004864  2E14               	decfsz	___awdiv@counter^0,f,c
 11605   004866  EF1C  F024         	goto	l10320
 11606   00486A                     l10332:
 11607   00486A  5015               	movf	___awdiv@sign^0,w,c
 11608   00486C  B4D8               	btfsc	status,2,c
 11609   00486E  EF3B  F024         	goto	u10961
 11610   004872  EF3D  F024         	goto	u10960
 11611   004876                     u10961:
 11612   004876  EF41  F024         	goto	l10336
 11613   00487A                     u10960:
 11614   00487A  6C16               	negf	___awdiv@quotient^0,c
 11615   00487C  1E17               	comf	(___awdiv@quotient+1)^0,f,c
 11616   00487E  B0D8               	btfsc	status,0,c
 11617   004880  2A17               	incf	(___awdiv@quotient+1)^0,f,c
 11618   004882                     l10336:
 11619   004882  C016  F010         	movff	___awdiv@quotient,?___awdiv
 11620   004886  C017  F011         	movff	___awdiv@quotient+1,?___awdiv+1
 11621   00488A  0012               	return		;funcret
 11622   00488C                     __end_of___awdiv:
 11623                           	callstack 0
 11624                           
 11625 ;; *************** function _memset *****************
 11626 ;; Defined at:
 11627 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memset.c"
 11628 ;; Parameters:    Size  Location     Type
 11629 ;;  dest            1   15[COMRAM] PTR void 
 11630 ;;		 -> addd(1), 
 11631 ;;  c               2   16[COMRAM] int 
 11632 ;;  n               2   18[COMRAM] unsigned int 
 11633 ;; Auto vars:     Size  Location     Type
 11634 ;;  p               1   20[COMRAM] PTR unsigned char 
 11635 ;;		 -> addd(1), 
 11636 ;; Return value:  Size  Location     Type
 11637 ;;                  1    wreg      PTR void 
 11638 ;; Registers used:
 11639 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11640 ;; Tracked objects:
 11641 ;;		On entry : 0/0
 11642 ;;		On exit  : 0/0
 11643 ;;		Unchanged: 0/0
 11644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11645 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11646 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11648 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11649 ;;Total ram usage:        6 bytes
 11650 ;; Hardware stack levels used: 1
 11651 ;; Hardware stack levels required when called: 4
 11652 ;; This function calls:
 11653 ;;		Nothing
 11654 ;; This function is called by:
 11655 ;;		_convert_uint8_to_string
 11656 ;;		_convert_uint16_to_string
 11657 ;;		_convert_uint32_to_string
 11658 ;; This function uses a non-reentrant model
 11659 ;;
 11660                           
 11661                           	psect	text64
 11662   005DE4                     __ptext64:
 11663                           	callstack 0
 11664   005DE4                     _memset:
 11665                           	callstack 25
 11666   005DE4  C010  F015         	movff	memset@dest,memset@p
 11667   005DE8  EFFC  F02E         	goto	l11852
 11668   005DEC                     l11848:
 11669   005DEC  5015               	movf	memset@p^0,w,c
 11670   005DEE  6ED9               	movwf	fsr2l,c
 11671   005DF0  6ADA               	clrf	fsr2h,c
 11672   005DF2  C011  FFDF         	movff	memset@c,indf2
 11673   005DF6  2A15               	incf	memset@p^0,f,c
 11674   005DF8                     l11852:
 11675   005DF8  0613               	decf	memset@n^0,f,c
 11676   005DFA  A0D8               	btfss	status,0,c
 11677   005DFC  0614               	decf	(memset@n+1)^0,f,c
 11678   005DFE  2813               	incf	memset@n^0,w,c
 11679   005E00  E106               	bnz	u13001
 11680   005E02  2814               	incf	(memset@n+1)^0,w,c
 11681   005E04  A4D8               	btfss	status,2,c
 11682   005E06  EF07  F02F         	goto	u13001
 11683   005E0A  EF09  F02F         	goto	u13000
 11684   005E0E                     u13001:
 11685   005E0E  EFF6  F02E         	goto	l11848
 11686   005E12                     u13000:
 11687   005E12  0012               	return		;funcret
 11688   005E14                     __end_of_memset:
 11689                           	callstack 0
 11690                           
 11691 ;; *************** function _ccp2_pwm_set_duty *****************
 11692 ;; Defined at:
 11693 ;;		line 118 in file "MKAL_layer/CCP2/hal_ccp2.c"
 11694 ;; Parameters:    Size  Location     Type
 11695 ;;  duty            1    wreg     const unsigned char 
 11696 ;; Auto vars:     Size  Location     Type
 11697 ;;  duty            1    8[BANK1 ] const unsigned char 
 11698 ;;  l_duty_temp     2   10[BANK1 ] unsigned short 
 11699 ;;  duty_           1    9[BANK1 ] unsigned char 
 11700 ;;  ret             1    0        unsigned char 
 11701 ;; Return value:  Size  Location     Type
 11702 ;;                  1    wreg      unsigned char 
 11703 ;; Registers used:
 11704 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11705 ;; Tracked objects:
 11706 ;;		On entry : 0/0
 11707 ;;		On exit  : 0/0
 11708 ;;		Unchanged: 0/0
 11709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11711 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11712 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11713 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11714 ;;Total ram usage:       10 bytes
 11715 ;; Hardware stack levels used: 1
 11716 ;; Hardware stack levels required when called: 5
 11717 ;; This function calls:
 11718 ;;		___fladd
 11719 ;;		___fldiv
 11720 ;;		___flmul
 11721 ;;		___fltol
 11722 ;;		___xxtofl
 11723 ;; This function is called by:
 11724 ;;		_main
 11725 ;; This function uses a non-reentrant model
 11726 ;;
 11727                           
 11728                           	psect	text65
 11729   00411E                     __ptext65:
 11730                           	callstack 0
 11731   00411E                     _ccp2_pwm_set_duty:
 11732                           	callstack 25
 11733                           
 11734                           ;incstack = 0
 11735                           ;ccp2_pwm_set_duty@duty stored from wreg
 11736   00411E  0101               	movlb	1	; () banked
 11737   004120  6FA3               	movwf	ccp2_pwm_set_duty@duty& (0+255),b
 11738   004122                     
 11739                           ;MKAL_layer/CCP2/hal_ccp2.c: 120:     uint8 duty_ =100 - duty;
 11740   004122  0101               	movlb	1	; () banked
 11741   004124  51A3               	movf	ccp2_pwm_set_duty@duty& (0+255),w,b
 11742   004126  0864               	sublw	100
 11743   004128  6FA4               	movwf	ccp2_pwm_set_duty@duty_& (0+255),b
 11744   00412A                     
 11745                           ; BSR set to: 1
 11746                           ;MKAL_layer/CCP2/hal_ccp2.c: 122:     l_duty_temp = (uint16)((float)4 * ((float)PR2 + 1.
      +                          0) * (float)((float)duty_ / 100.0));
 11747   00412A  0E00               	movlw	0
 11748   00412C  6E4B               	movwf	___flmul@a^0,c
 11749   00412E  0E00               	movlw	0
 11750   004130  6E4C               	movwf	(___flmul@a+1)^0,c
 11751   004132  0E80               	movlw	128
 11752   004134  6E4D               	movwf	(___flmul@a+2)^0,c
 11753   004136  0E40               	movlw	64
 11754   004138  6E4E               	movwf	(___flmul@a+3)^0,c
 11755   00413A  0E00               	movlw	0
 11756   00413C  6E3B               	movwf	___fladd@a^0,c
 11757   00413E  0E00               	movlw	0
 11758   004140  6E3C               	movwf	(___fladd@a+1)^0,c
 11759   004142  0E80               	movlw	128
 11760   004144  6E3D               	movwf	(___fladd@a+2)^0,c
 11761   004146  0E3F               	movlw	63
 11762   004148  6E3E               	movwf	(___fladd@a+3)^0,c
 11763   00414A  50CB               	movf	203,w,c	;volatile
 11764   00414C  6E10               	movwf	___xxtofl@val^0,c
 11765   00414E  6A11               	clrf	(___xxtofl@val+1)^0,c
 11766   004150  6A12               	clrf	(___xxtofl@val+2)^0,c
 11767   004152  6A13               	clrf	(___xxtofl@val+3)^0,c
 11768   004154  0E00               	movlw	0
 11769   004156  EC1D  F01A         	call	___xxtofl
 11770   00415A  C010  F037         	movff	?___xxtofl,___fladd@b
 11771   00415E  C011  F038         	movff	?___xxtofl+1,___fladd@b+1
 11772   004162  C012  F039         	movff	?___xxtofl+2,___fladd@b+2
 11773   004166  C013  F03A         	movff	?___xxtofl+3,___fladd@b+3
 11774   00416A  ECE5  F010         	call	___fladd	;wreg free
 11775   00416E  C037  F047         	movff	?___fladd,___flmul@b
 11776   004172  C038  F048         	movff	?___fladd+1,___flmul@b+1
 11777   004176  C039  F049         	movff	?___fladd+2,___flmul@b+2
 11778   00417A  C03A  F04A         	movff	?___fladd+3,___flmul@b+3
 11779   00417E  EC45  F013         	call	___flmul	;wreg free
 11780   004182  C047  F19F         	movff	?___flmul,_ccp2_pwm_set_duty$5720
 11781   004186  C048  F1A0         	movff	?___flmul+1,_ccp2_pwm_set_duty$5720+1
 11782   00418A  C049  F1A1         	movff	?___flmul+2,_ccp2_pwm_set_duty$5720+2
 11783   00418E  C04A  F1A2         	movff	?___flmul+3,_ccp2_pwm_set_duty$5720+3
 11784   004192                     
 11785                           ;MKAL_layer/CCP2/hal_ccp2.c: 122:     l_duty_temp = (uint16)((float)4 * ((float)PR2 + 1.
      +                          0) * (float)((float)duty_ / 100.0));
 11786   004192  0E00               	movlw	0
 11787   004194  6E22               	movwf	___fldiv@a^0,c
 11788   004196  0E00               	movlw	0
 11789   004198  6E23               	movwf	(___fldiv@a+1)^0,c
 11790   00419A  0EC8               	movlw	200
 11791   00419C  6E24               	movwf	(___fldiv@a+2)^0,c
 11792   00419E  0E42               	movlw	66
 11793   0041A0  6E25               	movwf	(___fldiv@a+3)^0,c
 11794   0041A2  0101               	movlb	1	; () banked
 11795   0041A4  51A4               	movf	ccp2_pwm_set_duty@duty_& (0+255),w,b
 11796   0041A6  6E10               	movwf	___xxtofl@val^0,c
 11797   0041A8  6A11               	clrf	(___xxtofl@val+1)^0,c
 11798   0041AA  6A12               	clrf	(___xxtofl@val+2)^0,c
 11799   0041AC  6A13               	clrf	(___xxtofl@val+3)^0,c
 11800   0041AE  0E00               	movlw	0
 11801   0041B0  EC1D  F01A         	call	___xxtofl
 11802   0041B4  C010  F01E         	movff	?___xxtofl,___fldiv@b
 11803   0041B8  C011  F01F         	movff	?___xxtofl+1,___fldiv@b+1
 11804   0041BC  C012  F020         	movff	?___xxtofl+2,___fldiv@b+2
 11805   0041C0  C013  F021         	movff	?___xxtofl+3,___fldiv@b+3
 11806   0041C4  EC69  F017         	call	___fldiv	;wreg free
 11807   0041C8  C01E  F04B         	movff	?___fldiv,___flmul@a
 11808   0041CC  C01F  F04C         	movff	?___fldiv+1,___flmul@a+1
 11809   0041D0  C020  F04D         	movff	?___fldiv+2,___flmul@a+2
 11810   0041D4  C021  F04E         	movff	?___fldiv+3,___flmul@a+3
 11811   0041D8  C19F  F047         	movff	_ccp2_pwm_set_duty$5720,___flmul@b
 11812   0041DC  C1A0  F048         	movff	_ccp2_pwm_set_duty$5720+1,___flmul@b+1
 11813   0041E0  C1A1  F049         	movff	_ccp2_pwm_set_duty$5720+2,___flmul@b+2
 11814   0041E4  C1A2  F04A         	movff	_ccp2_pwm_set_duty$5720+3,___flmul@b+3
 11815   0041E8  EC45  F013         	call	___flmul	;wreg free
 11816   0041EC  C047  F0F6         	movff	?___flmul,___fltol@f1
 11817   0041F0  C048  F0F7         	movff	?___flmul+1,___fltol@f1+1
 11818   0041F4  C049  F0F8         	movff	?___flmul+2,___fltol@f1+2
 11819   0041F8  C04A  F0F9         	movff	?___flmul+3,___fltol@f1+3
 11820   0041FC  ECE4  F01E         	call	___fltol	;wreg free
 11821   004200  C0F6  F1A5         	movff	?___fltol,ccp2_pwm_set_duty@l_duty_temp
 11822   004204  C0F7  F1A6         	movff	?___fltol+1,ccp2_pwm_set_duty@l_duty_temp+1
 11823   004208                     
 11824                           ;MKAL_layer/CCP2/hal_ccp2.c: 123:     CCP1CONbits.DC1B = (uint8)(l_duty_temp & 0x0003);
 11825   004208  C1A5  F19D         	movff	ccp2_pwm_set_duty@l_duty_temp,??_ccp2_pwm_set_duty
 11826   00420C  0E03               	movlw	3
 11827   00420E  0101               	movlb	1	; () banked
 11828   004210  179D               	andwf	??_ccp2_pwm_set_duty& (0+255),f,b
 11829   004212  3B9D               	swapf	??_ccp2_pwm_set_duty& (0+255),f,b
 11830   004214  50BD               	movf	189,w,c	;volatile
 11831   004216  199D               	xorwf	??_ccp2_pwm_set_duty& (0+255),w,b
 11832   004218  0BCF               	andlw	-49
 11833   00421A  199D               	xorwf	??_ccp2_pwm_set_duty& (0+255),w,b
 11834   00421C  6EBD               	movwf	189,c	;volatile
 11835   00421E                     
 11836                           ; BSR set to: 1
 11837                           ;MKAL_layer/CCP2/hal_ccp2.c: 124:     CCPR2L = (uint8)(l_duty_temp >> 2);
 11838   00421E  C1A5  F19D         	movff	ccp2_pwm_set_duty@l_duty_temp,??_ccp2_pwm_set_duty
 11839   004222  C1A6  F19E         	movff	ccp2_pwm_set_duty@l_duty_temp+1,??_ccp2_pwm_set_duty+1
 11840   004226  90D8               	bcf	status,0,c
 11841   004228  339E               	rrcf	(??_ccp2_pwm_set_duty+1)& (0+255),f,b
 11842   00422A  339D               	rrcf	??_ccp2_pwm_set_duty& (0+255),f,b
 11843   00422C  90D8               	bcf	status,0,c
 11844   00422E  339E               	rrcf	(??_ccp2_pwm_set_duty+1)& (0+255),f,b
 11845   004230  339D               	rrcf	??_ccp2_pwm_set_duty& (0+255),f,b
 11846   004232  519D               	movf	??_ccp2_pwm_set_duty& (0+255),w,b
 11847   004234  6EBB               	movwf	187,c	;volatile
 11848   004236                     
 11849                           ; BSR set to: 1
 11850   004236  0012               	return		;funcret
 11851   004238                     __end_of_ccp2_pwm_set_duty:
 11852                           	callstack 0
 11853                           
 11854 ;; *************** function _ccp1_pwm_set_duty *****************
 11855 ;; Defined at:
 11856 ;;		line 118 in file "MKAL_layer/CCP1/hal_ccp1.c"
 11857 ;; Parameters:    Size  Location     Type
 11858 ;;  duty            1    wreg     const unsigned char 
 11859 ;; Auto vars:     Size  Location     Type
 11860 ;;  duty            1    8[BANK1 ] const unsigned char 
 11861 ;;  l_duty_temp     2   10[BANK1 ] unsigned short 
 11862 ;;  duty_           1    9[BANK1 ] unsigned char 
 11863 ;;  ret             1    0        unsigned char 
 11864 ;; Return value:  Size  Location     Type
 11865 ;;                  1    wreg      unsigned char 
 11866 ;; Registers used:
 11867 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11868 ;; Tracked objects:
 11869 ;;		On entry : 0/0
 11870 ;;		On exit  : 0/0
 11871 ;;		Unchanged: 0/0
 11872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11874 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11875 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11876 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11877 ;;Total ram usage:       10 bytes
 11878 ;; Hardware stack levels used: 1
 11879 ;; Hardware stack levels required when called: 5
 11880 ;; This function calls:
 11881 ;;		___fladd
 11882 ;;		___fldiv
 11883 ;;		___flmul
 11884 ;;		___fltol
 11885 ;;		___xxtofl
 11886 ;; This function is called by:
 11887 ;;		_main
 11888 ;; This function uses a non-reentrant model
 11889 ;;
 11890                           
 11891                           	psect	text66
 11892   004238                     __ptext66:
 11893                           	callstack 0
 11894   004238                     _ccp1_pwm_set_duty:
 11895                           	callstack 25
 11896                           
 11897                           ; BSR set to: 1
 11898                           ;incstack = 0
 11899                           ;ccp1_pwm_set_duty@duty stored from wreg
 11900   004238  0101               	movlb	1	; () banked
 11901   00423A  6FA3               	movwf	ccp1_pwm_set_duty@duty& (0+255),b
 11902   00423C                     
 11903                           ;MKAL_layer/CCP1/hal_ccp1.c: 120:     uint8 duty_ =100 - duty;
 11904   00423C  0101               	movlb	1	; () banked
 11905   00423E  51A3               	movf	ccp1_pwm_set_duty@duty& (0+255),w,b
 11906   004240  0864               	sublw	100
 11907   004242  6FA4               	movwf	ccp1_pwm_set_duty@duty_& (0+255),b
 11908   004244                     
 11909                           ; BSR set to: 1
 11910                           ;MKAL_layer/CCP1/hal_ccp1.c: 122:     l_duty_temp = (uint16)((float)4 * ((float)PR2 + 1.
      +                          0) * (float)((float)duty_ / 100.0));
 11911   004244  0E00               	movlw	0
 11912   004246  6E4B               	movwf	___flmul@a^0,c
 11913   004248  0E00               	movlw	0
 11914   00424A  6E4C               	movwf	(___flmul@a+1)^0,c
 11915   00424C  0E80               	movlw	128
 11916   00424E  6E4D               	movwf	(___flmul@a+2)^0,c
 11917   004250  0E40               	movlw	64
 11918   004252  6E4E               	movwf	(___flmul@a+3)^0,c
 11919   004254  0E00               	movlw	0
 11920   004256  6E3B               	movwf	___fladd@a^0,c
 11921   004258  0E00               	movlw	0
 11922   00425A  6E3C               	movwf	(___fladd@a+1)^0,c
 11923   00425C  0E80               	movlw	128
 11924   00425E  6E3D               	movwf	(___fladd@a+2)^0,c
 11925   004260  0E3F               	movlw	63
 11926   004262  6E3E               	movwf	(___fladd@a+3)^0,c
 11927   004264  50CB               	movf	203,w,c	;volatile
 11928   004266  6E10               	movwf	___xxtofl@val^0,c
 11929   004268  6A11               	clrf	(___xxtofl@val+1)^0,c
 11930   00426A  6A12               	clrf	(___xxtofl@val+2)^0,c
 11931   00426C  6A13               	clrf	(___xxtofl@val+3)^0,c
 11932   00426E  0E00               	movlw	0
 11933   004270  EC1D  F01A         	call	___xxtofl
 11934   004274  C010  F037         	movff	?___xxtofl,___fladd@b
 11935   004278  C011  F038         	movff	?___xxtofl+1,___fladd@b+1
 11936   00427C  C012  F039         	movff	?___xxtofl+2,___fladd@b+2
 11937   004280  C013  F03A         	movff	?___xxtofl+3,___fladd@b+3
 11938   004284  ECE5  F010         	call	___fladd	;wreg free
 11939   004288  C037  F047         	movff	?___fladd,___flmul@b
 11940   00428C  C038  F048         	movff	?___fladd+1,___flmul@b+1
 11941   004290  C039  F049         	movff	?___fladd+2,___flmul@b+2
 11942   004294  C03A  F04A         	movff	?___fladd+3,___flmul@b+3
 11943   004298  EC45  F013         	call	___flmul	;wreg free
 11944   00429C  C047  F19F         	movff	?___flmul,_ccp1_pwm_set_duty$5719
 11945   0042A0  C048  F1A0         	movff	?___flmul+1,_ccp1_pwm_set_duty$5719+1
 11946   0042A4  C049  F1A1         	movff	?___flmul+2,_ccp1_pwm_set_duty$5719+2
 11947   0042A8  C04A  F1A2         	movff	?___flmul+3,_ccp1_pwm_set_duty$5719+3
 11948   0042AC                     
 11949                           ;MKAL_layer/CCP1/hal_ccp1.c: 122:     l_duty_temp = (uint16)((float)4 * ((float)PR2 + 1.
      +                          0) * (float)((float)duty_ / 100.0));
 11950   0042AC  0E00               	movlw	0
 11951   0042AE  6E22               	movwf	___fldiv@a^0,c
 11952   0042B0  0E00               	movlw	0
 11953   0042B2  6E23               	movwf	(___fldiv@a+1)^0,c
 11954   0042B4  0EC8               	movlw	200
 11955   0042B6  6E24               	movwf	(___fldiv@a+2)^0,c
 11956   0042B8  0E42               	movlw	66
 11957   0042BA  6E25               	movwf	(___fldiv@a+3)^0,c
 11958   0042BC  0101               	movlb	1	; () banked
 11959   0042BE  51A4               	movf	ccp1_pwm_set_duty@duty_& (0+255),w,b
 11960   0042C0  6E10               	movwf	___xxtofl@val^0,c
 11961   0042C2  6A11               	clrf	(___xxtofl@val+1)^0,c
 11962   0042C4  6A12               	clrf	(___xxtofl@val+2)^0,c
 11963   0042C6  6A13               	clrf	(___xxtofl@val+3)^0,c
 11964   0042C8  0E00               	movlw	0
 11965   0042CA  EC1D  F01A         	call	___xxtofl
 11966   0042CE  C010  F01E         	movff	?___xxtofl,___fldiv@b
 11967   0042D2  C011  F01F         	movff	?___xxtofl+1,___fldiv@b+1
 11968   0042D6  C012  F020         	movff	?___xxtofl+2,___fldiv@b+2
 11969   0042DA  C013  F021         	movff	?___xxtofl+3,___fldiv@b+3
 11970   0042DE  EC69  F017         	call	___fldiv	;wreg free
 11971   0042E2  C01E  F04B         	movff	?___fldiv,___flmul@a
 11972   0042E6  C01F  F04C         	movff	?___fldiv+1,___flmul@a+1
 11973   0042EA  C020  F04D         	movff	?___fldiv+2,___flmul@a+2
 11974   0042EE  C021  F04E         	movff	?___fldiv+3,___flmul@a+3
 11975   0042F2  C19F  F047         	movff	_ccp1_pwm_set_duty$5719,___flmul@b
 11976   0042F6  C1A0  F048         	movff	_ccp1_pwm_set_duty$5719+1,___flmul@b+1
 11977   0042FA  C1A1  F049         	movff	_ccp1_pwm_set_duty$5719+2,___flmul@b+2
 11978   0042FE  C1A2  F04A         	movff	_ccp1_pwm_set_duty$5719+3,___flmul@b+3
 11979   004302  EC45  F013         	call	___flmul	;wreg free
 11980   004306  C047  F0F6         	movff	?___flmul,___fltol@f1
 11981   00430A  C048  F0F7         	movff	?___flmul+1,___fltol@f1+1
 11982   00430E  C049  F0F8         	movff	?___flmul+2,___fltol@f1+2
 11983   004312  C04A  F0F9         	movff	?___flmul+3,___fltol@f1+3
 11984   004316  ECE4  F01E         	call	___fltol	;wreg free
 11985   00431A  C0F6  F1A5         	movff	?___fltol,ccp1_pwm_set_duty@l_duty_temp
 11986   00431E  C0F7  F1A6         	movff	?___fltol+1,ccp1_pwm_set_duty@l_duty_temp+1
 11987   004322                     
 11988                           ;MKAL_layer/CCP1/hal_ccp1.c: 123:     CCP1CONbits.DC1B = (uint8)(l_duty_temp & 0x0003);
 11989   004322  C1A5  F19D         	movff	ccp1_pwm_set_duty@l_duty_temp,??_ccp1_pwm_set_duty
 11990   004326  0E03               	movlw	3
 11991   004328  0101               	movlb	1	; () banked
 11992   00432A  179D               	andwf	??_ccp1_pwm_set_duty& (0+255),f,b
 11993   00432C  3B9D               	swapf	??_ccp1_pwm_set_duty& (0+255),f,b
 11994   00432E  50BD               	movf	189,w,c	;volatile
 11995   004330  199D               	xorwf	??_ccp1_pwm_set_duty& (0+255),w,b
 11996   004332  0BCF               	andlw	-49
 11997   004334  199D               	xorwf	??_ccp1_pwm_set_duty& (0+255),w,b
 11998   004336  6EBD               	movwf	189,c	;volatile
 11999   004338                     
 12000                           ; BSR set to: 1
 12001                           ;MKAL_layer/CCP1/hal_ccp1.c: 124:     CCPR1L = (uint8)(l_duty_temp >> 2);
 12002   004338  C1A5  F19D         	movff	ccp1_pwm_set_duty@l_duty_temp,??_ccp1_pwm_set_duty
 12003   00433C  C1A6  F19E         	movff	ccp1_pwm_set_duty@l_duty_temp+1,??_ccp1_pwm_set_duty+1
 12004   004340  90D8               	bcf	status,0,c
 12005   004342  339E               	rrcf	(??_ccp1_pwm_set_duty+1)& (0+255),f,b
 12006   004344  339D               	rrcf	??_ccp1_pwm_set_duty& (0+255),f,b
 12007   004346  90D8               	bcf	status,0,c
 12008   004348  339E               	rrcf	(??_ccp1_pwm_set_duty+1)& (0+255),f,b
 12009   00434A  339D               	rrcf	??_ccp1_pwm_set_duty& (0+255),f,b
 12010   00434C  519D               	movf	??_ccp1_pwm_set_duty& (0+255),w,b
 12011   00434E  6EBE               	movwf	190,c	;volatile
 12012   004350                     
 12013                           ; BSR set to: 1
 12014   004350  0012               	return		;funcret
 12015   004352                     __end_of_ccp1_pwm_set_duty:
 12016                           	callstack 0
 12017                           
 12018 ;; *************** function ___xxtofl *****************
 12019 ;; Defined at:
 12020 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
 12021 ;; Parameters:    Size  Location     Type
 12022 ;;  sign            1    wreg     unsigned char 
 12023 ;;  val             4   15[COMRAM] long 
 12024 ;; Auto vars:     Size  Location     Type
 12025 ;;  sign            1   23[COMRAM] unsigned char 
 12026 ;;  arg             4   25[COMRAM] unsigned long 
 12027 ;;  exp             1   24[COMRAM] unsigned char 
 12028 ;; Return value:  Size  Location     Type
 12029 ;;                  4   15[COMRAM] unsigned char 
 12030 ;; Registers used:
 12031 ;;		wreg, status,2, status,0
 12032 ;; Tracked objects:
 12033 ;;		On entry : 0/0
 12034 ;;		On exit  : 0/0
 12035 ;;		Unchanged: 0/0
 12036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12037 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12038 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12039 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12040 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12041 ;;Total ram usage:       14 bytes
 12042 ;; Hardware stack levels used: 1
 12043 ;; Hardware stack levels required when called: 4
 12044 ;; This function calls:
 12045 ;;		Nothing
 12046 ;; This function is called by:
 12047 ;;		_ccp1_pwm_set_duty
 12048 ;;		_ccp2_pwm_set_duty
 12049 ;;		_I2C_Master_Mode_Clock_Configurations
 12050 ;;		_baudrate_calculate
 12051 ;; This function uses a non-reentrant model
 12052 ;;
 12053                           
 12054                           	psect	text67
 12055   00343A                     __ptext67:
 12056                           	callstack 0
 12057   00343A                     ___xxtofl:
 12058                           	callstack 23
 12059                           
 12060                           ; BSR set to: 1
 12061                           ;incstack = 0
 12062                           ;___xxtofl@sign stored from wreg
 12063   00343A  6E18               	movwf	___xxtofl@sign^0,c
 12064   00343C  5018               	movf	___xxtofl@sign^0,w,c
 12065   00343E  B4D8               	btfsc	status,2,c
 12066   003440  EF24  F01A         	goto	u11821
 12067   003444  EF26  F01A         	goto	u11820
 12068   003448                     u11821:
 12069   003448  EF48  F01A         	goto	l2501
 12070   00344C                     u11820:
 12071   00344C  BE13               	btfsc	(___xxtofl@val+3)^0,7,c
 12072   00344E  EF2D  F01A         	goto	u11830
 12073   003452  EF2B  F01A         	goto	u11831
 12074   003456                     u11831:
 12075   003456  EF48  F01A         	goto	l2501
 12076   00345A                     u11830:
 12077   00345A  C010  F014         	movff	___xxtofl@val,??___xxtofl
 12078   00345E  C011  F015         	movff	___xxtofl@val+1,??___xxtofl+1
 12079   003462  C012  F016         	movff	___xxtofl@val+2,??___xxtofl+2
 12080   003466  C013  F017         	movff	___xxtofl@val+3,??___xxtofl+3
 12081   00346A  1E14               	comf	??___xxtofl^0,f,c
 12082   00346C  1E15               	comf	(??___xxtofl+1)^0,f,c
 12083   00346E  1E16               	comf	(??___xxtofl+2)^0,f,c
 12084   003470  1E17               	comf	(??___xxtofl+3)^0,f,c
 12085   003472  2A14               	incf	??___xxtofl^0,f,c
 12086   003474  0E00               	movlw	0
 12087   003476  2215               	addwfc	(??___xxtofl+1)^0,f,c
 12088   003478  2216               	addwfc	(??___xxtofl+2)^0,f,c
 12089   00347A  2217               	addwfc	(??___xxtofl+3)^0,f,c
 12090   00347C  C014  F01A         	movff	??___xxtofl,___xxtofl@arg
 12091   003480  C015  F01B         	movff	??___xxtofl+1,___xxtofl@arg+1
 12092   003484  C016  F01C         	movff	??___xxtofl+2,___xxtofl@arg+2
 12093   003488  C017  F01D         	movff	??___xxtofl+3,___xxtofl@arg+3
 12094   00348C  EF50  F01A         	goto	l10846
 12095   003490                     l2501:
 12096   003490  C010  F01A         	movff	___xxtofl@val,___xxtofl@arg
 12097   003494  C011  F01B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12098   003498  C012  F01C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12099   00349C  C013  F01D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12100   0034A0                     l10846:
 12101   0034A0  5010               	movf	___xxtofl@val^0,w,c
 12102   0034A2  1011               	iorwf	(___xxtofl@val+1)^0,w,c
 12103   0034A4  1012               	iorwf	(___xxtofl@val+2)^0,w,c
 12104   0034A6  1013               	iorwf	(___xxtofl@val+3)^0,w,c
 12105   0034A8  A4D8               	btfss	status,2,c
 12106   0034AA  EF59  F01A         	goto	u11841
 12107   0034AE  EF5B  F01A         	goto	u11840
 12108   0034B2                     u11841:
 12109   0034B2  EF65  F01A         	goto	l10852
 12110   0034B6                     u11840:
 12111   0034B6  0E00               	movlw	0
 12112   0034B8  6E10               	movwf	?___xxtofl^0,c
 12113   0034BA  0E00               	movlw	0
 12114   0034BC  6E11               	movwf	(?___xxtofl+1)^0,c
 12115   0034BE  0E00               	movlw	0
 12116   0034C0  6E12               	movwf	(?___xxtofl+2)^0,c
 12117   0034C2  0E00               	movlw	0
 12118   0034C4  6E13               	movwf	(?___xxtofl+3)^0,c
 12119   0034C6  EFF6  F01A         	goto	l2504
 12120   0034CA                     l10852:
 12121   0034CA  0E96               	movlw	150
 12122   0034CC  6E19               	movwf	___xxtofl@exp^0,c
 12123   0034CE  EF6F  F01A         	goto	l10856
 12124   0034D2                     l10854:
 12125   0034D2  2A19               	incf	___xxtofl@exp^0,f,c
 12126   0034D4  90D8               	bcf	status,0,c
 12127   0034D6  321D               	rrcf	(___xxtofl@arg+3)^0,f,c
 12128   0034D8  321C               	rrcf	(___xxtofl@arg+2)^0,f,c
 12129   0034DA  321B               	rrcf	(___xxtofl@arg+1)^0,f,c
 12130   0034DC  321A               	rrcf	___xxtofl@arg^0,f,c
 12131   0034DE                     l10856:
 12132   0034DE  0E00               	movlw	0
 12133   0034E0  141A               	andwf	___xxtofl@arg^0,w,c
 12134   0034E2  6E14               	movwf	??___xxtofl^0,c
 12135   0034E4  0E00               	movlw	0
 12136   0034E6  141B               	andwf	(___xxtofl@arg+1)^0,w,c
 12137   0034E8  6E15               	movwf	(??___xxtofl+1)^0,c
 12138   0034EA  0E00               	movlw	0
 12139   0034EC  141C               	andwf	(___xxtofl@arg+2)^0,w,c
 12140   0034EE  6E16               	movwf	(??___xxtofl+2)^0,c
 12141   0034F0  0EFE               	movlw	254
 12142   0034F2  141D               	andwf	(___xxtofl@arg+3)^0,w,c
 12143   0034F4  6E17               	movwf	(??___xxtofl+3)^0,c
 12144   0034F6  5014               	movf	??___xxtofl^0,w,c
 12145   0034F8  1015               	iorwf	(??___xxtofl+1)^0,w,c
 12146   0034FA  1016               	iorwf	(??___xxtofl+2)^0,w,c
 12147   0034FC  1017               	iorwf	(??___xxtofl+3)^0,w,c
 12148   0034FE  A4D8               	btfss	status,2,c
 12149   003500  EF84  F01A         	goto	u11851
 12150   003504  EF86  F01A         	goto	u11850
 12151   003508                     u11851:
 12152   003508  EF69  F01A         	goto	l10854
 12153   00350C                     u11850:
 12154   00350C  EF94  F01A         	goto	l2508
 12155   003510                     l10858:
 12156   003510  2A19               	incf	___xxtofl@exp^0,f,c
 12157   003512  0E01               	movlw	1
 12158   003514  261A               	addwf	___xxtofl@arg^0,f,c
 12159   003516  0E00               	movlw	0
 12160   003518  221B               	addwfc	(___xxtofl@arg+1)^0,f,c
 12161   00351A  221C               	addwfc	(___xxtofl@arg+2)^0,f,c
 12162   00351C  221D               	addwfc	(___xxtofl@arg+3)^0,f,c
 12163   00351E  90D8               	bcf	status,0,c
 12164   003520  321D               	rrcf	(___xxtofl@arg+3)^0,f,c
 12165   003522  321C               	rrcf	(___xxtofl@arg+2)^0,f,c
 12166   003524  321B               	rrcf	(___xxtofl@arg+1)^0,f,c
 12167   003526  321A               	rrcf	___xxtofl@arg^0,f,c
 12168   003528                     l2508:
 12169   003528  0E00               	movlw	0
 12170   00352A  141A               	andwf	___xxtofl@arg^0,w,c
 12171   00352C  6E14               	movwf	??___xxtofl^0,c
 12172   00352E  0E00               	movlw	0
 12173   003530  141B               	andwf	(___xxtofl@arg+1)^0,w,c
 12174   003532  6E15               	movwf	(??___xxtofl+1)^0,c
 12175   003534  0E00               	movlw	0
 12176   003536  141C               	andwf	(___xxtofl@arg+2)^0,w,c
 12177   003538  6E16               	movwf	(??___xxtofl+2)^0,c
 12178   00353A  0EFF               	movlw	255
 12179   00353C  141D               	andwf	(___xxtofl@arg+3)^0,w,c
 12180   00353E  6E17               	movwf	(??___xxtofl+3)^0,c
 12181   003540  5014               	movf	??___xxtofl^0,w,c
 12182   003542  1015               	iorwf	(??___xxtofl+1)^0,w,c
 12183   003544  1016               	iorwf	(??___xxtofl+2)^0,w,c
 12184   003546  1017               	iorwf	(??___xxtofl+3)^0,w,c
 12185   003548  A4D8               	btfss	status,2,c
 12186   00354A  EFA9  F01A         	goto	u11861
 12187   00354E  EFAB  F01A         	goto	u11860
 12188   003552                     u11861:
 12189   003552  EF88  F01A         	goto	l10858
 12190   003556                     u11860:
 12191   003556  EFB3  F01A         	goto	l10866
 12192   00355A                     l10864:
 12193   00355A  0619               	decf	___xxtofl@exp^0,f,c
 12194   00355C  90D8               	bcf	status,0,c
 12195   00355E  361A               	rlcf	___xxtofl@arg^0,f,c
 12196   003560  361B               	rlcf	(___xxtofl@arg+1)^0,f,c
 12197   003562  361C               	rlcf	(___xxtofl@arg+2)^0,f,c
 12198   003564  361D               	rlcf	(___xxtofl@arg+3)^0,f,c
 12199   003566                     l10866:
 12200   003566  BE1C               	btfsc	(___xxtofl@arg+2)^0,7,c
 12201   003568  EFB8  F01A         	goto	u11871
 12202   00356C  EFBA  F01A         	goto	u11870
 12203   003570                     u11871:
 12204   003570  EFC2  F01A         	goto	l2515
 12205   003574                     u11870:
 12206   003574  0E02               	movlw	2
 12207   003576  6019               	cpfslt	___xxtofl@exp^0,c
 12208   003578  EFC0  F01A         	goto	u11881
 12209   00357C  EFC2  F01A         	goto	u11880
 12210   003580                     u11881:
 12211   003580  EFAD  F01A         	goto	l10864
 12212   003584                     u11880:
 12213   003584                     l2515:
 12214   003584  B019               	btfsc	___xxtofl@exp^0,0,c
 12215   003586  EFC7  F01A         	goto	u11891
 12216   00358A  EFC9  F01A         	goto	u11890
 12217   00358E                     u11891:
 12218   00358E  EFCA  F01A         	goto	l10872
 12219   003592                     u11890:
 12220   003592  9E1C               	bcf	(___xxtofl@arg+2)^0,7,c
 12221   003594                     l10872:
 12222   003594  90D8               	bcf	status,0,c
 12223   003596  3219               	rrcf	___xxtofl@exp^0,f,c
 12224   003598  C019  F014         	movff	___xxtofl@exp,??___xxtofl
 12225   00359C  6A15               	clrf	(??___xxtofl+1)^0,c
 12226   00359E  6A16               	clrf	(??___xxtofl+2)^0,c
 12227   0035A0  6A17               	clrf	(??___xxtofl+3)^0,c
 12228   0035A2  C014  F017         	movff	??___xxtofl,??___xxtofl+3
 12229   0035A6  6A16               	clrf	(??___xxtofl+2)^0,c
 12230   0035A8  6A15               	clrf	(??___xxtofl+1)^0,c
 12231   0035AA  6A14               	clrf	??___xxtofl^0,c
 12232   0035AC  5014               	movf	??___xxtofl^0,w,c
 12233   0035AE  121A               	iorwf	___xxtofl@arg^0,f,c
 12234   0035B0  5015               	movf	(??___xxtofl+1)^0,w,c
 12235   0035B2  121B               	iorwf	(___xxtofl@arg+1)^0,f,c
 12236   0035B4  5016               	movf	(??___xxtofl+2)^0,w,c
 12237   0035B6  121C               	iorwf	(___xxtofl@arg+2)^0,f,c
 12238   0035B8  5017               	movf	(??___xxtofl+3)^0,w,c
 12239   0035BA  121D               	iorwf	(___xxtofl@arg+3)^0,f,c
 12240   0035BC  5018               	movf	___xxtofl@sign^0,w,c
 12241   0035BE  B4D8               	btfsc	status,2,c
 12242   0035C0  EFE4  F01A         	goto	u11901
 12243   0035C4  EFE6  F01A         	goto	u11900
 12244   0035C8                     u11901:
 12245   0035C8  EFEE  F01A         	goto	l10882
 12246   0035CC                     u11900:
 12247   0035CC  BE13               	btfsc	(___xxtofl@val+3)^0,7,c
 12248   0035CE  EFED  F01A         	goto	u11910
 12249   0035D2  EFEB  F01A         	goto	u11911
 12250   0035D6                     u11911:
 12251   0035D6  EFEE  F01A         	goto	l10882
 12252   0035DA                     u11910:
 12253   0035DA  8E1D               	bsf	(___xxtofl@arg+3)^0,7,c
 12254   0035DC                     l10882:
 12255   0035DC  C01A  F010         	movff	___xxtofl@arg,?___xxtofl
 12256   0035E0  C01B  F011         	movff	___xxtofl@arg+1,?___xxtofl+1
 12257   0035E4  C01C  F012         	movff	___xxtofl@arg+2,?___xxtofl+2
 12258   0035E8  C01D  F013         	movff	___xxtofl@arg+3,?___xxtofl+3
 12259   0035EC                     l2504:
 12260   0035EC  0012               	return		;funcret
 12261   0035EE                     __end_of___xxtofl:
 12262                           	callstack 0
 12263                           
 12264 ;; *************** function ___fltol *****************
 12265 ;; Defined at:
 12266 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
 12267 ;; Parameters:    Size  Location     Type
 12268 ;;  f1              4    0[BANK0 ] unsigned char 
 12269 ;; Auto vars:     Size  Location     Type
 12270 ;;  exp1            1    1[BANK1 ] unsigned char 
 12271 ;;  sign1           1    0[BANK1 ] unsigned char 
 12272 ;; Return value:  Size  Location     Type
 12273 ;;                  4    0[BANK0 ] long 
 12274 ;; Registers used:
 12275 ;;		wreg, status,2, status,0
 12276 ;; Tracked objects:
 12277 ;;		On entry : 0/0
 12278 ;;		On exit  : 0/0
 12279 ;;		Unchanged: 0/0
 12280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12281 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12282 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12283 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12284 ;;      Totals:         0       8       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12285 ;;Total ram usage:       10 bytes
 12286 ;; Hardware stack levels used: 1
 12287 ;; Hardware stack levels required when called: 4
 12288 ;; This function calls:
 12289 ;;		Nothing
 12290 ;; This function is called by:
 12291 ;;		_ccp1_pwm_set_duty
 12292 ;;		_ccp2_pwm_set_duty
 12293 ;;		_I2C_Master_Mode_Clock_Configurations
 12294 ;;		_baudrate_calculate
 12295 ;; This function uses a non-reentrant model
 12296 ;;
 12297                           
 12298                           	psect	text68
 12299   003DC8                     __ptext68:
 12300                           	callstack 0
 12301   003DC8                     ___fltol:
 12302                           	callstack 23
 12303   003DC8  0100               	movlb	0	; () banked
 12304   003DCA  35F8               	rlcf	(___fltol@f1+2)& (0+255),w,b
 12305   003DCC  35F9               	rlcf	(___fltol@f1+3)& (0+255),w,b
 12306   003DCE  0101               	movlb	1	; () banked
 12307   003DD0  6F9C               	movwf	___fltol@exp1& (0+255),b
 12308   003DD2  519C               	movf	___fltol@exp1& (0+255),w,b
 12309   003DD4  A4D8               	btfss	status,2,c
 12310   003DD6  EFEF  F01E         	goto	u11751
 12311   003DDA  EFF1  F01E         	goto	u11750
 12312   003DDE                     u11751:
 12313   003DDE  EFFC  F01E         	goto	l10802
 12314   003DE2                     u11750:
 12315   003DE2                     l10798:
 12316                           
 12317                           ; BSR set to: 1
 12318   003DE2  0E00               	movlw	0
 12319   003DE4  0100               	movlb	0	; () banked
 12320   003DE6  6FF6               	movwf	?___fltol& (0+255),b
 12321   003DE8  0E00               	movlw	0
 12322   003DEA  6FF7               	movwf	(?___fltol+1)& (0+255),b
 12323   003DEC  0E00               	movlw	0
 12324   003DEE  6FF8               	movwf	(?___fltol+2)& (0+255),b
 12325   003DF0  0E00               	movlw	0
 12326   003DF2  6FF9               	movwf	(?___fltol+3)& (0+255),b
 12327   003DF4  EF72  F01F         	goto	l2143
 12328   003DF8                     l10802:
 12329                           
 12330                           ; BSR set to: 1
 12331   003DF8  C0F6  F0FA         	movff	___fltol@f1,??___fltol
 12332   003DFC  C0F7  F0FB         	movff	___fltol@f1+1,??___fltol+1
 12333   003E00  C0F8  F0FC         	movff	___fltol@f1+2,??___fltol+2
 12334   003E04  C0F9  F0FD         	movff	___fltol@f1+3,??___fltol+3
 12335   003E08  0E20               	movlw	32
 12336   003E0A  EF0D  F01F         	goto	u11760
 12337   003E0E                     u11765:
 12338   003E0E  0100               	movlb	0	; () banked
 12339   003E10  90D8               	bcf	status,0,c
 12340   003E12  33FD               	rrcf	(??___fltol+3)& (0+255),f,b
 12341   003E14  33FC               	rrcf	(??___fltol+2)& (0+255),f,b
 12342   003E16  33FB               	rrcf	(??___fltol+1)& (0+255),f,b
 12343   003E18  33FA               	rrcf	??___fltol& (0+255),f,b
 12344   003E1A                     u11760:
 12345   003E1A  2EE8               	decfsz	wreg,f,c
 12346   003E1C  EF07  F01F         	goto	u11765
 12347   003E20  51FA               	movf	??___fltol& (0+255),w,b
 12348   003E22  0101               	movlb	1	; () banked
 12349   003E24  6F9B               	movwf	___fltol@sign1& (0+255),b
 12350   003E26                     
 12351                           ; BSR set to: 1
 12352   003E26  0100               	movlb	0	; () banked
 12353   003E28  8FF8               	bsf	(___fltol@f1+2)& (0+255),7,b
 12354   003E2A                     
 12355                           ; BSR set to: 0
 12356   003E2A  0EFF               	movlw	255
 12357   003E2C  17F6               	andwf	___fltol@f1& (0+255),f,b
 12358   003E2E  0EFF               	movlw	255
 12359   003E30  17F7               	andwf	(___fltol@f1+1)& (0+255),f,b
 12360   003E32  0EFF               	movlw	255
 12361   003E34  17F8               	andwf	(___fltol@f1+2)& (0+255),f,b
 12362   003E36  0E00               	movlw	0
 12363   003E38  17F9               	andwf	(___fltol@f1+3)& (0+255),f,b
 12364   003E3A                     
 12365                           ; BSR set to: 0
 12366   003E3A  0E96               	movlw	150
 12367   003E3C  0101               	movlb	1	; () banked
 12368   003E3E  5F9C               	subwf	___fltol@exp1& (0+255),f,b
 12369   003E40                     
 12370                           ; BSR set to: 1
 12371   003E40  BF9C               	btfsc	___fltol@exp1& (0+255),7,b
 12372   003E42  EF27  F01F         	goto	u11770
 12373   003E46  EF25  F01F         	goto	u11771
 12374   003E4A                     u11771:
 12375   003E4A  EF3F  F01F         	goto	l10822
 12376   003E4E                     u11770:
 12377   003E4E                     
 12378                           ; BSR set to: 1
 12379   003E4E  519C               	movf	___fltol@exp1& (0+255),w,b
 12380   003E50  0A80               	xorlw	128
 12381   003E52  0F97               	addlw	151
 12382   003E54  B0D8               	btfsc	status,0,c
 12383   003E56  EF2F  F01F         	goto	u11781
 12384   003E5A  EF31  F01F         	goto	u11780
 12385   003E5E                     u11781:
 12386   003E5E  EF33  F01F         	goto	l10818
 12387   003E62                     u11780:
 12388   003E62  EFF1  F01E         	goto	l10798
 12389   003E66                     l10818:
 12390                           
 12391                           ; BSR set to: 1
 12392   003E66  0100               	movlb	0	; () banked
 12393   003E68  90D8               	bcf	status,0,c
 12394   003E6A  33F9               	rrcf	(___fltol@f1+3)& (0+255),f,b
 12395   003E6C  33F8               	rrcf	(___fltol@f1+2)& (0+255),f,b
 12396   003E6E  33F7               	rrcf	(___fltol@f1+1)& (0+255),f,b
 12397   003E70  33F6               	rrcf	___fltol@f1& (0+255),f,b
 12398   003E72                     
 12399                           ; BSR set to: 0
 12400   003E72  0101               	movlb	1	; () banked
 12401   003E74  3F9C               	incfsz	___fltol@exp1& (0+255),f,b
 12402   003E76  EF33  F01F         	goto	l10818
 12403   003E7A  EF59  F01F         	goto	l10832
 12404   003E7E                     l10822:
 12405                           
 12406                           ; BSR set to: 1
 12407   003E7E  0E1F               	movlw	31
 12408   003E80  659C               	cpfsgt	___fltol@exp1& (0+255),b
 12409   003E82  EF45  F01F         	goto	u11791
 12410   003E86  EF47  F01F         	goto	u11790
 12411   003E8A                     u11791:
 12412   003E8A  EF51  F01F         	goto	l10830
 12413   003E8E                     u11790:
 12414   003E8E  EFF1  F01E         	goto	l10798
 12415   003E92                     l10828:
 12416                           
 12417                           ; BSR set to: 1
 12418   003E92  0100               	movlb	0	; () banked
 12419   003E94  90D8               	bcf	status,0,c
 12420   003E96  37F6               	rlcf	___fltol@f1& (0+255),f,b
 12421   003E98  37F7               	rlcf	(___fltol@f1+1)& (0+255),f,b
 12422   003E9A  37F8               	rlcf	(___fltol@f1+2)& (0+255),f,b
 12423   003E9C  37F9               	rlcf	(___fltol@f1+3)& (0+255),f,b
 12424   003E9E  0101               	movlb	1	; () banked
 12425   003EA0  079C               	decf	___fltol@exp1& (0+255),f,b
 12426   003EA2                     l10830:
 12427                           
 12428                           ; BSR set to: 1
 12429   003EA2  519C               	movf	___fltol@exp1& (0+255),w,b
 12430   003EA4  A4D8               	btfss	status,2,c
 12431   003EA6  EF57  F01F         	goto	u11801
 12432   003EAA  EF59  F01F         	goto	u11800
 12433   003EAE                     u11801:
 12434   003EAE  EF49  F01F         	goto	l10828
 12435   003EB2                     u11800:
 12436   003EB2                     l10832:
 12437                           
 12438                           ; BSR set to: 1
 12439   003EB2  519B               	movf	___fltol@sign1& (0+255),w,b
 12440   003EB4  B4D8               	btfsc	status,2,c
 12441   003EB6  EF5F  F01F         	goto	u11811
 12442   003EBA  EF61  F01F         	goto	u11810
 12443   003EBE                     u11811:
 12444   003EBE  EF6A  F01F         	goto	l10836
 12445   003EC2                     u11810:
 12446   003EC2                     
 12447                           ; BSR set to: 1
 12448   003EC2  0100               	movlb	0	; () banked
 12449   003EC4  1FF9               	comf	(___fltol@f1+3)& (0+255),f,b
 12450   003EC6  1FF8               	comf	(___fltol@f1+2)& (0+255),f,b
 12451   003EC8  1FF7               	comf	(___fltol@f1+1)& (0+255),f,b
 12452   003ECA  6DF6               	negf	___fltol@f1& (0+255),b
 12453   003ECC  0E00               	movlw	0
 12454   003ECE  23F7               	addwfc	(___fltol@f1+1)& (0+255),f,b
 12455   003ED0  23F8               	addwfc	(___fltol@f1+2)& (0+255),f,b
 12456   003ED2  23F9               	addwfc	(___fltol@f1+3)& (0+255),f,b
 12457   003ED4                     l10836:
 12458   003ED4  C0F6  F0F6         	movff	___fltol@f1,?___fltol
 12459   003ED8  C0F7  F0F7         	movff	___fltol@f1+1,?___fltol+1
 12460   003EDC  C0F8  F0F8         	movff	___fltol@f1+2,?___fltol+2
 12461   003EE0  C0F9  F0F9         	movff	___fltol@f1+3,?___fltol+3
 12462   003EE4                     l2143:
 12463   003EE4  0012               	return		;funcret
 12464   003EE6                     __end_of___fltol:
 12465                           	callstack 0
 12466                           
 12467 ;; *************** function ___flmul *****************
 12468 ;; Defined at:
 12469 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
 12470 ;; Parameters:    Size  Location     Type
 12471 ;;  b               4   70[COMRAM] long 
 12472 ;;  a               4   74[COMRAM] long 
 12473 ;; Auto vars:     Size  Location     Type
 12474 ;;  prod            4   89[COMRAM] struct .
 12475 ;;  grs             4   84[COMRAM] unsigned long 
 12476 ;;  temp            2   93[COMRAM] struct .
 12477 ;;  bexp            1   88[COMRAM] unsigned char 
 12478 ;;  aexp            1   83[COMRAM] unsigned char 
 12479 ;;  sign            1   82[COMRAM] unsigned char 
 12480 ;; Return value:  Size  Location     Type
 12481 ;;                  4   70[COMRAM] unsigned char 
 12482 ;; Registers used:
 12483 ;;		wreg, status,2, status,0, prodl, prodh
 12484 ;; Tracked objects:
 12485 ;;		On entry : 0/0
 12486 ;;		On exit  : 0/0
 12487 ;;		Unchanged: 0/0
 12488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12489 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12490 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12491 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12492 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12493 ;;Total ram usage:       25 bytes
 12494 ;; Hardware stack levels used: 1
 12495 ;; Hardware stack levels required when called: 4
 12496 ;; This function calls:
 12497 ;;		Nothing
 12498 ;; This function is called by:
 12499 ;;		_ccp1_pwm_set_duty
 12500 ;;		_ccp2_pwm_set_duty
 12501 ;; This function uses a non-reentrant model
 12502 ;;
 12503                           
 12504                           	psect	text69
 12505   00268A                     __ptext69:
 12506                           	callstack 0
 12507   00268A                     ___flmul:
 12508                           	callstack 25
 12509   00268A  504A               	movf	(___flmul@b+3)^0,w,c
 12510   00268C  0B80               	andlw	128
 12511   00268E  6E53               	movwf	___flmul@sign^0,c
 12512   002690  504A               	movf	(___flmul@b+3)^0,w,c
 12513   002692  244A               	addwf	(___flmul@b+3)^0,w,c
 12514   002694  6E59               	movwf	___flmul@bexp^0,c
 12515   002696  AE49               	btfss	(___flmul@b+2)^0,7,c
 12516   002698  EF50  F013         	goto	u13141
 12517   00269C  EF52  F013         	goto	u13140
 12518   0026A0                     u13141:
 12519   0026A0  EF53  F013         	goto	l11956
 12520   0026A4                     u13140:
 12521   0026A4  8059               	bsf	___flmul@bexp^0,0,c
 12522   0026A6                     l11956:
 12523   0026A6  5059               	movf	___flmul@bexp^0,w,c
 12524   0026A8  B4D8               	btfsc	status,2,c
 12525   0026AA  EF59  F013         	goto	u13151
 12526   0026AE  EF5B  F013         	goto	u13150
 12527   0026B2                     u13151:
 12528   0026B2  EF6E  F013         	goto	l11964
 12529   0026B6                     u13150:
 12530   0026B6  2859               	incf	___flmul@bexp^0,w,c
 12531   0026B8  A4D8               	btfss	status,2,c
 12532   0026BA  EF61  F013         	goto	u13161
 12533   0026BE  EF63  F013         	goto	u13160
 12534   0026C2                     u13161:
 12535   0026C2  EF6B  F013         	goto	l11962
 12536   0026C6                     u13160:
 12537   0026C6  0E00               	movlw	0
 12538   0026C8  6E47               	movwf	___flmul@b^0,c
 12539   0026CA  0E00               	movlw	0
 12540   0026CC  6E48               	movwf	(___flmul@b+1)^0,c
 12541   0026CE  0E00               	movlw	0
 12542   0026D0  6E49               	movwf	(___flmul@b+2)^0,c
 12543   0026D2  0E00               	movlw	0
 12544   0026D4  6E4A               	movwf	(___flmul@b+3)^0,c
 12545   0026D6                     l11962:
 12546   0026D6  8E49               	bsf	(___flmul@b+2)^0,7,c
 12547   0026D8  EF76  F013         	goto	l11966
 12548   0026DC                     l11964:
 12549   0026DC  0E00               	movlw	0
 12550   0026DE  6E47               	movwf	___flmul@b^0,c
 12551   0026E0  0E00               	movlw	0
 12552   0026E2  6E48               	movwf	(___flmul@b+1)^0,c
 12553   0026E4  0E00               	movlw	0
 12554   0026E6  6E49               	movwf	(___flmul@b+2)^0,c
 12555   0026E8  0E00               	movlw	0
 12556   0026EA  6E4A               	movwf	(___flmul@b+3)^0,c
 12557   0026EC                     l11966:
 12558   0026EC  504E               	movf	(___flmul@a+3)^0,w,c
 12559   0026EE  0B80               	andlw	128
 12560   0026F0  1A53               	xorwf	___flmul@sign^0,f,c
 12561   0026F2  504E               	movf	(___flmul@a+3)^0,w,c
 12562   0026F4  244E               	addwf	(___flmul@a+3)^0,w,c
 12563   0026F6  6E54               	movwf	___flmul@aexp^0,c
 12564   0026F8  AE4D               	btfss	(___flmul@a+2)^0,7,c
 12565   0026FA  EF81  F013         	goto	u13171
 12566   0026FE  EF83  F013         	goto	u13170
 12567   002702                     u13171:
 12568   002702  EF84  F013         	goto	l11974
 12569   002706                     u13170:
 12570   002706  8054               	bsf	___flmul@aexp^0,0,c
 12571   002708                     l11974:
 12572   002708  5054               	movf	___flmul@aexp^0,w,c
 12573   00270A  B4D8               	btfsc	status,2,c
 12574   00270C  EF8A  F013         	goto	u13181
 12575   002710  EF8C  F013         	goto	u13180
 12576   002714                     u13181:
 12577   002714  EF9F  F013         	goto	l11982
 12578   002718                     u13180:
 12579   002718  2854               	incf	___flmul@aexp^0,w,c
 12580   00271A  A4D8               	btfss	status,2,c
 12581   00271C  EF92  F013         	goto	u13191
 12582   002720  EF94  F013         	goto	u13190
 12583   002724                     u13191:
 12584   002724  EF9C  F013         	goto	l11980
 12585   002728                     u13190:
 12586   002728  0E00               	movlw	0
 12587   00272A  6E4B               	movwf	___flmul@a^0,c
 12588   00272C  0E00               	movlw	0
 12589   00272E  6E4C               	movwf	(___flmul@a+1)^0,c
 12590   002730  0E00               	movlw	0
 12591   002732  6E4D               	movwf	(___flmul@a+2)^0,c
 12592   002734  0E00               	movlw	0
 12593   002736  6E4E               	movwf	(___flmul@a+3)^0,c
 12594   002738                     l11980:
 12595   002738  8E4D               	bsf	(___flmul@a+2)^0,7,c
 12596   00273A  EFA7  F013         	goto	l2460
 12597   00273E                     l11982:
 12598   00273E  0E00               	movlw	0
 12599   002740  6E4B               	movwf	___flmul@a^0,c
 12600   002742  0E00               	movlw	0
 12601   002744  6E4C               	movwf	(___flmul@a+1)^0,c
 12602   002746  0E00               	movlw	0
 12603   002748  6E4D               	movwf	(___flmul@a+2)^0,c
 12604   00274A  0E00               	movlw	0
 12605   00274C  6E4E               	movwf	(___flmul@a+3)^0,c
 12606   00274E                     l2460:
 12607   00274E  5054               	movf	___flmul@aexp^0,w,c
 12608   002750  B4D8               	btfsc	status,2,c
 12609   002752  EFAD  F013         	goto	u13201
 12610   002756  EFAF  F013         	goto	u13200
 12611   00275A                     u13201:
 12612   00275A  EFB7  F013         	goto	l11986
 12613   00275E                     u13200:
 12614   00275E  5059               	movf	___flmul@bexp^0,w,c
 12615   002760  A4D8               	btfss	status,2,c
 12616   002762  EFB5  F013         	goto	u13211
 12617   002766  EFB7  F013         	goto	u13210
 12618   00276A                     u13211:
 12619   00276A  EFC1  F013         	goto	l11990
 12620   00276E                     u13210:
 12621   00276E                     l11986:
 12622   00276E  0E00               	movlw	0
 12623   002770  6E47               	movwf	?___flmul^0,c
 12624   002772  0E00               	movlw	0
 12625   002774  6E48               	movwf	(?___flmul+1)^0,c
 12626   002776  0E00               	movlw	0
 12627   002778  6E49               	movwf	(?___flmul+2)^0,c
 12628   00277A  0E00               	movlw	0
 12629   00277C  6E4A               	movwf	(?___flmul+3)^0,c
 12630   00277E  EF59  F015         	goto	l2464
 12631   002782                     l11990:
 12632   002782  504D               	movf	(___flmul@a+2)^0,w,c
 12633   002784  0247               	mulwf	___flmul@b^0,c
 12634   002786  CFF3 F05E          	movff	prodl,___flmul@temp
 12635   00278A  CFF4 F05F          	movff	prodh,___flmul@temp+1
 12636   00278E  505E               	movf	___flmul@temp^0,w,c
 12637   002790  6E55               	movwf	___flmul@grs^0,c
 12638   002792  6A56               	clrf	(___flmul@grs+1)^0,c
 12639   002794  6A57               	clrf	(___flmul@grs+2)^0,c
 12640   002796  6A58               	clrf	(___flmul@grs+3)^0,c
 12641   002798  505F               	movf	(___flmul@temp+1)^0,w,c
 12642   00279A  6E5A               	movwf	___flmul@prod^0,c
 12643   00279C  6A5B               	clrf	(___flmul@prod+1)^0,c
 12644   00279E  6A5C               	clrf	(___flmul@prod+2)^0,c
 12645   0027A0  6A5D               	clrf	(___flmul@prod+3)^0,c
 12646   0027A2  504C               	movf	(___flmul@a+1)^0,w,c
 12647   0027A4  0248               	mulwf	(___flmul@b+1)^0,c
 12648   0027A6  CFF3 F05E          	movff	prodl,___flmul@temp
 12649   0027AA  CFF4 F05F          	movff	prodh,___flmul@temp+1
 12650   0027AE  505E               	movf	___flmul@temp^0,w,c
 12651   0027B0  2655               	addwf	___flmul@grs^0,f,c
 12652   0027B2  0E00               	movlw	0
 12653   0027B4  2256               	addwfc	(___flmul@grs+1)^0,f,c
 12654   0027B6  2257               	addwfc	(___flmul@grs+2)^0,f,c
 12655   0027B8  2258               	addwfc	(___flmul@grs+3)^0,f,c
 12656   0027BA  505F               	movf	(___flmul@temp+1)^0,w,c
 12657   0027BC  265A               	addwf	___flmul@prod^0,f,c
 12658   0027BE  0E00               	movlw	0
 12659   0027C0  225B               	addwfc	(___flmul@prod+1)^0,f,c
 12660   0027C2  225C               	addwfc	(___flmul@prod+2)^0,f,c
 12661   0027C4  225D               	addwfc	(___flmul@prod+3)^0,f,c
 12662   0027C6  504B               	movf	___flmul@a^0,w,c
 12663   0027C8  0249               	mulwf	(___flmul@b+2)^0,c
 12664   0027CA  CFF3 F05E          	movff	prodl,___flmul@temp
 12665   0027CE  CFF4 F05F          	movff	prodh,___flmul@temp+1
 12666   0027D2  505E               	movf	___flmul@temp^0,w,c
 12667   0027D4  2655               	addwf	___flmul@grs^0,f,c
 12668   0027D6  0E00               	movlw	0
 12669   0027D8  2256               	addwfc	(___flmul@grs+1)^0,f,c
 12670   0027DA  2257               	addwfc	(___flmul@grs+2)^0,f,c
 12671   0027DC  2258               	addwfc	(___flmul@grs+3)^0,f,c
 12672   0027DE  505F               	movf	(___flmul@temp+1)^0,w,c
 12673   0027E0  265A               	addwf	___flmul@prod^0,f,c
 12674   0027E2  0E00               	movlw	0
 12675   0027E4  225B               	addwfc	(___flmul@prod+1)^0,f,c
 12676   0027E6  225C               	addwfc	(___flmul@prod+2)^0,f,c
 12677   0027E8  225D               	addwfc	(___flmul@prod+3)^0,f,c
 12678   0027EA  C057  F058         	movff	___flmul@grs+2,___flmul@grs+3
 12679   0027EE  C056  F057         	movff	___flmul@grs+1,___flmul@grs+2
 12680   0027F2  C055  F056         	movff	___flmul@grs,___flmul@grs+1
 12681   0027F6  6A55               	clrf	___flmul@grs^0,c
 12682   0027F8  504B               	movf	___flmul@a^0,w,c
 12683   0027FA  0248               	mulwf	(___flmul@b+1)^0,c
 12684   0027FC  CFF3 F05E          	movff	prodl,___flmul@temp
 12685   002800  CFF4 F05F          	movff	prodh,___flmul@temp+1
 12686   002804  505E               	movf	___flmul@temp^0,w,c
 12687   002806  2655               	addwf	___flmul@grs^0,f,c
 12688   002808  505F               	movf	(___flmul@temp+1)^0,w,c
 12689   00280A  2256               	addwfc	(___flmul@grs+1)^0,f,c
 12690   00280C  0E00               	movlw	0
 12691   00280E  2257               	addwfc	(___flmul@grs+2)^0,f,c
 12692   002810  0E00               	movlw	0
 12693   002812  2258               	addwfc	(___flmul@grs+3)^0,f,c
 12694   002814  504C               	movf	(___flmul@a+1)^0,w,c
 12695   002816  0247               	mulwf	___flmul@b^0,c
 12696   002818  CFF3 F05E          	movff	prodl,___flmul@temp
 12697   00281C  CFF4 F05F          	movff	prodh,___flmul@temp+1
 12698   002820  505E               	movf	___flmul@temp^0,w,c
 12699   002822  2655               	addwf	___flmul@grs^0,f,c
 12700   002824  505F               	movf	(___flmul@temp+1)^0,w,c
 12701   002826  2256               	addwfc	(___flmul@grs+1)^0,f,c
 12702   002828  0E00               	movlw	0
 12703   00282A  2257               	addwfc	(___flmul@grs+2)^0,f,c
 12704   00282C  0E00               	movlw	0
 12705   00282E  2258               	addwfc	(___flmul@grs+3)^0,f,c
 12706   002830  C057  F058         	movff	___flmul@grs+2,___flmul@grs+3
 12707   002834  C056  F057         	movff	___flmul@grs+1,___flmul@grs+2
 12708   002838  C055  F056         	movff	___flmul@grs,___flmul@grs+1
 12709   00283C  6A55               	clrf	___flmul@grs^0,c
 12710   00283E  504B               	movf	___flmul@a^0,w,c
 12711   002840  0247               	mulwf	___flmul@b^0,c
 12712   002842  CFF3 F05E          	movff	prodl,___flmul@temp
 12713   002846  CFF4 F05F          	movff	prodh,___flmul@temp+1
 12714   00284A  505E               	movf	___flmul@temp^0,w,c
 12715   00284C  2655               	addwf	___flmul@grs^0,f,c
 12716   00284E  505F               	movf	(___flmul@temp+1)^0,w,c
 12717   002850  2256               	addwfc	(___flmul@grs+1)^0,f,c
 12718   002852  0E00               	movlw	0
 12719   002854  2257               	addwfc	(___flmul@grs+2)^0,f,c
 12720   002856  0E00               	movlw	0
 12721   002858  2258               	addwfc	(___flmul@grs+3)^0,f,c
 12722   00285A  504D               	movf	(___flmul@a+2)^0,w,c
 12723   00285C  0248               	mulwf	(___flmul@b+1)^0,c
 12724   00285E  CFF3 F05E          	movff	prodl,___flmul@temp
 12725   002862  CFF4 F05F          	movff	prodh,___flmul@temp+1
 12726   002866  505E               	movf	___flmul@temp^0,w,c
 12727   002868  265A               	addwf	___flmul@prod^0,f,c
 12728   00286A  505F               	movf	(___flmul@temp+1)^0,w,c
 12729   00286C  225B               	addwfc	(___flmul@prod+1)^0,f,c
 12730   00286E  0E00               	movlw	0
 12731   002870  225C               	addwfc	(___flmul@prod+2)^0,f,c
 12732   002872  0E00               	movlw	0
 12733   002874  225D               	addwfc	(___flmul@prod+3)^0,f,c
 12734   002876  504C               	movf	(___flmul@a+1)^0,w,c
 12735   002878  0249               	mulwf	(___flmul@b+2)^0,c
 12736   00287A  CFF3 F05E          	movff	prodl,___flmul@temp
 12737   00287E  CFF4 F05F          	movff	prodh,___flmul@temp+1
 12738   002882  505E               	movf	___flmul@temp^0,w,c
 12739   002884  265A               	addwf	___flmul@prod^0,f,c
 12740   002886  505F               	movf	(___flmul@temp+1)^0,w,c
 12741   002888  225B               	addwfc	(___flmul@prod+1)^0,f,c
 12742   00288A  0E00               	movlw	0
 12743   00288C  225C               	addwfc	(___flmul@prod+2)^0,f,c
 12744   00288E  0E00               	movlw	0
 12745   002890  225D               	addwfc	(___flmul@prod+3)^0,f,c
 12746   002892  504D               	movf	(___flmul@a+2)^0,w,c
 12747   002894  0249               	mulwf	(___flmul@b+2)^0,c
 12748   002896  CFF3 F05E          	movff	prodl,___flmul@temp
 12749   00289A  CFF4 F05F          	movff	prodh,___flmul@temp+1
 12750   00289E  505E               	movf	___flmul@temp^0,w,c
 12751   0028A0  6E4F               	movwf	??___flmul^0,c
 12752   0028A2  505F               	movf	(___flmul@temp+1)^0,w,c
 12753   0028A4  6E50               	movwf	(??___flmul+1)^0,c
 12754   0028A6  6A51               	clrf	(??___flmul+2)^0,c
 12755   0028A8  6A52               	clrf	(??___flmul+3)^0,c
 12756   0028AA  C051  F052         	movff	??___flmul+2,??___flmul+3
 12757   0028AE  C050  F051         	movff	??___flmul+1,??___flmul+2
 12758   0028B2  C04F  F050         	movff	??___flmul,??___flmul+1
 12759   0028B6  6A4F               	clrf	??___flmul^0,c
 12760   0028B8  504F               	movf	??___flmul^0,w,c
 12761   0028BA  265A               	addwf	___flmul@prod^0,f,c
 12762   0028BC  5050               	movf	(??___flmul+1)^0,w,c
 12763   0028BE  225B               	addwfc	(___flmul@prod+1)^0,f,c
 12764   0028C0  5051               	movf	(??___flmul+2)^0,w,c
 12765   0028C2  225C               	addwfc	(___flmul@prod+2)^0,f,c
 12766   0028C4  5052               	movf	(??___flmul+3)^0,w,c
 12767   0028C6  225D               	addwfc	(___flmul@prod+3)^0,f,c
 12768   0028C8  C055  F04F         	movff	___flmul@grs,??___flmul
 12769   0028CC  C056  F050         	movff	___flmul@grs+1,??___flmul+1
 12770   0028D0  C057  F051         	movff	___flmul@grs+2,??___flmul+2
 12771   0028D4  C058  F052         	movff	___flmul@grs+3,??___flmul+3
 12772   0028D8  0E19               	movlw	25
 12773   0028DA  EF74  F014         	goto	u13220
 12774   0028DE                     u13225:
 12775   0028DE  90D8               	bcf	status,0,c
 12776   0028E0  3252               	rrcf	(??___flmul+3)^0,f,c
 12777   0028E2  3251               	rrcf	(??___flmul+2)^0,f,c
 12778   0028E4  3250               	rrcf	(??___flmul+1)^0,f,c
 12779   0028E6  324F               	rrcf	??___flmul^0,f,c
 12780   0028E8                     u13220:
 12781   0028E8  2EE8               	decfsz	wreg,f,c
 12782   0028EA  EF6F  F014         	goto	u13225
 12783   0028EE  504F               	movf	??___flmul^0,w,c
 12784   0028F0  265A               	addwf	___flmul@prod^0,f,c
 12785   0028F2  5050               	movf	(??___flmul+1)^0,w,c
 12786   0028F4  225B               	addwfc	(___flmul@prod+1)^0,f,c
 12787   0028F6  5051               	movf	(??___flmul+2)^0,w,c
 12788   0028F8  225C               	addwfc	(___flmul@prod+2)^0,f,c
 12789   0028FA  5052               	movf	(??___flmul+3)^0,w,c
 12790   0028FC  225D               	addwfc	(___flmul@prod+3)^0,f,c
 12791   0028FE  C057  F058         	movff	___flmul@grs+2,___flmul@grs+3
 12792   002902  C056  F057         	movff	___flmul@grs+1,___flmul@grs+2
 12793   002906  C055  F056         	movff	___flmul@grs,___flmul@grs+1
 12794   00290A  6A55               	clrf	___flmul@grs^0,c
 12795   00290C  5054               	movf	___flmul@aexp^0,w,c
 12796   00290E  C059  F04F         	movff	___flmul@bexp,??___flmul
 12797   002912  6A50               	clrf	(??___flmul+1)^0,c
 12798   002914  264F               	addwf	??___flmul^0,f,c
 12799   002916  0E00               	movlw	0
 12800   002918  2250               	addwfc	(??___flmul+1)^0,f,c
 12801   00291A  0E82               	movlw	130
 12802   00291C  244F               	addwf	??___flmul^0,w,c
 12803   00291E  6E5E               	movwf	___flmul@temp^0,c
 12804   002920  0EFF               	movlw	255
 12805   002922  2050               	addwfc	(??___flmul+1)^0,w,c
 12806   002924  6E5F               	movwf	(___flmul@temp+1)^0,c
 12807   002926  EFAA  F014         	goto	l12038
 12808   00292A                     l12032:
 12809   00292A  90D8               	bcf	status,0,c
 12810   00292C  365A               	rlcf	___flmul@prod^0,f,c
 12811   00292E  365B               	rlcf	(___flmul@prod+1)^0,f,c
 12812   002930  365C               	rlcf	(___flmul@prod+2)^0,f,c
 12813   002932  365D               	rlcf	(___flmul@prod+3)^0,f,c
 12814   002934  AE58               	btfss	(___flmul@grs+3)^0,7,c
 12815   002936  EF9F  F014         	goto	u13231
 12816   00293A  EFA1  F014         	goto	u13230
 12817   00293E                     u13231:
 12818   00293E  EFA2  F014         	goto	l2467
 12819   002942                     u13230:
 12820   002942  805A               	bsf	___flmul@prod^0,0,c
 12821   002944                     l2467:
 12822   002944  90D8               	bcf	status,0,c
 12823   002946  3655               	rlcf	___flmul@grs^0,f,c
 12824   002948  3656               	rlcf	(___flmul@grs+1)^0,f,c
 12825   00294A  3657               	rlcf	(___flmul@grs+2)^0,f,c
 12826   00294C  3658               	rlcf	(___flmul@grs+3)^0,f,c
 12827   00294E  065E               	decf	___flmul@temp^0,f,c
 12828   002950  A0D8               	btfss	status,0,c
 12829   002952  065F               	decf	(___flmul@temp+1)^0,f,c
 12830   002954                     l12038:
 12831   002954  AE5C               	btfss	(___flmul@prod+2)^0,7,c
 12832   002956  EFAF  F014         	goto	u13241
 12833   00295A  EFB1  F014         	goto	u13240
 12834   00295E                     u13241:
 12835   00295E  EF95  F014         	goto	l12032
 12836   002962                     u13240:
 12837   002962  0E00               	movlw	0
 12838   002964  6E54               	movwf	___flmul@aexp^0,c
 12839   002966  AE58               	btfss	(___flmul@grs+3)^0,7,c
 12840   002968  EFB8  F014         	goto	u13251
 12841   00296C  EFBA  F014         	goto	u13250
 12842   002970                     u13251:
 12843   002970  EFDE  F014         	goto	l2469
 12844   002974                     u13250:
 12845   002974  0EFF               	movlw	255
 12846   002976  1455               	andwf	___flmul@grs^0,w,c
 12847   002978  6E4F               	movwf	??___flmul^0,c
 12848   00297A  0EFF               	movlw	255
 12849   00297C  1456               	andwf	(___flmul@grs+1)^0,w,c
 12850   00297E  6E50               	movwf	(??___flmul+1)^0,c
 12851   002980  0EFF               	movlw	255
 12852   002982  1457               	andwf	(___flmul@grs+2)^0,w,c
 12853   002984  6E51               	movwf	(??___flmul+2)^0,c
 12854   002986  0E7F               	movlw	127
 12855   002988  1458               	andwf	(___flmul@grs+3)^0,w,c
 12856   00298A  6E52               	movwf	(??___flmul+3)^0,c
 12857   00298C  504F               	movf	??___flmul^0,w,c
 12858   00298E  1050               	iorwf	(??___flmul+1)^0,w,c
 12859   002990  1051               	iorwf	(??___flmul+2)^0,w,c
 12860   002992  1052               	iorwf	(??___flmul+3)^0,w,c
 12861   002994  B4D8               	btfsc	status,2,c
 12862   002996  EFCF  F014         	goto	u13261
 12863   00299A  EFD1  F014         	goto	u13260
 12864   00299E                     u13261:
 12865   00299E  EFD5  F014         	goto	l2470
 12866   0029A2                     u13260:
 12867   0029A2                     l12046:
 12868   0029A2  0E01               	movlw	1
 12869   0029A4  6E54               	movwf	___flmul@aexp^0,c
 12870   0029A6  EFDE  F014         	goto	l2469
 12871   0029AA                     l2470:
 12872   0029AA  A05A               	btfss	___flmul@prod^0,0,c
 12873   0029AC  EFDA  F014         	goto	u13271
 12874   0029B0  EFDC  F014         	goto	u13270
 12875   0029B4                     u13271:
 12876   0029B4  EFDE  F014         	goto	l2469
 12877   0029B8                     u13270:
 12878   0029B8  EFD1  F014         	goto	l12046
 12879   0029BC                     l2469:
 12880   0029BC  5054               	movf	___flmul@aexp^0,w,c
 12881   0029BE  B4D8               	btfsc	status,2,c
 12882   0029C0  EFE4  F014         	goto	u13281
 12883   0029C4  EFE6  F014         	goto	u13280
 12884   0029C8                     u13281:
 12885   0029C8  EF0A  F015         	goto	l12058
 12886   0029CC                     u13280:
 12887   0029CC  0E01               	movlw	1
 12888   0029CE  265A               	addwf	___flmul@prod^0,f,c
 12889   0029D0  0E00               	movlw	0
 12890   0029D2  225B               	addwfc	(___flmul@prod+1)^0,f,c
 12891   0029D4  225C               	addwfc	(___flmul@prod+2)^0,f,c
 12892   0029D6  225D               	addwfc	(___flmul@prod+3)^0,f,c
 12893   0029D8  A05D               	btfss	(___flmul@prod+3)^0,0,c
 12894   0029DA  EFF1  F014         	goto	u13291
 12895   0029DE  EFF3  F014         	goto	u13290
 12896   0029E2                     u13291:
 12897   0029E2  EF0A  F015         	goto	l12058
 12898   0029E6                     u13290:
 12899   0029E6  C05A  F04F         	movff	___flmul@prod,??___flmul
 12900   0029EA  C05B  F050         	movff	___flmul@prod+1,??___flmul+1
 12901   0029EE  C05C  F051         	movff	___flmul@prod+2,??___flmul+2
 12902   0029F2  C05D  F052         	movff	___flmul@prod+3,??___flmul+3
 12903   0029F6  3452               	rlcf	(??___flmul+3)^0,w,c
 12904   0029F8  3252               	rrcf	(??___flmul+3)^0,f,c
 12905   0029FA  3251               	rrcf	(??___flmul+2)^0,f,c
 12906   0029FC  3250               	rrcf	(??___flmul+1)^0,f,c
 12907   0029FE  324F               	rrcf	??___flmul^0,f,c
 12908   002A00  C04F  F05A         	movff	??___flmul,___flmul@prod
 12909   002A04  C050  F05B         	movff	??___flmul+1,___flmul@prod+1
 12910   002A08  C051  F05C         	movff	??___flmul+2,___flmul@prod+2
 12911   002A0C  C052  F05D         	movff	??___flmul+3,___flmul@prod+3
 12912   002A10  4A5E               	infsnz	___flmul@temp^0,f,c
 12913   002A12  2A5F               	incf	(___flmul@temp+1)^0,f,c
 12914   002A14                     l12058:
 12915   002A14  BE5F               	btfsc	(___flmul@temp+1)^0,7,c
 12916   002A16  EF15  F015         	goto	u13301
 12917   002A1A  505F               	movf	(___flmul@temp+1)^0,w,c
 12918   002A1C  E108               	bnz	u13300
 12919   002A1E  285E               	incf	___flmul@temp^0,w,c
 12920   002A20  A0D8               	btfss	status,0,c
 12921   002A22  EF15  F015         	goto	u13301
 12922   002A26  EF17  F015         	goto	u13300
 12923   002A2A                     u13301:
 12924   002A2A  EF21  F015         	goto	l12062
 12925   002A2E                     u13300:
 12926   002A2E  0E00               	movlw	0
 12927   002A30  6E5A               	movwf	___flmul@prod^0,c
 12928   002A32  0E00               	movlw	0
 12929   002A34  6E5B               	movwf	(___flmul@prod+1)^0,c
 12930   002A36  0E80               	movlw	128
 12931   002A38  6E5C               	movwf	(___flmul@prod+2)^0,c
 12932   002A3A  0E7F               	movlw	127
 12933   002A3C  6E5D               	movwf	(___flmul@prod+3)^0,c
 12934   002A3E  EF4F  F015         	goto	l12074
 12935   002A42                     l12062:
 12936   002A42  BE5F               	btfsc	(___flmul@temp+1)^0,7,c
 12937   002A44  EF2E  F015         	goto	u13310
 12938   002A48  505F               	movf	(___flmul@temp+1)^0,w,c
 12939   002A4A  E106               	bnz	u13311
 12940   002A4C  045E               	decf	___flmul@temp^0,w,c
 12941   002A4E  B0D8               	btfsc	status,0,c
 12942   002A50  EF2C  F015         	goto	u13311
 12943   002A54  EF2E  F015         	goto	u13310
 12944   002A58                     u13311:
 12945   002A58  EF3A  F015         	goto	l2477
 12946   002A5C                     u13310:
 12947   002A5C  0E00               	movlw	0
 12948   002A5E  6E5A               	movwf	___flmul@prod^0,c
 12949   002A60  0E00               	movlw	0
 12950   002A62  6E5B               	movwf	(___flmul@prod+1)^0,c
 12951   002A64  0E00               	movlw	0
 12952   002A66  6E5C               	movwf	(___flmul@prod+2)^0,c
 12953   002A68  0E00               	movlw	0
 12954   002A6A  6E5D               	movwf	(___flmul@prod+3)^0,c
 12955   002A6C  0E00               	movlw	0
 12956   002A6E  6E53               	movwf	___flmul@sign^0,c
 12957   002A70  EF4F  F015         	goto	l12074
 12958   002A74                     l2477:
 12959   002A74  C05E  F059         	movff	___flmul@temp,___flmul@bexp
 12960   002A78  0EFF               	movlw	255
 12961   002A7A  165A               	andwf	___flmul@prod^0,f,c
 12962   002A7C  0EFF               	movlw	255
 12963   002A7E  165B               	andwf	(___flmul@prod+1)^0,f,c
 12964   002A80  0E7F               	movlw	127
 12965   002A82  165C               	andwf	(___flmul@prod+2)^0,f,c
 12966   002A84  0E00               	movlw	0
 12967   002A86  165D               	andwf	(___flmul@prod+3)^0,f,c
 12968   002A88  A059               	btfss	___flmul@bexp^0,0,c
 12969   002A8A  EF49  F015         	goto	u13321
 12970   002A8E  EF4B  F015         	goto	u13320
 12971   002A92                     u13321:
 12972   002A92  EF4C  F015         	goto	l12072
 12973   002A96                     u13320:
 12974   002A96  8E5C               	bsf	(___flmul@prod+2)^0,7,c
 12975   002A98                     l12072:
 12976   002A98  90D8               	bcf	status,0,c
 12977   002A9A  3059               	rrcf	___flmul@bexp^0,w,c
 12978   002A9C  6E5D               	movwf	(___flmul@prod+3)^0,c
 12979   002A9E                     l12074:
 12980   002A9E  5053               	movf	___flmul@sign^0,w,c
 12981   002AA0  125D               	iorwf	(___flmul@prod+3)^0,f,c
 12982   002AA2  C05A  F047         	movff	___flmul@prod,?___flmul
 12983   002AA6  C05B  F048         	movff	___flmul@prod+1,?___flmul+1
 12984   002AAA  C05C  F049         	movff	___flmul@prod+2,?___flmul+2
 12985   002AAE  C05D  F04A         	movff	___flmul@prod+3,?___flmul+3
 12986   002AB2                     l2464:
 12987   002AB2  0012               	return		;funcret
 12988   002AB4                     __end_of___flmul:
 12989                           	callstack 0
 12990                           
 12991 ;; *************** function ___fldiv *****************
 12992 ;; Defined at:
 12993 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
 12994 ;; Parameters:    Size  Location     Type
 12995 ;;  b               4   29[COMRAM] unsigned char 
 12996 ;;  a               4   33[COMRAM] unsigned char 
 12997 ;; Auto vars:     Size  Location     Type
 12998 ;;  grs             4   48[COMRAM] unsigned long 
 12999 ;;  rem             4   41[COMRAM] unsigned long 
 13000 ;;  new_exp         2   46[COMRAM] short 
 13001 ;;  aexp            1   53[COMRAM] unsigned char 
 13002 ;;  bexp            1   52[COMRAM] unsigned char 
 13003 ;;  sign            1   45[COMRAM] unsigned char 
 13004 ;; Return value:  Size  Location     Type
 13005 ;;                  4   29[COMRAM] unsigned char 
 13006 ;; Registers used:
 13007 ;;		wreg, status,2, status,0
 13008 ;; Tracked objects:
 13009 ;;		On entry : 0/0
 13010 ;;		On exit  : 0/0
 13011 ;;		Unchanged: 0/0
 13012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13013 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13014 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13015 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13016 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13017 ;;Total ram usage:       25 bytes
 13018 ;; Hardware stack levels used: 1
 13019 ;; Hardware stack levels required when called: 4
 13020 ;; This function calls:
 13021 ;;		Nothing
 13022 ;; This function is called by:
 13023 ;;		_ccp1_pwm_set_duty
 13024 ;;		_ccp2_pwm_set_duty
 13025 ;;		_I2C_Master_Mode_Clock_Configurations
 13026 ;;		_baudrate_calculate
 13027 ;; This function uses a non-reentrant model
 13028 ;;
 13029                           
 13030                           	psect	text70
 13031   002ED2                     __ptext70:
 13032                           	callstack 0
 13033   002ED2                     ___fldiv:
 13034                           	callstack 23
 13035   002ED2  5021               	movf	(___fldiv@b+3)^0,w,c
 13036   002ED4  0B80               	andlw	128
 13037   002ED6  6E2E               	movwf	___fldiv@sign^0,c
 13038   002ED8  5021               	movf	(___fldiv@b+3)^0,w,c
 13039   002EDA  2421               	addwf	(___fldiv@b+3)^0,w,c
 13040   002EDC  6E35               	movwf	___fldiv@bexp^0,c
 13041   002EDE  AE20               	btfss	(___fldiv@b+2)^0,7,c
 13042   002EE0  EF74  F017         	goto	u11521
 13043   002EE4  EF76  F017         	goto	u11520
 13044   002EE8                     u11521:
 13045   002EE8  EF77  F017         	goto	l10664
 13046   002EEC                     u11520:
 13047   002EEC  8035               	bsf	___fldiv@bexp^0,0,c
 13048   002EEE                     l10664:
 13049   002EEE  5035               	movf	___fldiv@bexp^0,w,c
 13050   002EF0  B4D8               	btfsc	status,2,c
 13051   002EF2  EF7D  F017         	goto	u11531
 13052   002EF6  EF7F  F017         	goto	u11530
 13053   002EFA                     u11531:
 13054   002EFA  EF94  F017         	goto	l10674
 13055   002EFE                     u11530:
 13056   002EFE  2835               	incf	___fldiv@bexp^0,w,c
 13057   002F00  A4D8               	btfss	status,2,c
 13058   002F02  EF85  F017         	goto	u11541
 13059   002F06  EF87  F017         	goto	u11540
 13060   002F0A                     u11541:
 13061   002F0A  EF8F  F017         	goto	l10670
 13062   002F0E                     u11540:
 13063   002F0E  0E00               	movlw	0
 13064   002F10  6E1E               	movwf	___fldiv@b^0,c
 13065   002F12  0E00               	movlw	0
 13066   002F14  6E1F               	movwf	(___fldiv@b+1)^0,c
 13067   002F16  0E00               	movlw	0
 13068   002F18  6E20               	movwf	(___fldiv@b+2)^0,c
 13069   002F1A  0E00               	movlw	0
 13070   002F1C  6E21               	movwf	(___fldiv@b+3)^0,c
 13071   002F1E                     l10670:
 13072   002F1E  8E20               	bsf	(___fldiv@b+2)^0,7,c
 13073   002F20  0E00               	movlw	0
 13074   002F22  6E21               	movwf	(___fldiv@b+3)^0,c
 13075   002F24  EF9C  F017         	goto	l10676
 13076   002F28                     l10674:
 13077   002F28  0E00               	movlw	0
 13078   002F2A  6E1E               	movwf	___fldiv@b^0,c
 13079   002F2C  0E00               	movlw	0
 13080   002F2E  6E1F               	movwf	(___fldiv@b+1)^0,c
 13081   002F30  0E00               	movlw	0
 13082   002F32  6E20               	movwf	(___fldiv@b+2)^0,c
 13083   002F34  0E00               	movlw	0
 13084   002F36  6E21               	movwf	(___fldiv@b+3)^0,c
 13085   002F38                     l10676:
 13086   002F38  5025               	movf	(___fldiv@a+3)^0,w,c
 13087   002F3A  0B80               	andlw	128
 13088   002F3C  1A2E               	xorwf	___fldiv@sign^0,f,c
 13089   002F3E  5025               	movf	(___fldiv@a+3)^0,w,c
 13090   002F40  2425               	addwf	(___fldiv@a+3)^0,w,c
 13091   002F42  6E36               	movwf	___fldiv@aexp^0,c
 13092   002F44  AE24               	btfss	(___fldiv@a+2)^0,7,c
 13093   002F46  EFA7  F017         	goto	u11551
 13094   002F4A  EFA9  F017         	goto	u11550
 13095   002F4E                     u11551:
 13096   002F4E  EFAA  F017         	goto	l10684
 13097   002F52                     u11550:
 13098   002F52  8036               	bsf	___fldiv@aexp^0,0,c
 13099   002F54                     l10684:
 13100   002F54  5036               	movf	___fldiv@aexp^0,w,c
 13101   002F56  B4D8               	btfsc	status,2,c
 13102   002F58  EFB0  F017         	goto	u11561
 13103   002F5C  EFB2  F017         	goto	u11560
 13104   002F60                     u11561:
 13105   002F60  EFC7  F017         	goto	l10694
 13106   002F64                     u11560:
 13107   002F64  2836               	incf	___fldiv@aexp^0,w,c
 13108   002F66  A4D8               	btfss	status,2,c
 13109   002F68  EFB8  F017         	goto	u11571
 13110   002F6C  EFBA  F017         	goto	u11570
 13111   002F70                     u11571:
 13112   002F70  EFC2  F017         	goto	l10690
 13113   002F74                     u11570:
 13114   002F74  0E00               	movlw	0
 13115   002F76  6E22               	movwf	___fldiv@a^0,c
 13116   002F78  0E00               	movlw	0
 13117   002F7A  6E23               	movwf	(___fldiv@a+1)^0,c
 13118   002F7C  0E00               	movlw	0
 13119   002F7E  6E24               	movwf	(___fldiv@a+2)^0,c
 13120   002F80  0E00               	movlw	0
 13121   002F82  6E25               	movwf	(___fldiv@a+3)^0,c
 13122   002F84                     l10690:
 13123   002F84  8E24               	bsf	(___fldiv@a+2)^0,7,c
 13124   002F86  0E00               	movlw	0
 13125   002F88  6E25               	movwf	(___fldiv@a+3)^0,c
 13126   002F8A  EFCF  F017         	goto	l10696
 13127   002F8E                     l10694:
 13128   002F8E  0E00               	movlw	0
 13129   002F90  6E22               	movwf	___fldiv@a^0,c
 13130   002F92  0E00               	movlw	0
 13131   002F94  6E23               	movwf	(___fldiv@a+1)^0,c
 13132   002F96  0E00               	movlw	0
 13133   002F98  6E24               	movwf	(___fldiv@a+2)^0,c
 13134   002F9A  0E00               	movlw	0
 13135   002F9C  6E25               	movwf	(___fldiv@a+3)^0,c
 13136   002F9E                     l10696:
 13137   002F9E  5022               	movf	___fldiv@a^0,w,c
 13138   002FA0  1023               	iorwf	(___fldiv@a+1)^0,w,c
 13139   002FA2  1024               	iorwf	(___fldiv@a+2)^0,w,c
 13140   002FA4  1025               	iorwf	(___fldiv@a+3)^0,w,c
 13141   002FA6  A4D8               	btfss	status,2,c
 13142   002FA8  EFD8  F017         	goto	u11581
 13143   002FAC  EFDA  F017         	goto	u11580
 13144   002FB0                     u11581:
 13145   002FB0  EFF2  F017         	goto	l10708
 13146   002FB4                     u11580:
 13147   002FB4  0E00               	movlw	0
 13148   002FB6  6E1E               	movwf	___fldiv@b^0,c
 13149   002FB8  0E00               	movlw	0
 13150   002FBA  6E1F               	movwf	(___fldiv@b+1)^0,c
 13151   002FBC  0E00               	movlw	0
 13152   002FBE  6E20               	movwf	(___fldiv@b+2)^0,c
 13153   002FC0  0E00               	movlw	0
 13154   002FC2  6E21               	movwf	(___fldiv@b+3)^0,c
 13155   002FC4  0E80               	movlw	128
 13156   002FC6  1220               	iorwf	(___fldiv@b+2)^0,f,c
 13157   002FC8  0E7F               	movlw	127
 13158   002FCA  1221               	iorwf	(___fldiv@b+3)^0,f,c
 13159   002FCC                     l10702:
 13160   002FCC  502E               	movf	___fldiv@sign^0,w,c
 13161   002FCE  1221               	iorwf	(___fldiv@b+3)^0,f,c
 13162   002FD0  C01E  F01E         	movff	___fldiv@b,?___fldiv
 13163   002FD4  C01F  F01F         	movff	___fldiv@b+1,?___fldiv+1
 13164   002FD8  C020  F020         	movff	___fldiv@b+2,?___fldiv+2
 13165   002FDC  C021  F021         	movff	___fldiv@b+3,?___fldiv+3
 13166   002FE0  EF35  F019         	goto	l2428
 13167   002FE4                     l10708:
 13168   002FE4  5035               	movf	___fldiv@bexp^0,w,c
 13169   002FE6  A4D8               	btfss	status,2,c
 13170   002FE8  EFF8  F017         	goto	u11591
 13171   002FEC  EFFA  F017         	goto	u11590
 13172   002FF0                     u11591:
 13173   002FF0  EF04  F018         	goto	l10716
 13174   002FF4                     u11590:
 13175   002FF4  0E00               	movlw	0
 13176   002FF6  6E1E               	movwf	?___fldiv^0,c
 13177   002FF8  0E00               	movlw	0
 13178   002FFA  6E1F               	movwf	(?___fldiv+1)^0,c
 13179   002FFC  0E00               	movlw	0
 13180   002FFE  6E20               	movwf	(?___fldiv+2)^0,c
 13181   003000  0E00               	movlw	0
 13182   003002  6E21               	movwf	(?___fldiv+3)^0,c
 13183   003004  EF35  F019         	goto	l2428
 13184   003008                     l10716:
 13185   003008  5036               	movf	___fldiv@aexp^0,w,c
 13186   00300A  C035  F026         	movff	___fldiv@bexp,??___fldiv
 13187   00300E  6A27               	clrf	(??___fldiv+1)^0,c
 13188   003010  5E26               	subwf	??___fldiv^0,f,c
 13189   003012  0E00               	movlw	0
 13190   003014  5A27               	subwfb	(??___fldiv+1)^0,f,c
 13191   003016  0E7F               	movlw	127
 13192   003018  2426               	addwf	??___fldiv^0,w,c
 13193   00301A  6E2F               	movwf	___fldiv@new_exp^0,c
 13194   00301C  0E00               	movlw	0
 13195   00301E  2027               	addwfc	(??___fldiv+1)^0,w,c
 13196   003020  6E30               	movwf	(___fldiv@new_exp+1)^0,c
 13197   003022  C01E  F02A         	movff	___fldiv@b,___fldiv@rem
 13198   003026  C01F  F02B         	movff	___fldiv@b+1,___fldiv@rem+1
 13199   00302A  C020  F02C         	movff	___fldiv@b+2,___fldiv@rem+2
 13200   00302E  C021  F02D         	movff	___fldiv@b+3,___fldiv@rem+3
 13201   003032  0E00               	movlw	0
 13202   003034  6E1E               	movwf	___fldiv@b^0,c
 13203   003036  0E00               	movlw	0
 13204   003038  6E1F               	movwf	(___fldiv@b+1)^0,c
 13205   00303A  0E00               	movlw	0
 13206   00303C  6E20               	movwf	(___fldiv@b+2)^0,c
 13207   00303E  0E00               	movlw	0
 13208   003040  6E21               	movwf	(___fldiv@b+3)^0,c
 13209   003042  0E00               	movlw	0
 13210   003044  6E31               	movwf	___fldiv@grs^0,c
 13211   003046  0E00               	movlw	0
 13212   003048  6E32               	movwf	(___fldiv@grs+1)^0,c
 13213   00304A  0E00               	movlw	0
 13214   00304C  6E33               	movwf	(___fldiv@grs+2)^0,c
 13215   00304E  0E00               	movlw	0
 13216   003050  6E34               	movwf	(___fldiv@grs+3)^0,c
 13217   003052  0E00               	movlw	0
 13218   003054  6E36               	movwf	___fldiv@aexp^0,c
 13219   003056  EF65  F018         	goto	l2430
 13220   00305A                     l10726:
 13221   00305A  5036               	movf	___fldiv@aexp^0,w,c
 13222   00305C  B4D8               	btfsc	status,2,c
 13223   00305E  EF33  F018         	goto	u11601
 13224   003062  EF35  F018         	goto	u11600
 13225   003066                     u11601:
 13226   003066  EF4C  F018         	goto	l10734
 13227   00306A                     u11600:
 13228   00306A  90D8               	bcf	status,0,c
 13229   00306C  362A               	rlcf	___fldiv@rem^0,f,c
 13230   00306E  362B               	rlcf	(___fldiv@rem+1)^0,f,c
 13231   003070  362C               	rlcf	(___fldiv@rem+2)^0,f,c
 13232   003072  362D               	rlcf	(___fldiv@rem+3)^0,f,c
 13233   003074  90D8               	bcf	status,0,c
 13234   003076  361E               	rlcf	___fldiv@b^0,f,c
 13235   003078  361F               	rlcf	(___fldiv@b+1)^0,f,c
 13236   00307A  3620               	rlcf	(___fldiv@b+2)^0,f,c
 13237   00307C  3621               	rlcf	(___fldiv@b+3)^0,f,c
 13238   00307E  AE34               	btfss	(___fldiv@grs+3)^0,7,c
 13239   003080  EF44  F018         	goto	u11611
 13240   003084  EF46  F018         	goto	u11610
 13241   003088                     u11611:
 13242   003088  EF47  F018         	goto	l2433
 13243   00308C                     u11610:
 13244   00308C  801E               	bsf	___fldiv@b^0,0,c
 13245   00308E                     l2433:
 13246   00308E  90D8               	bcf	status,0,c
 13247   003090  3631               	rlcf	___fldiv@grs^0,f,c
 13248   003092  3632               	rlcf	(___fldiv@grs+1)^0,f,c
 13249   003094  3633               	rlcf	(___fldiv@grs+2)^0,f,c
 13250   003096  3634               	rlcf	(___fldiv@grs+3)^0,f,c
 13251   003098                     l10734:
 13252   003098  5022               	movf	___fldiv@a^0,w,c
 13253   00309A  5C2A               	subwf	___fldiv@rem^0,w,c
 13254   00309C  5023               	movf	(___fldiv@a+1)^0,w,c
 13255   00309E  582B               	subwfb	(___fldiv@rem+1)^0,w,c
 13256   0030A0  5024               	movf	(___fldiv@a+2)^0,w,c
 13257   0030A2  582C               	subwfb	(___fldiv@rem+2)^0,w,c
 13258   0030A4  5025               	movf	(___fldiv@a+3)^0,w,c
 13259   0030A6  582D               	subwfb	(___fldiv@rem+3)^0,w,c
 13260   0030A8  A0D8               	btfss	status,0,c
 13261   0030AA  EF59  F018         	goto	u11621
 13262   0030AE  EF5B  F018         	goto	u11620
 13263   0030B2                     u11621:
 13264   0030B2  EF64  F018         	goto	l10740
 13265   0030B6                     u11620:
 13266   0030B6  8C34               	bsf	(___fldiv@grs+3)^0,6,c
 13267   0030B8  5022               	movf	___fldiv@a^0,w,c
 13268   0030BA  5E2A               	subwf	___fldiv@rem^0,f,c
 13269   0030BC  5023               	movf	(___fldiv@a+1)^0,w,c
 13270   0030BE  5A2B               	subwfb	(___fldiv@rem+1)^0,f,c
 13271   0030C0  5024               	movf	(___fldiv@a+2)^0,w,c
 13272   0030C2  5A2C               	subwfb	(___fldiv@rem+2)^0,f,c
 13273   0030C4  5025               	movf	(___fldiv@a+3)^0,w,c
 13274   0030C6  5A2D               	subwfb	(___fldiv@rem+3)^0,f,c
 13275   0030C8                     l10740:
 13276   0030C8  2A36               	incf	___fldiv@aexp^0,f,c
 13277   0030CA                     l2430:
 13278   0030CA  0E19               	movlw	25
 13279   0030CC  6436               	cpfsgt	___fldiv@aexp^0,c
 13280   0030CE  EF6B  F018         	goto	u11631
 13281   0030D2  EF6D  F018         	goto	u11630
 13282   0030D6                     u11631:
 13283   0030D6  EF2D  F018         	goto	l10726
 13284   0030DA                     u11630:
 13285   0030DA  502A               	movf	___fldiv@rem^0,w,c
 13286   0030DC  102B               	iorwf	(___fldiv@rem+1)^0,w,c
 13287   0030DE  102C               	iorwf	(___fldiv@rem+2)^0,w,c
 13288   0030E0  102D               	iorwf	(___fldiv@rem+3)^0,w,c
 13289   0030E2  B4D8               	btfsc	status,2,c
 13290   0030E4  EF76  F018         	goto	u11641
 13291   0030E8  EF78  F018         	goto	u11640
 13292   0030EC                     u11641:
 13293   0030EC  EF90  F018         	goto	l10752
 13294   0030F0                     u11640:
 13295   0030F0  8031               	bsf	___fldiv@grs^0,0,c
 13296   0030F2  EF90  F018         	goto	l10752
 13297   0030F6                     l10746:
 13298   0030F6  90D8               	bcf	status,0,c
 13299   0030F8  361E               	rlcf	___fldiv@b^0,f,c
 13300   0030FA  361F               	rlcf	(___fldiv@b+1)^0,f,c
 13301   0030FC  3620               	rlcf	(___fldiv@b+2)^0,f,c
 13302   0030FE  3621               	rlcf	(___fldiv@b+3)^0,f,c
 13303   003100  AE34               	btfss	(___fldiv@grs+3)^0,7,c
 13304   003102  EF85  F018         	goto	u11651
 13305   003106  EF87  F018         	goto	u11650
 13306   00310A                     u11651:
 13307   00310A  EF88  F018         	goto	l2439
 13308   00310E                     u11650:
 13309   00310E  801E               	bsf	___fldiv@b^0,0,c
 13310   003110                     l2439:
 13311   003110  90D8               	bcf	status,0,c
 13312   003112  3631               	rlcf	___fldiv@grs^0,f,c
 13313   003114  3632               	rlcf	(___fldiv@grs+1)^0,f,c
 13314   003116  3633               	rlcf	(___fldiv@grs+2)^0,f,c
 13315   003118  3634               	rlcf	(___fldiv@grs+3)^0,f,c
 13316   00311A  062F               	decf	___fldiv@new_exp^0,f,c
 13317   00311C  A0D8               	btfss	status,0,c
 13318   00311E  0630               	decf	(___fldiv@new_exp+1)^0,f,c
 13319   003120                     l10752:
 13320   003120  AE20               	btfss	(___fldiv@b+2)^0,7,c
 13321   003122  EF95  F018         	goto	u11661
 13322   003126  EF97  F018         	goto	u11660
 13323   00312A                     u11661:
 13324   00312A  EF7B  F018         	goto	l10746
 13325   00312E                     u11660:
 13326   00312E  0E00               	movlw	0
 13327   003130  6E36               	movwf	___fldiv@aexp^0,c
 13328   003132  AE34               	btfss	(___fldiv@grs+3)^0,7,c
 13329   003134  EF9E  F018         	goto	u11671
 13330   003138  EFA0  F018         	goto	u11670
 13331   00313C                     u11671:
 13332   00313C  EFC4  F018         	goto	l2441
 13333   003140                     u11670:
 13334   003140  0EFF               	movlw	255
 13335   003142  1431               	andwf	___fldiv@grs^0,w,c
 13336   003144  6E26               	movwf	??___fldiv^0,c
 13337   003146  0EFF               	movlw	255
 13338   003148  1432               	andwf	(___fldiv@grs+1)^0,w,c
 13339   00314A  6E27               	movwf	(??___fldiv+1)^0,c
 13340   00314C  0EFF               	movlw	255
 13341   00314E  1433               	andwf	(___fldiv@grs+2)^0,w,c
 13342   003150  6E28               	movwf	(??___fldiv+2)^0,c
 13343   003152  0E7F               	movlw	127
 13344   003154  1434               	andwf	(___fldiv@grs+3)^0,w,c
 13345   003156  6E29               	movwf	(??___fldiv+3)^0,c
 13346   003158  5026               	movf	??___fldiv^0,w,c
 13347   00315A  1027               	iorwf	(??___fldiv+1)^0,w,c
 13348   00315C  1028               	iorwf	(??___fldiv+2)^0,w,c
 13349   00315E  1029               	iorwf	(??___fldiv+3)^0,w,c
 13350   003160  B4D8               	btfsc	status,2,c
 13351   003162  EFB5  F018         	goto	u11681
 13352   003166  EFB7  F018         	goto	u11680
 13353   00316A                     u11681:
 13354   00316A  EFBB  F018         	goto	l2442
 13355   00316E                     u11680:
 13356   00316E                     l10760:
 13357   00316E  0E01               	movlw	1
 13358   003170  6E36               	movwf	___fldiv@aexp^0,c
 13359   003172  EFC4  F018         	goto	l2441
 13360   003176                     l2442:
 13361   003176  A01E               	btfss	___fldiv@b^0,0,c
 13362   003178  EFC0  F018         	goto	u11691
 13363   00317C  EFC2  F018         	goto	u11690
 13364   003180                     u11691:
 13365   003180  EFC4  F018         	goto	l2441
 13366   003184                     u11690:
 13367   003184  EFB7  F018         	goto	l10760
 13368   003188                     l2441:
 13369   003188  5036               	movf	___fldiv@aexp^0,w,c
 13370   00318A  B4D8               	btfsc	status,2,c
 13371   00318C  EFCA  F018         	goto	u11701
 13372   003190  EFCC  F018         	goto	u11700
 13373   003194                     u11701:
 13374   003194  EFF0  F018         	goto	l10772
 13375   003198                     u11700:
 13376   003198  0E01               	movlw	1
 13377   00319A  261E               	addwf	___fldiv@b^0,f,c
 13378   00319C  0E00               	movlw	0
 13379   00319E  221F               	addwfc	(___fldiv@b+1)^0,f,c
 13380   0031A0  2220               	addwfc	(___fldiv@b+2)^0,f,c
 13381   0031A2  2221               	addwfc	(___fldiv@b+3)^0,f,c
 13382   0031A4  A021               	btfss	(___fldiv@b+3)^0,0,c
 13383   0031A6  EFD7  F018         	goto	u11711
 13384   0031AA  EFD9  F018         	goto	u11710
 13385   0031AE                     u11711:
 13386   0031AE  EFF0  F018         	goto	l10772
 13387   0031B2                     u11710:
 13388   0031B2  C01E  F026         	movff	___fldiv@b,??___fldiv
 13389   0031B6  C01F  F027         	movff	___fldiv@b+1,??___fldiv+1
 13390   0031BA  C020  F028         	movff	___fldiv@b+2,??___fldiv+2
 13391   0031BE  C021  F029         	movff	___fldiv@b+3,??___fldiv+3
 13392   0031C2  3429               	rlcf	(??___fldiv+3)^0,w,c
 13393   0031C4  3229               	rrcf	(??___fldiv+3)^0,f,c
 13394   0031C6  3228               	rrcf	(??___fldiv+2)^0,f,c
 13395   0031C8  3227               	rrcf	(??___fldiv+1)^0,f,c
 13396   0031CA  3226               	rrcf	??___fldiv^0,f,c
 13397   0031CC  C026  F01E         	movff	??___fldiv,___fldiv@b
 13398   0031D0  C027  F01F         	movff	??___fldiv+1,___fldiv@b+1
 13399   0031D4  C028  F020         	movff	??___fldiv+2,___fldiv@b+2
 13400   0031D8  C029  F021         	movff	??___fldiv+3,___fldiv@b+3
 13401   0031DC  4A2F               	infsnz	___fldiv@new_exp^0,f,c
 13402   0031DE  2A30               	incf	(___fldiv@new_exp+1)^0,f,c
 13403   0031E0                     l10772:
 13404   0031E0  BE30               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13405   0031E2  EFFB  F018         	goto	u11721
 13406   0031E6  5030               	movf	(___fldiv@new_exp+1)^0,w,c
 13407   0031E8  E108               	bnz	u11720
 13408   0031EA  282F               	incf	___fldiv@new_exp^0,w,c
 13409   0031EC  A0D8               	btfss	status,0,c
 13410   0031EE  EFFB  F018         	goto	u11721
 13411   0031F2  EFFD  F018         	goto	u11720
 13412   0031F6                     u11721:
 13413   0031F6  EF08  F019         	goto	l10776
 13414   0031FA                     u11720:
 13415   0031FA  0E00               	movlw	0
 13416   0031FC  6E30               	movwf	(___fldiv@new_exp+1)^0,c
 13417   0031FE  682F               	setf	___fldiv@new_exp^0,c
 13418   003200  0E00               	movlw	0
 13419   003202  6E1E               	movwf	___fldiv@b^0,c
 13420   003204  0E00               	movlw	0
 13421   003206  6E1F               	movwf	(___fldiv@b+1)^0,c
 13422   003208  0E00               	movlw	0
 13423   00320A  6E20               	movwf	(___fldiv@b+2)^0,c
 13424   00320C  0E00               	movlw	0
 13425   00320E  6E21               	movwf	(___fldiv@b+3)^0,c
 13426   003210                     l10776:
 13427   003210  BE30               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13428   003212  EF15  F019         	goto	u11730
 13429   003216  5030               	movf	(___fldiv@new_exp+1)^0,w,c
 13430   003218  E106               	bnz	u11731
 13431   00321A  042F               	decf	___fldiv@new_exp^0,w,c
 13432   00321C  B0D8               	btfsc	status,0,c
 13433   00321E  EF13  F019         	goto	u11731
 13434   003222  EF15  F019         	goto	u11730
 13435   003226                     u11731:
 13436   003226  EF23  F019         	goto	l10780
 13437   00322A                     u11730:
 13438   00322A  0E00               	movlw	0
 13439   00322C  6E30               	movwf	(___fldiv@new_exp+1)^0,c
 13440   00322E  0E00               	movlw	0
 13441   003230  6E2F               	movwf	___fldiv@new_exp^0,c
 13442   003232  0E00               	movlw	0
 13443   003234  6E1E               	movwf	___fldiv@b^0,c
 13444   003236  0E00               	movlw	0
 13445   003238  6E1F               	movwf	(___fldiv@b+1)^0,c
 13446   00323A  0E00               	movlw	0
 13447   00323C  6E20               	movwf	(___fldiv@b+2)^0,c
 13448   00323E  0E00               	movlw	0
 13449   003240  6E21               	movwf	(___fldiv@b+3)^0,c
 13450   003242  0E00               	movlw	0
 13451   003244  6E2E               	movwf	___fldiv@sign^0,c
 13452   003246                     l10780:
 13453   003246  C02F  F035         	movff	___fldiv@new_exp,___fldiv@bexp
 13454   00324A  A035               	btfss	___fldiv@bexp^0,0,c
 13455   00324C  EF2A  F019         	goto	u11741
 13456   003250  EF2C  F019         	goto	u11740
 13457   003254                     u11741:
 13458   003254  EF2F  F019         	goto	l10786
 13459   003258                     u11740:
 13460   003258  8E20               	bsf	(___fldiv@b+2)^0,7,c
 13461   00325A  EF30  F019         	goto	l10788
 13462   00325E                     l10786:
 13463   00325E  9E20               	bcf	(___fldiv@b+2)^0,7,c
 13464   003260                     l10788:
 13465   003260  90D8               	bcf	status,0,c
 13466   003262  3035               	rrcf	___fldiv@bexp^0,w,c
 13467   003264  6E21               	movwf	(___fldiv@b+3)^0,c
 13468   003266  EFE6  F017         	goto	l10702
 13469   00326A                     l2428:
 13470   00326A  0012               	return		;funcret
 13471   00326C                     __end_of___fldiv:
 13472                           	callstack 0
 13473                           
 13474 ;; *************** function ___fladd *****************
 13475 ;; Defined at:
 13476 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
 13477 ;; Parameters:    Size  Location     Type
 13478 ;;  b               4   54[COMRAM] unsigned char 
 13479 ;;  a               4   58[COMRAM] unsigned char 
 13480 ;; Auto vars:     Size  Location     Type
 13481 ;;  grs             1   69[COMRAM] unsigned char 
 13482 ;;  bexp            1   68[COMRAM] unsigned char 
 13483 ;;  aexp            1   67[COMRAM] unsigned char 
 13484 ;;  signs           1   66[COMRAM] unsigned char 
 13485 ;; Return value:  Size  Location     Type
 13486 ;;                  4   54[COMRAM] unsigned char 
 13487 ;; Registers used:
 13488 ;;		wreg, status,2, status,0
 13489 ;; Tracked objects:
 13490 ;;		On entry : 0/0
 13491 ;;		On exit  : 0/0
 13492 ;;		Unchanged: 0/0
 13493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13494 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13495 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13496 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13497 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13498 ;;Total ram usage:       16 bytes
 13499 ;; Hardware stack levels used: 1
 13500 ;; Hardware stack levels required when called: 4
 13501 ;; This function calls:
 13502 ;;		Nothing
 13503 ;; This function is called by:
 13504 ;;		_ccp1_pwm_set_duty
 13505 ;;		_ccp2_pwm_set_duty
 13506 ;;		_I2C_Master_Mode_Clock_Configurations
 13507 ;;		_baudrate_calculate
 13508 ;; This function uses a non-reentrant model
 13509 ;;
 13510                           
 13511                           	psect	text71
 13512   0021CA                     __ptext71:
 13513                           	callstack 0
 13514   0021CA                     ___fladd:
 13515                           	callstack 23
 13516   0021CA  503A               	movf	(___fladd@b+3)^0,w,c
 13517   0021CC  0B80               	andlw	128
 13518   0021CE  6E43               	movwf	___fladd@signs^0,c
 13519   0021D0  503A               	movf	(___fladd@b+3)^0,w,c
 13520   0021D2  243A               	addwf	(___fladd@b+3)^0,w,c
 13521   0021D4  6E45               	movwf	___fladd@bexp^0,c
 13522   0021D6  AE39               	btfss	(___fladd@b+2)^0,7,c
 13523   0021D8  EFF0  F010         	goto	u11131
 13524   0021DC  EFF2  F010         	goto	u11130
 13525   0021E0                     u11131:
 13526   0021E0  EFF3  F010         	goto	l10462
 13527   0021E4                     u11130:
 13528   0021E4  8045               	bsf	___fladd@bexp^0,0,c
 13529   0021E6                     l10462:
 13530   0021E6  5045               	movf	___fladd@bexp^0,w,c
 13531   0021E8  B4D8               	btfsc	status,2,c
 13532   0021EA  EFF9  F010         	goto	u11141
 13533   0021EE  EFFB  F010         	goto	u11140
 13534   0021F2                     u11141:
 13535   0021F2  EF10  F011         	goto	l10472
 13536   0021F6                     u11140:
 13537   0021F6  2845               	incf	___fladd@bexp^0,w,c
 13538   0021F8  A4D8               	btfss	status,2,c
 13539   0021FA  EF01  F011         	goto	u11151
 13540   0021FE  EF03  F011         	goto	u11150
 13541   002202                     u11151:
 13542   002202  EF0B  F011         	goto	l10468
 13543   002206                     u11150:
 13544   002206  0E00               	movlw	0
 13545   002208  6E37               	movwf	___fladd@b^0,c
 13546   00220A  0E00               	movlw	0
 13547   00220C  6E38               	movwf	(___fladd@b+1)^0,c
 13548   00220E  0E00               	movlw	0
 13549   002210  6E39               	movwf	(___fladd@b+2)^0,c
 13550   002212  0E00               	movlw	0
 13551   002214  6E3A               	movwf	(___fladd@b+3)^0,c
 13552   002216                     l10468:
 13553   002216  8E39               	bsf	(___fladd@b+2)^0,7,c
 13554   002218  0E00               	movlw	0
 13555   00221A  6E3A               	movwf	(___fladd@b+3)^0,c
 13556   00221C  EF18  F011         	goto	l10474
 13557   002220                     l10472:
 13558   002220  0E00               	movlw	0
 13559   002222  6E37               	movwf	___fladd@b^0,c
 13560   002224  0E00               	movlw	0
 13561   002226  6E38               	movwf	(___fladd@b+1)^0,c
 13562   002228  0E00               	movlw	0
 13563   00222A  6E39               	movwf	(___fladd@b+2)^0,c
 13564   00222C  0E00               	movlw	0
 13565   00222E  6E3A               	movwf	(___fladd@b+3)^0,c
 13566   002230                     l10474:
 13567   002230  503E               	movf	(___fladd@a+3)^0,w,c
 13568   002232  0B80               	andlw	128
 13569   002234  6E44               	movwf	___fladd@aexp^0,c
 13570   002236  5043               	movf	___fladd@signs^0,w,c
 13571   002238  1844               	xorwf	___fladd@aexp^0,w,c
 13572   00223A  B4D8               	btfsc	status,2,c
 13573   00223C  EF22  F011         	goto	u11161
 13574   002240  EF24  F011         	goto	u11160
 13575   002244                     u11161:
 13576   002244  EF25  F011         	goto	l10480
 13577   002248                     u11160:
 13578   002248  8C43               	bsf	___fladd@signs^0,6,c
 13579   00224A                     l10480:
 13580   00224A  503E               	movf	(___fladd@a+3)^0,w,c
 13581   00224C  243E               	addwf	(___fladd@a+3)^0,w,c
 13582   00224E  6E44               	movwf	___fladd@aexp^0,c
 13583   002250  AE3D               	btfss	(___fladd@a+2)^0,7,c
 13584   002252  EF2D  F011         	goto	u11171
 13585   002256  EF2F  F011         	goto	u11170
 13586   00225A                     u11171:
 13587   00225A  EF30  F011         	goto	l10486
 13588   00225E                     u11170:
 13589   00225E  8044               	bsf	___fladd@aexp^0,0,c
 13590   002260                     l10486:
 13591   002260  5044               	movf	___fladd@aexp^0,w,c
 13592   002262  B4D8               	btfsc	status,2,c
 13593   002264  EF36  F011         	goto	u11181
 13594   002268  EF38  F011         	goto	u11180
 13595   00226C                     u11181:
 13596   00226C  EF4D  F011         	goto	l10496
 13597   002270                     u11180:
 13598   002270  2844               	incf	___fladd@aexp^0,w,c
 13599   002272  A4D8               	btfss	status,2,c
 13600   002274  EF3E  F011         	goto	u11191
 13601   002278  EF40  F011         	goto	u11190
 13602   00227C                     u11191:
 13603   00227C  EF48  F011         	goto	l10492
 13604   002280                     u11190:
 13605   002280  0E00               	movlw	0
 13606   002282  6E3B               	movwf	___fladd@a^0,c
 13607   002284  0E00               	movlw	0
 13608   002286  6E3C               	movwf	(___fladd@a+1)^0,c
 13609   002288  0E00               	movlw	0
 13610   00228A  6E3D               	movwf	(___fladd@a+2)^0,c
 13611   00228C  0E00               	movlw	0
 13612   00228E  6E3E               	movwf	(___fladd@a+3)^0,c
 13613   002290                     l10492:
 13614   002290  8E3D               	bsf	(___fladd@a+2)^0,7,c
 13615   002292  0E00               	movlw	0
 13616   002294  6E3E               	movwf	(___fladd@a+3)^0,c
 13617   002296  EF55  F011         	goto	l10498
 13618   00229A                     l10496:
 13619   00229A  0E00               	movlw	0
 13620   00229C  6E3B               	movwf	___fladd@a^0,c
 13621   00229E  0E00               	movlw	0
 13622   0022A0  6E3C               	movwf	(___fladd@a+1)^0,c
 13623   0022A2  0E00               	movlw	0
 13624   0022A4  6E3D               	movwf	(___fladd@a+2)^0,c
 13625   0022A6  0E00               	movlw	0
 13626   0022A8  6E3E               	movwf	(___fladd@a+3)^0,c
 13627   0022AA                     l10498:
 13628   0022AA  5045               	movf	___fladd@bexp^0,w,c
 13629   0022AC  5C44               	subwf	___fladd@aexp^0,w,c
 13630   0022AE  B0D8               	btfsc	status,0,c
 13631   0022B0  EF5C  F011         	goto	u11201
 13632   0022B4  EF5E  F011         	goto	u11200
 13633   0022B8                     u11201:
 13634   0022B8  EF85  F011         	goto	l10534
 13635   0022BC                     u11200:
 13636   0022BC  AC43               	btfss	___fladd@signs^0,6,c
 13637   0022BE  EF63  F011         	goto	u11211
 13638   0022C2  EF65  F011         	goto	u11210
 13639   0022C6                     u11211:
 13640   0022C6  EF67  F011         	goto	l10504
 13641   0022CA                     u11210:
 13642   0022CA  0E80               	movlw	128
 13643   0022CC  1A43               	xorwf	___fladd@signs^0,f,c
 13644   0022CE                     l10504:
 13645   0022CE  C045  F046         	movff	___fladd@bexp,___fladd@grs
 13646   0022D2  C044  F045         	movff	___fladd@aexp,___fladd@bexp
 13647   0022D6  C046  F044         	movff	___fladd@grs,___fladd@aexp
 13648   0022DA  C037  F046         	movff	___fladd@b,___fladd@grs
 13649   0022DE  C03B  F037         	movff	___fladd@a,___fladd@b
 13650   0022E2  C046  F03B         	movff	___fladd@grs,___fladd@a
 13651   0022E6  C038  F046         	movff	___fladd@b+1,___fladd@grs
 13652   0022EA  C03C  F038         	movff	___fladd@a+1,___fladd@b+1
 13653   0022EE  C046  F03C         	movff	___fladd@grs,___fladd@a+1
 13654   0022F2  C039  F046         	movff	___fladd@b+2,___fladd@grs
 13655   0022F6  C03D  F039         	movff	___fladd@a+2,___fladd@b+2
 13656   0022FA  C046  F03D         	movff	___fladd@grs,___fladd@a+2
 13657   0022FE  C03A  F046         	movff	___fladd@b+3,___fladd@grs
 13658   002302  C03E  F03A         	movff	___fladd@a+3,___fladd@b+3
 13659   002306  C046  F03E         	movff	___fladd@grs,___fladd@a+3
 13660   00230A                     l10534:
 13661   00230A  0E00               	movlw	0
 13662   00230C  6E46               	movwf	___fladd@grs^0,c
 13663   00230E  5045               	movf	___fladd@bexp^0,w,c
 13664   002310  C044  F03F         	movff	___fladd@aexp,??___fladd
 13665   002314  6A40               	clrf	(??___fladd+1)^0,c
 13666   002316  5E3F               	subwf	??___fladd^0,f,c
 13667   002318  0E00               	movlw	0
 13668   00231A  5A40               	subwfb	(??___fladd+1)^0,f,c
 13669   00231C  BE40               	btfsc	(??___fladd+1)^0,7,c
 13670   00231E  EF9A  F011         	goto	u11221
 13671   002322  5040               	movf	(??___fladd+1)^0,w,c
 13672   002324  E109               	bnz	u11220
 13673   002326  0E1A               	movlw	26
 13674   002328  5C3F               	subwf	??___fladd^0,w,c
 13675   00232A  A0D8               	btfss	status,0,c
 13676   00232C  EF9A  F011         	goto	u11221
 13677   002330  EF9C  F011         	goto	u11220
 13678   002334                     u11221:
 13679   002334  EFD3  F011         	goto	l2375
 13680   002338                     u11220:
 13681   002338  5037               	movf	___fladd@b^0,w,c
 13682   00233A  1038               	iorwf	(___fladd@b+1)^0,w,c
 13683   00233C  1039               	iorwf	(___fladd@b+2)^0,w,c
 13684   00233E  103A               	iorwf	(___fladd@b+3)^0,w,c
 13685   002340  A4D8               	btfss	status,2,c
 13686   002342  EFA5  F011         	goto	u11231
 13687   002346  EFA8  F011         	goto	u11230
 13688   00234A                     u11231:
 13689   00234A  0E01               	movlw	1
 13690   00234C  EFA9  F011         	goto	u11240
 13691   002350                     u11230:
 13692   002350  0E00               	movlw	0
 13693   002352                     u11240:
 13694   002352  6E46               	movwf	___fladd@grs^0,c
 13695   002354  0E00               	movlw	0
 13696   002356  6E37               	movwf	___fladd@b^0,c
 13697   002358  0E00               	movlw	0
 13698   00235A  6E38               	movwf	(___fladd@b+1)^0,c
 13699   00235C  0E00               	movlw	0
 13700   00235E  6E39               	movwf	(___fladd@b+2)^0,c
 13701   002360  0E00               	movlw	0
 13702   002362  6E3A               	movwf	(___fladd@b+3)^0,c
 13703   002364  C044  F045         	movff	___fladd@aexp,___fladd@bexp
 13704   002368  EFDC  F011         	goto	l2374
 13705   00236C                     l2376:
 13706   00236C  A046               	btfss	___fladd@grs^0,0,c
 13707   00236E  EFBB  F011         	goto	u11251
 13708   002372  EFBD  F011         	goto	u11250
 13709   002376                     u11251:
 13710   002376  EFC3  F011         	goto	l10546
 13711   00237A                     u11250:
 13712   00237A  90D8               	bcf	status,0,c
 13713   00237C  3046               	rrcf	___fladd@grs^0,w,c
 13714   00237E  0901               	iorlw	1
 13715   002380  6E46               	movwf	___fladd@grs^0,c
 13716   002382  EFC5  F011         	goto	l10548
 13717   002386                     l10546:
 13718   002386  90D8               	bcf	status,0,c
 13719   002388  3246               	rrcf	___fladd@grs^0,f,c
 13720   00238A                     l10548:
 13721   00238A  A037               	btfss	___fladd@b^0,0,c
 13722   00238C  EFCA  F011         	goto	u11261
 13723   002390  EFCC  F011         	goto	u11260
 13724   002394                     u11261:
 13725   002394  EFCD  F011         	goto	l10552
 13726   002398                     u11260:
 13727   002398  8E46               	bsf	___fladd@grs^0,7,c
 13728   00239A                     l10552:
 13729   00239A  343A               	rlcf	(___fladd@b+3)^0,w,c
 13730   00239C  323A               	rrcf	(___fladd@b+3)^0,f,c
 13731   00239E  3239               	rrcf	(___fladd@b+2)^0,f,c
 13732   0023A0  3238               	rrcf	(___fladd@b+1)^0,f,c
 13733   0023A2  3237               	rrcf	___fladd@b^0,f,c
 13734   0023A4  2A45               	incf	___fladd@bexp^0,f,c
 13735   0023A6                     l2375:
 13736   0023A6  5044               	movf	___fladd@aexp^0,w,c
 13737   0023A8  5C45               	subwf	___fladd@bexp^0,w,c
 13738   0023AA  A0D8               	btfss	status,0,c
 13739   0023AC  EFDA  F011         	goto	u11271
 13740   0023B0  EFDC  F011         	goto	u11270
 13741   0023B4                     u11271:
 13742   0023B4  EFB6  F011         	goto	l2376
 13743   0023B8                     u11270:
 13744   0023B8                     l2374:
 13745   0023B8  BC43               	btfsc	___fladd@signs^0,6,c
 13746   0023BA  EFE1  F011         	goto	u11281
 13747   0023BE  EFE3  F011         	goto	u11280
 13748   0023C2                     u11281:
 13749   0023C2  EF23  F012         	goto	l10580
 13750   0023C6                     u11280:
 13751   0023C6  5045               	movf	___fladd@bexp^0,w,c
 13752   0023C8  A4D8               	btfss	status,2,c
 13753   0023CA  EFE9  F011         	goto	u11291
 13754   0023CE  EFEB  F011         	goto	u11290
 13755   0023D2                     u11291:
 13756   0023D2  EFF5  F011         	goto	l10562
 13757   0023D6                     u11290:
 13758   0023D6  0E00               	movlw	0
 13759   0023D8  6E37               	movwf	?___fladd^0,c
 13760   0023DA  0E00               	movlw	0
 13761   0023DC  6E38               	movwf	(?___fladd+1)^0,c
 13762   0023DE  0E00               	movlw	0
 13763   0023E0  6E39               	movwf	(?___fladd+2)^0,c
 13764   0023E2  0E00               	movlw	0
 13765   0023E4  6E3A               	movwf	(?___fladd+3)^0,c
 13766   0023E6  EF44  F013         	goto	l2383
 13767   0023EA                     l10562:
 13768   0023EA  503B               	movf	___fladd@a^0,w,c
 13769   0023EC  2637               	addwf	___fladd@b^0,f,c
 13770   0023EE  503C               	movf	(___fladd@a+1)^0,w,c
 13771   0023F0  2238               	addwfc	(___fladd@b+1)^0,f,c
 13772   0023F2  503D               	movf	(___fladd@a+2)^0,w,c
 13773   0023F4  2239               	addwfc	(___fladd@b+2)^0,f,c
 13774   0023F6  503E               	movf	(___fladd@a+3)^0,w,c
 13775   0023F8  223A               	addwfc	(___fladd@b+3)^0,f,c
 13776   0023FA  A03A               	btfss	(___fladd@b+3)^0,0,c
 13777   0023FC  EF02  F012         	goto	u11301
 13778   002400  EF04  F012         	goto	u11300
 13779   002404                     u11301:
 13780   002404  EFB0  F012         	goto	l10616
 13781   002408                     u11300:
 13782   002408  A046               	btfss	___fladd@grs^0,0,c
 13783   00240A  EF09  F012         	goto	u11311
 13784   00240E  EF0B  F012         	goto	u11310
 13785   002412                     u11311:
 13786   002412  EF11  F012         	goto	l10570
 13787   002416                     u11310:
 13788   002416  90D8               	bcf	status,0,c
 13789   002418  3046               	rrcf	___fladd@grs^0,w,c
 13790   00241A  0901               	iorlw	1
 13791   00241C  6E46               	movwf	___fladd@grs^0,c
 13792   00241E  EF13  F012         	goto	l10572
 13793   002422                     l10570:
 13794   002422  90D8               	bcf	status,0,c
 13795   002424  3246               	rrcf	___fladd@grs^0,f,c
 13796   002426                     l10572:
 13797   002426  A037               	btfss	___fladd@b^0,0,c
 13798   002428  EF18  F012         	goto	u11321
 13799   00242C  EF1A  F012         	goto	u11320
 13800   002430                     u11321:
 13801   002430  EF1B  F012         	goto	l10576
 13802   002434                     u11320:
 13803   002434  8E46               	bsf	___fladd@grs^0,7,c
 13804   002436                     l10576:
 13805   002436  343A               	rlcf	(___fladd@b+3)^0,w,c
 13806   002438  323A               	rrcf	(___fladd@b+3)^0,f,c
 13807   00243A  3239               	rrcf	(___fladd@b+2)^0,f,c
 13808   00243C  3238               	rrcf	(___fladd@b+1)^0,f,c
 13809   00243E  3237               	rrcf	___fladd@b^0,f,c
 13810   002440  2A45               	incf	___fladd@bexp^0,f,c
 13811   002442  EFB0  F012         	goto	l10616
 13812   002446                     l10580:
 13813   002446  503B               	movf	___fladd@a^0,w,c
 13814   002448  5C37               	subwf	___fladd@b^0,w,c
 13815   00244A  503C               	movf	(___fladd@a+1)^0,w,c
 13816   00244C  5838               	subwfb	(___fladd@b+1)^0,w,c
 13817   00244E  503D               	movf	(___fladd@a+2)^0,w,c
 13818   002450  5839               	subwfb	(___fladd@b+2)^0,w,c
 13819   002452  503A               	movf	(___fladd@b+3)^0,w,c
 13820   002454  0A80               	xorlw	128
 13821   002456  6E3F               	movwf	??___fladd^0,c
 13822   002458  503E               	movf	(___fladd@a+3)^0,w,c
 13823   00245A  0A80               	xorlw	128
 13824   00245C  583F               	subwfb	??___fladd^0,w,c
 13825   00245E  B0D8               	btfsc	status,0,c
 13826   002460  EF34  F012         	goto	u11331
 13827   002464  EF36  F012         	goto	u11330
 13828   002468                     u11331:
 13829   002468  EF61  F012         	goto	l10590
 13830   00246C                     u11330:
 13831   00246C  5037               	movf	___fladd@b^0,w,c
 13832   00246E  5C3B               	subwf	___fladd@a^0,w,c
 13833   002470  6E3F               	movwf	??___fladd^0,c
 13834   002472  5038               	movf	(___fladd@b+1)^0,w,c
 13835   002474  583C               	subwfb	(___fladd@a+1)^0,w,c
 13836   002476  6E40               	movwf	(??___fladd+1)^0,c
 13837   002478  5039               	movf	(___fladd@b+2)^0,w,c
 13838   00247A  583D               	subwfb	(___fladd@a+2)^0,w,c
 13839   00247C  6E41               	movwf	(??___fladd+2)^0,c
 13840   00247E  503A               	movf	(___fladd@b+3)^0,w,c
 13841   002480  583E               	subwfb	(___fladd@a+3)^0,w,c
 13842   002482  6E42               	movwf	(??___fladd+3)^0,c
 13843   002484  0EFF               	movlw	255
 13844   002486  243F               	addwf	??___fladd^0,w,c
 13845   002488  6E37               	movwf	___fladd@b^0,c
 13846   00248A  0EFF               	movlw	255
 13847   00248C  2040               	addwfc	(??___fladd+1)^0,w,c
 13848   00248E  6E38               	movwf	(___fladd@b+1)^0,c
 13849   002490  0EFF               	movlw	255
 13850   002492  2041               	addwfc	(??___fladd+2)^0,w,c
 13851   002494  6E39               	movwf	(___fladd@b+2)^0,c
 13852   002496  0EFF               	movlw	255
 13853   002498  2042               	addwfc	(??___fladd+3)^0,w,c
 13854   00249A  6E3A               	movwf	(___fladd@b+3)^0,c
 13855   00249C  0E80               	movlw	128
 13856   00249E  1A43               	xorwf	___fladd@signs^0,f,c
 13857   0024A0  6C46               	negf	___fladd@grs^0,c
 13858   0024A2  5046               	movf	___fladd@grs^0,w,c
 13859   0024A4  A4D8               	btfss	status,2,c
 13860   0024A6  EF57  F012         	goto	u11341
 13861   0024AA  EF59  F012         	goto	u11340
 13862   0024AE                     u11341:
 13863   0024AE  EF69  F012         	goto	l2391
 13864   0024B2                     u11340:
 13865   0024B2  0E01               	movlw	1
 13866   0024B4  2637               	addwf	___fladd@b^0,f,c
 13867   0024B6  0E00               	movlw	0
 13868   0024B8  2238               	addwfc	(___fladd@b+1)^0,f,c
 13869   0024BA  2239               	addwfc	(___fladd@b+2)^0,f,c
 13870   0024BC  223A               	addwfc	(___fladd@b+3)^0,f,c
 13871   0024BE  EF69  F012         	goto	l2391
 13872   0024C2                     l10590:
 13873   0024C2  503B               	movf	___fladd@a^0,w,c
 13874   0024C4  5E37               	subwf	___fladd@b^0,f,c
 13875   0024C6  503C               	movf	(___fladd@a+1)^0,w,c
 13876   0024C8  5A38               	subwfb	(___fladd@b+1)^0,f,c
 13877   0024CA  503D               	movf	(___fladd@a+2)^0,w,c
 13878   0024CC  5A39               	subwfb	(___fladd@b+2)^0,f,c
 13879   0024CE  503E               	movf	(___fladd@a+3)^0,w,c
 13880   0024D0  5A3A               	subwfb	(___fladd@b+3)^0,f,c
 13881   0024D2                     l2391:
 13882   0024D2  5037               	movf	___fladd@b^0,w,c
 13883   0024D4  1038               	iorwf	(___fladd@b+1)^0,w,c
 13884   0024D6  1039               	iorwf	(___fladd@b+2)^0,w,c
 13885   0024D8  103A               	iorwf	(___fladd@b+3)^0,w,c
 13886   0024DA  A4D8               	btfss	status,2,c
 13887   0024DC  EF72  F012         	goto	u11351
 13888   0024E0  EF74  F012         	goto	u11350
 13889   0024E4                     u11351:
 13890   0024E4  EFA9  F012         	goto	l10614
 13891   0024E8                     u11350:
 13892   0024E8  5046               	movf	___fladd@grs^0,w,c
 13893   0024EA  A4D8               	btfss	status,2,c
 13894   0024EC  EF7A  F012         	goto	u11361
 13895   0024F0  EF7C  F012         	goto	u11360
 13896   0024F4                     u11361:
 13897   0024F4  EFA9  F012         	goto	l10614
 13898   0024F8                     u11360:
 13899   0024F8  0E00               	movlw	0
 13900   0024FA  6E37               	movwf	?___fladd^0,c
 13901   0024FC  0E00               	movlw	0
 13902   0024FE  6E38               	movwf	(?___fladd+1)^0,c
 13903   002500  0E00               	movlw	0
 13904   002502  6E39               	movwf	(?___fladd+2)^0,c
 13905   002504  0E00               	movlw	0
 13906   002506  6E3A               	movwf	(?___fladd+3)^0,c
 13907   002508  EF44  F013         	goto	l2383
 13908   00250C                     l10598:
 13909   00250C  90D8               	bcf	status,0,c
 13910   00250E  3637               	rlcf	___fladd@b^0,f,c
 13911   002510  3638               	rlcf	(___fladd@b+1)^0,f,c
 13912   002512  3639               	rlcf	(___fladd@b+2)^0,f,c
 13913   002514  363A               	rlcf	(___fladd@b+3)^0,f,c
 13914   002516  AE46               	btfss	___fladd@grs^0,7,c
 13915   002518  EF90  F012         	goto	u11371
 13916   00251C  EF92  F012         	goto	u11370
 13917   002520                     u11371:
 13918   002520  EF93  F012         	goto	l10604
 13919   002524                     u11370:
 13920   002524  8037               	bsf	___fladd@b^0,0,c
 13921   002526                     l10604:
 13922   002526  A046               	btfss	___fladd@grs^0,0,c
 13923   002528  EF98  F012         	goto	u11381
 13924   00252C  EF9A  F012         	goto	u11380
 13925   002530                     u11381:
 13926   002530  EF9E  F012         	goto	l10608
 13927   002534                     u11380:
 13928   002534  80D8               	bsf	status,0,c
 13929   002536  3646               	rlcf	___fladd@grs^0,f,c
 13930   002538  EFA0  F012         	goto	l10610
 13931   00253C                     l10608:
 13932   00253C  90D8               	bcf	status,0,c
 13933   00253E  3646               	rlcf	___fladd@grs^0,f,c
 13934   002540                     l10610:
 13935   002540  5045               	movf	___fladd@bexp^0,w,c
 13936   002542  B4D8               	btfsc	status,2,c
 13937   002544  EFA6  F012         	goto	u11391
 13938   002548  EFA8  F012         	goto	u11390
 13939   00254C                     u11391:
 13940   00254C  EFA9  F012         	goto	l10614
 13941   002550                     u11390:
 13942   002550  0645               	decf	___fladd@bexp^0,f,c
 13943   002552                     l10614:
 13944   002552  AE39               	btfss	(___fladd@b+2)^0,7,c
 13945   002554  EFAE  F012         	goto	u11401
 13946   002558  EFB0  F012         	goto	u11400
 13947   00255C                     u11401:
 13948   00255C  EF86  F012         	goto	l10598
 13949   002560                     u11400:
 13950   002560                     l10616:
 13951   002560  0E00               	movlw	0
 13952   002562  6E44               	movwf	___fladd@aexp^0,c
 13953   002564  AE46               	btfss	___fladd@grs^0,7,c
 13954   002566  EFB7  F012         	goto	u11411
 13955   00256A  EFB9  F012         	goto	u11410
 13956   00256E                     u11411:
 13957   00256E  EFD1  F012         	goto	l2400
 13958   002572                     u11410:
 13959   002572  C046  F03F         	movff	___fladd@grs,??___fladd
 13960   002576  0E7F               	movlw	127
 13961   002578  163F               	andwf	??___fladd^0,f,c
 13962   00257A  B4D8               	btfsc	status,2,c
 13963   00257C  EFC2  F012         	goto	u11421
 13964   002580  EFC4  F012         	goto	u11420
 13965   002584                     u11421:
 13966   002584  EFC8  F012         	goto	l2401
 13967   002588                     u11420:
 13968   002588                     l10622:
 13969   002588  0E01               	movlw	1
 13970   00258A  6E44               	movwf	___fladd@aexp^0,c
 13971   00258C  EFD1  F012         	goto	l2400
 13972   002590                     l2401:
 13973   002590  A037               	btfss	___fladd@b^0,0,c
 13974   002592  EFCD  F012         	goto	u11431
 13975   002596  EFCF  F012         	goto	u11430
 13976   00259A                     u11431:
 13977   00259A  EFD1  F012         	goto	l2400
 13978   00259E                     u11430:
 13979   00259E  EFC4  F012         	goto	l10622
 13980   0025A2                     l2400:
 13981   0025A2  5044               	movf	___fladd@aexp^0,w,c
 13982   0025A4  B4D8               	btfsc	status,2,c
 13983   0025A6  EFD7  F012         	goto	u11441
 13984   0025AA  EFD9  F012         	goto	u11440
 13985   0025AE                     u11441:
 13986   0025AE  EF04  F013         	goto	l10634
 13987   0025B2                     u11440:
 13988   0025B2  0E01               	movlw	1
 13989   0025B4  2637               	addwf	___fladd@b^0,f,c
 13990   0025B6  0E00               	movlw	0
 13991   0025B8  2238               	addwfc	(___fladd@b+1)^0,f,c
 13992   0025BA  2239               	addwfc	(___fladd@b+2)^0,f,c
 13993   0025BC  223A               	addwfc	(___fladd@b+3)^0,f,c
 13994   0025BE  A03A               	btfss	(___fladd@b+3)^0,0,c
 13995   0025C0  EFE4  F012         	goto	u11451
 13996   0025C4  EFE6  F012         	goto	u11450
 13997   0025C8                     u11451:
 13998   0025C8  EF04  F013         	goto	l10634
 13999   0025CC                     u11450:
 14000   0025CC  C037  F03F         	movff	___fladd@b,??___fladd
 14001   0025D0  C038  F040         	movff	___fladd@b+1,??___fladd+1
 14002   0025D4  C039  F041         	movff	___fladd@b+2,??___fladd+2
 14003   0025D8  C03A  F042         	movff	___fladd@b+3,??___fladd+3
 14004   0025DC  3442               	rlcf	(??___fladd+3)^0,w,c
 14005   0025DE  3242               	rrcf	(??___fladd+3)^0,f,c
 14006   0025E0  3241               	rrcf	(??___fladd+2)^0,f,c
 14007   0025E2  3240               	rrcf	(??___fladd+1)^0,f,c
 14008   0025E4  323F               	rrcf	??___fladd^0,f,c
 14009   0025E6  C03F  F037         	movff	??___fladd,___fladd@b
 14010   0025EA  C040  F038         	movff	??___fladd+1,___fladd@b+1
 14011   0025EE  C041  F039         	movff	??___fladd+2,___fladd@b+2
 14012   0025F2  C042  F03A         	movff	??___fladd+3,___fladd@b+3
 14013   0025F6  2845               	incf	___fladd@bexp^0,w,c
 14014   0025F8  B4D8               	btfsc	status,2,c
 14015   0025FA  EF01  F013         	goto	u11461
 14016   0025FE  EF03  F013         	goto	u11460
 14017   002602                     u11461:
 14018   002602  EF04  F013         	goto	l10634
 14019   002606                     u11460:
 14020   002606  2A45               	incf	___fladd@bexp^0,f,c
 14021   002608                     l10634:
 14022   002608  2845               	incf	___fladd@bexp^0,w,c
 14023   00260A  B4D8               	btfsc	status,2,c
 14024   00260C  EF0A  F013         	goto	u11471
 14025   002610  EF0C  F013         	goto	u11470
 14026   002614                     u11471:
 14027   002614  EF14  F013         	goto	l10638
 14028   002618                     u11470:
 14029   002618  5045               	movf	___fladd@bexp^0,w,c
 14030   00261A  A4D8               	btfss	status,2,c
 14031   00261C  EF12  F013         	goto	u11481
 14032   002620  EF14  F013         	goto	u11480
 14033   002624                     u11481:
 14034   002624  EF26  F013         	goto	l10642
 14035   002628                     u11480:
 14036   002628                     l10638:
 14037   002628  0E00               	movlw	0
 14038   00262A  6E37               	movwf	___fladd@b^0,c
 14039   00262C  0E00               	movlw	0
 14040   00262E  6E38               	movwf	(___fladd@b+1)^0,c
 14041   002630  0E00               	movlw	0
 14042   002632  6E39               	movwf	(___fladd@b+2)^0,c
 14043   002634  0E00               	movlw	0
 14044   002636  6E3A               	movwf	(___fladd@b+3)^0,c
 14045   002638  5045               	movf	___fladd@bexp^0,w,c
 14046   00263A  A4D8               	btfss	status,2,c
 14047   00263C  EF22  F013         	goto	u11491
 14048   002640  EF24  F013         	goto	u11490
 14049   002644                     u11491:
 14050   002644  EF26  F013         	goto	l10642
 14051   002648                     u11490:
 14052   002648  0E00               	movlw	0
 14053   00264A  6E43               	movwf	___fladd@signs^0,c
 14054   00264C                     l10642:
 14055   00264C  A045               	btfss	___fladd@bexp^0,0,c
 14056   00264E  EF2B  F013         	goto	u11501
 14057   002652  EF2D  F013         	goto	u11500
 14058   002656                     u11501:
 14059   002656  EF30  F013         	goto	l10646
 14060   00265A                     u11500:
 14061   00265A  8E39               	bsf	(___fladd@b+2)^0,7,c
 14062   00265C  EF31  F013         	goto	l10648
 14063   002660                     l10646:
 14064   002660  9E39               	bcf	(___fladd@b+2)^0,7,c
 14065   002662                     l10648:
 14066   002662  90D8               	bcf	status,0,c
 14067   002664  3045               	rrcf	___fladd@bexp^0,w,c
 14068   002666  6E3A               	movwf	(___fladd@b+3)^0,c
 14069   002668  AE43               	btfss	___fladd@signs^0,7,c
 14070   00266A  EF39  F013         	goto	u11511
 14071   00266E  EF3B  F013         	goto	u11510
 14072   002672                     u11511:
 14073   002672  EF3C  F013         	goto	l10654
 14074   002676                     u11510:
 14075   002676  8E3A               	bsf	(___fladd@b+3)^0,7,c
 14076   002678                     l10654:
 14077   002678  C037  F037         	movff	___fladd@b,?___fladd
 14078   00267C  C038  F038         	movff	___fladd@b+1,?___fladd+1
 14079   002680  C039  F039         	movff	___fladd@b+2,?___fladd+2
 14080   002684  C03A  F03A         	movff	___fladd@b+3,?___fladd+3
 14081   002688                     l2383:
 14082   002688  0012               	return		;funcret
 14083   00268A                     __end_of___fladd:
 14084                           	callstack 0
 14085                           
 14086 ;; *************** function _MSSP_I2C_Master_call_slave *****************
 14087 ;; Defined at:
 14088 ;;		line 262 in file "MKAL_layer/I2C/hal_i2c.c"
 14089 ;; Parameters:    Size  Location     Type
 14090 ;;  i2c_obj         2   19[COMRAM] PTR const struct .
 14091 ;;		 -> mssp_i2c(15), 
 14092 ;;  address         1   21[COMRAM] unsigned char 
 14093 ;;  data            1   22[COMRAM] unsigned char 
 14094 ;;  _ack            1   23[COMRAM] PTR unsigned char 
 14095 ;;		 -> i2c_ack(1), 
 14096 ;; Auto vars:     Size  Location     Type
 14097 ;;		None
 14098 ;; Return value:  Size  Location     Type
 14099 ;;                  1    wreg      void 
 14100 ;; Registers used:
 14101 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14102 ;; Tracked objects:
 14103 ;;		On entry : 0/0
 14104 ;;		On exit  : 0/0
 14105 ;;		Unchanged: 0/0
 14106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14107 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14110 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14111 ;;Total ram usage:        5 bytes
 14112 ;; Hardware stack levels used: 1
 14113 ;; Hardware stack levels required when called: 5
 14114 ;; This function calls:
 14115 ;;		_MSSP_I2C_Master_Send_Start
 14116 ;;		_MSSP_I2C_Master_Send_Stop
 14117 ;;		_MSSP_I2C_Master_Write_Blocking
 14118 ;; This function is called by:
 14119 ;;		_main
 14120 ;; This function uses a non-reentrant model
 14121 ;;
 14122                           
 14123                           	psect	text72
 14124   005A84                     __ptext72:
 14125                           	callstack 0
 14126   005A84                     _MSSP_I2C_Master_call_slave:
 14127                           	callstack 25
 14128   005A84                     
 14129                           ;MKAL_layer/I2C/hal_i2c.c: 263:     MSSP_I2C_Master_Send_Start(i2c_obj);
 14130   005A84  C014  F010         	movff	MSSP_I2C_Master_call_slave@i2c_obj,MSSP_I2C_Master_Send_Start@i2c_obj
 14131   005A88  C015  F011         	movff	MSSP_I2C_Master_call_slave@i2c_obj+1,MSSP_I2C_Master_Send_Start@i2c_obj+1
 14132   005A8C  EC53  F02E         	call	_MSSP_I2C_Master_Send_Start	;wreg free
 14133   005A90                     
 14134                           ;MKAL_layer/I2C/hal_i2c.c: 264:     MSSP_I2C_Master_Write_Blocking(i2c_obj,address,_ack)
      +                          ;
 14135   005A90  C014  F010         	movff	MSSP_I2C_Master_call_slave@i2c_obj,MSSP_I2C_Master_Write_Blocking@i2c_obj
 14136   005A94  C015  F011         	movff	MSSP_I2C_Master_call_slave@i2c_obj+1,MSSP_I2C_Master_Write_Blocking@i2c_obj+1
 14137   005A98  C016  F012         	movff	MSSP_I2C_Master_call_slave@address,MSSP_I2C_Master_Write_Blocking@i2c_data
 14138   005A9C  C018  F013         	movff	MSSP_I2C_Master_call_slave@_ack,MSSP_I2C_Master_Write_Blocking@_ack
 14139   005AA0  EC4A  F02B         	call	_MSSP_I2C_Master_Write_Blocking	;wreg free
 14140   005AA4                     
 14141                           ;MKAL_layer/I2C/hal_i2c.c: 265:     MSSP_I2C_Master_Write_Blocking(i2c_obj,data,_ack);
 14142   005AA4  C014  F010         	movff	MSSP_I2C_Master_call_slave@i2c_obj,MSSP_I2C_Master_Write_Blocking@i2c_obj
 14143   005AA8  C015  F011         	movff	MSSP_I2C_Master_call_slave@i2c_obj+1,MSSP_I2C_Master_Write_Blocking@i2c_obj+1
 14144   005AAC  C017  F012         	movff	MSSP_I2C_Master_call_slave@data,MSSP_I2C_Master_Write_Blocking@i2c_data
 14145   005AB0  C018  F013         	movff	MSSP_I2C_Master_call_slave@_ack,MSSP_I2C_Master_Write_Blocking@_ack
 14146   005AB4  EC4A  F02B         	call	_MSSP_I2C_Master_Write_Blocking	;wreg free
 14147                           
 14148                           ;MKAL_layer/I2C/hal_i2c.c: 266:     MSSP_I2C_Master_Send_Stop(i2c_obj);
 14149   005AB8  C014  F010         	movff	MSSP_I2C_Master_call_slave@i2c_obj,MSSP_I2C_Master_Send_Stop@i2c_obj
 14150   005ABC  C015  F011         	movff	MSSP_I2C_Master_call_slave@i2c_obj+1,MSSP_I2C_Master_Send_Stop@i2c_obj+1
 14151   005AC0  EC37  F02E         	call	_MSSP_I2C_Master_Send_Stop	;wreg free
 14152   005AC4  0012               	return		;funcret
 14153   005AC6                     __end_of_MSSP_I2C_Master_call_slave:
 14154                           	callstack 0
 14155                           
 14156 ;; *************** function _MSSP_I2C_Master_Write_Blocking *****************
 14157 ;; Defined at:
 14158 ;;		line 164 in file "MKAL_layer/I2C/hal_i2c.c"
 14159 ;; Parameters:    Size  Location     Type
 14160 ;;  i2c_obj         2   15[COMRAM] PTR const struct .
 14161 ;;		 -> read_byte_24c02c@mssp_i2c(2), write_byte_24c02c@mssp_i2c(2), mssp_i2c(15), 
 14162 ;;  i2c_data        1   17[COMRAM] unsigned char 
 14163 ;;  _ack            1   18[COMRAM] PTR unsigned char 
 14164 ;;		 -> i2c_ack(1), 
 14165 ;; Auto vars:     Size  Location     Type
 14166 ;;  ret             1    0        unsigned char 
 14167 ;; Return value:  Size  Location     Type
 14168 ;;                  1    wreg      unsigned char 
 14169 ;; Registers used:
 14170 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14171 ;; Tracked objects:
 14172 ;;		On entry : 0/0
 14173 ;;		On exit  : 0/0
 14174 ;;		Unchanged: 0/0
 14175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14176 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14179 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14180 ;;Total ram usage:        4 bytes
 14181 ;; Hardware stack levels used: 1
 14182 ;; Hardware stack levels required when called: 4
 14183 ;; This function calls:
 14184 ;;		Nothing
 14185 ;; This function is called by:
 14186 ;;		_MSSP_I2C_Master_read_data_in_register
 14187 ;;		_MSSP_I2C_Master_call_slave
 14188 ;;		_write_byte_24c02c
 14189 ;;		_read_byte_24c02c
 14190 ;; This function uses a non-reentrant model
 14191 ;;
 14192                           
 14193                           	psect	text73
 14194   005694                     __ptext73:
 14195                           	callstack 0
 14196   005694                     _MSSP_I2C_Master_Write_Blocking:
 14197                           	callstack 24
 14198   005694                     
 14199                           ;MKAL_layer/I2C/hal_i2c.c: 166:     if((((void*)0) == i2c_obj) || (((void*)0) == _ack)){
 14200   005694  5010               	movf	MSSP_I2C_Master_Write_Blocking@i2c_obj^0,w,c
 14201   005696  1011               	iorwf	(MSSP_I2C_Master_Write_Blocking@i2c_obj+1)^0,w,c
 14202   005698  B4D8               	btfsc	status,2,c
 14203   00569A  EF51  F02B         	goto	u12021
 14204   00569E  EF53  F02B         	goto	u12020
 14205   0056A2                     u12021:
 14206   0056A2  EF5B  F02B         	goto	l10942
 14207   0056A6                     u12020:
 14208   0056A6  5013               	movf	MSSP_I2C_Master_Write_Blocking@_ack^0,w,c
 14209   0056A8  A4D8               	btfss	status,2,c
 14210   0056AA  EF59  F02B         	goto	u12031
 14211   0056AE  EF5B  F02B         	goto	u12030
 14212   0056B2                     u12031:
 14213   0056B2  EF5D  F02B         	goto	l1075
 14214   0056B6                     u12030:
 14215   0056B6                     l10942:
 14216                           
 14217                           ;MKAL_layer/I2C/hal_i2c.c: 168:     }
 14218   0056B6  EF79  F02B         	goto	l1084
 14219   0056BA                     l1075:
 14220                           
 14221                           ;MKAL_layer/I2C/hal_i2c.c: 171:         SSPBUF = i2c_data;
 14222   0056BA  C012  FFC9         	movff	MSSP_I2C_Master_Write_Blocking@i2c_data,4041	;volatile
 14223   0056BE                     l1079:
 14224   0056BE  B0C7               	btfsc	199,0,c	;volatile
 14225   0056C0  EF64  F02B         	goto	u12041
 14226   0056C4  EF66  F02B         	goto	u12040
 14227   0056C8                     u12041:
 14228   0056C8  EF5F  F02B         	goto	l1079
 14229   0056CC                     u12040:
 14230   0056CC                     
 14231                           ;MKAL_layer/I2C/hal_i2c.c: 175:         PIR1bits.SSPIF = 0;
 14232   0056CC  969E               	bcf	158,3,c	;volatile
 14233                           
 14234                           ;MKAL_layer/I2C/hal_i2c.c: 177:         if(0 == SSPCON2bits.ACKSTAT){
 14235   0056CE  BCC5               	btfsc	197,6,c	;volatile
 14236   0056D0  EF6C  F02B         	goto	u12051
 14237   0056D4  EF6E  F02B         	goto	u12050
 14238   0056D8                     u12051:
 14239   0056D8  EF74  F02B         	goto	l10946
 14240   0056DC                     u12050:
 14241   0056DC                     
 14242                           ;MKAL_layer/I2C/hal_i2c.c: 178:             *_ack = 0;
 14243   0056DC  5013               	movf	MSSP_I2C_Master_Write_Blocking@_ack^0,w,c
 14244   0056DE  6ED9               	movwf	fsr2l,c
 14245   0056E0  6ADA               	clrf	fsr2h,c
 14246   0056E2  6ADF               	clrf	indf2,c
 14247                           
 14248                           ;MKAL_layer/I2C/hal_i2c.c: 179:         }
 14249   0056E4  EF79  F02B         	goto	l10948
 14250   0056E8                     l10946:
 14251                           
 14252                           ;MKAL_layer/I2C/hal_i2c.c: 181:             *_ack = 1;
 14253   0056E8  5013               	movf	MSSP_I2C_Master_Write_Blocking@_ack^0,w,c
 14254   0056EA  6ED9               	movwf	fsr2l,c
 14255   0056EC  6ADA               	clrf	fsr2h,c
 14256   0056EE  0E01               	movlw	1
 14257   0056F0  6EDF               	movwf	indf2,c
 14258   0056F2                     l10948:
 14259   0056F2                     l1084:
 14260   0056F2  0012               	return		;funcret
 14261   0056F4                     __end_of_MSSP_I2C_Master_Write_Blocking:
 14262                           	callstack 0
 14263                           
 14264 ;; *************** function _MSSP_I2C_Master_Send_Stop *****************
 14265 ;; Defined at:
 14266 ;;		line 141 in file "MKAL_layer/I2C/hal_i2c.c"
 14267 ;; Parameters:    Size  Location     Type
 14268 ;;  i2c_obj         2   15[COMRAM] PTR const struct .
 14269 ;;		 -> read_byte_24c02c@mssp_i2c(2), write_byte_24c02c@mssp_i2c(2), mssp_i2c(15), 
 14270 ;; Auto vars:     Size  Location     Type
 14271 ;;  ret             1    0        unsigned char 
 14272 ;; Return value:  Size  Location     Type
 14273 ;;                  1    wreg      unsigned char 
 14274 ;; Registers used:
 14275 ;;		wreg, status,2, status,0
 14276 ;; Tracked objects:
 14277 ;;		On entry : 0/0
 14278 ;;		On exit  : 0/0
 14279 ;;		Unchanged: 0/0
 14280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14281 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14284 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14285 ;;Total ram usage:        2 bytes
 14286 ;; Hardware stack levels used: 1
 14287 ;; Hardware stack levels required when called: 4
 14288 ;; This function calls:
 14289 ;;		Nothing
 14290 ;; This function is called by:
 14291 ;;		_ds1307_read_values
 14292 ;;		_tc74_read_value
 14293 ;;		_MSSP_I2C_Master_call_slave
 14294 ;;		_write_byte_24c02c
 14295 ;;		_read_byte_24c02c
 14296 ;; This function uses a non-reentrant model
 14297 ;;
 14298                           
 14299                           	psect	text74
 14300   005C6E                     __ptext74:
 14301                           	callstack 0
 14302   005C6E                     _MSSP_I2C_Master_Send_Stop:
 14303                           	callstack 25
 14304   005C6E                     
 14305                           ;MKAL_layer/I2C/hal_i2c.c: 143:     if(((void*)0) == i2c_obj){
 14306   005C6E  5010               	movf	MSSP_I2C_Master_Send_Stop@i2c_obj^0,w,c
 14307   005C70  1011               	iorwf	(MSSP_I2C_Master_Send_Stop@i2c_obj+1)^0,w,c
 14308   005C72  A4D8               	btfss	status,2,c
 14309   005C74  EF3E  F02E         	goto	u12931
 14310   005C78  EF40  F02E         	goto	u12930
 14311   005C7C                     u12931:
 14312   005C7C  EF42  F02E         	goto	l1065
 14313   005C80                     u12930:
 14314   005C80                     l11768:
 14315                           
 14316                           ;MKAL_layer/I2C/hal_i2c.c: 145:     }
 14317   005C80  EF52  F02E         	goto	l1072
 14318   005C84                     l1065:
 14319                           
 14320                           ;MKAL_layer/I2C/hal_i2c.c: 148:         SSPCON2bits.PEN = 1;
 14321   005C84  84C5               	bsf	197,2,c	;volatile
 14322   005C86                     l1067:
 14323   005C86  B4C5               	btfsc	197,2,c	;volatile
 14324   005C88  EF48  F02E         	goto	u12941
 14325   005C8C  EF4A  F02E         	goto	u12940
 14326   005C90                     u12941:
 14327   005C90  EF43  F02E         	goto	l1067
 14328   005C94                     u12940:
 14329   005C94                     
 14330                           ;MKAL_layer/I2C/hal_i2c.c: 152:         PIR1bits.SSPIF = 0;
 14331   005C94  969E               	bcf	158,3,c	;volatile
 14332                           
 14333                           ;MKAL_layer/I2C/hal_i2c.c: 154:         if(1 == SSPSTATbits.P){
 14334   005C96  A8C7               	btfss	199,4,c	;volatile
 14335   005C98  EF50  F02E         	goto	u12951
 14336   005C9C  EF52  F02E         	goto	u12950
 14337   005CA0                     u12951:
 14338   005CA0  EF40  F02E         	goto	l11768
 14339   005CA4                     u12950:
 14340   005CA4                     l1072:
 14341   005CA4  0012               	return		;funcret
 14342   005CA6                     __end_of_MSSP_I2C_Master_Send_Stop:
 14343                           	callstack 0
 14344                           
 14345 ;; *************** function _MSSP_I2C_Master_Send_Start *****************
 14346 ;; Defined at:
 14347 ;;		line 101 in file "MKAL_layer/I2C/hal_i2c.c"
 14348 ;; Parameters:    Size  Location     Type
 14349 ;;  i2c_obj         2   15[COMRAM] PTR const struct .
 14350 ;;		 -> read_byte_24c02c@mssp_i2c(2), write_byte_24c02c@mssp_i2c(2), mssp_i2c(15), 
 14351 ;; Auto vars:     Size  Location     Type
 14352 ;;  ret             1    0        unsigned char 
 14353 ;; Return value:  Size  Location     Type
 14354 ;;                  1    wreg      unsigned char 
 14355 ;; Registers used:
 14356 ;;		wreg, status,2, status,0
 14357 ;; Tracked objects:
 14358 ;;		On entry : 0/0
 14359 ;;		On exit  : 0/0
 14360 ;;		Unchanged: 0/0
 14361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14362 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14365 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14366 ;;Total ram usage:        2 bytes
 14367 ;; Hardware stack levels used: 1
 14368 ;; Hardware stack levels required when called: 4
 14369 ;; This function calls:
 14370 ;;		Nothing
 14371 ;; This function is called by:
 14372 ;;		_ds1307_read_values
 14373 ;;		_tc74_read_value
 14374 ;;		_MSSP_I2C_Master_call_slave
 14375 ;;		_write_byte_24c02c
 14376 ;;		_read_byte_24c02c
 14377 ;; This function uses a non-reentrant model
 14378 ;;
 14379                           
 14380                           	psect	text75
 14381   005CA6                     __ptext75:
 14382                           	callstack 0
 14383   005CA6                     _MSSP_I2C_Master_Send_Start:
 14384                           	callstack 25
 14385   005CA6                     
 14386                           ;MKAL_layer/I2C/hal_i2c.c: 103:     if(((void*)0) == i2c_obj){
 14387   005CA6  5010               	movf	MSSP_I2C_Master_Send_Start@i2c_obj^0,w,c
 14388   005CA8  1011               	iorwf	(MSSP_I2C_Master_Send_Start@i2c_obj+1)^0,w,c
 14389   005CAA  A4D8               	btfss	status,2,c
 14390   005CAC  EF5A  F02E         	goto	u12901
 14391   005CB0  EF5C  F02E         	goto	u12900
 14392   005CB4                     u12901:
 14393   005CB4  EF5E  F02E         	goto	l1047
 14394   005CB8                     u12900:
 14395   005CB8                     l11756:
 14396                           
 14397                           ;MKAL_layer/I2C/hal_i2c.c: 105:     }
 14398   005CB8  EF6E  F02E         	goto	l1054
 14399   005CBC                     l1047:
 14400                           
 14401                           ;MKAL_layer/I2C/hal_i2c.c: 108:         SSPCON2bits.SEN = 1;
 14402   005CBC  80C5               	bsf	197,0,c	;volatile
 14403   005CBE                     l1049:
 14404   005CBE  B0C5               	btfsc	197,0,c	;volatile
 14405   005CC0  EF64  F02E         	goto	u12911
 14406   005CC4  EF66  F02E         	goto	u12910
 14407   005CC8                     u12911:
 14408   005CC8  EF5F  F02E         	goto	l1049
 14409   005CCC                     u12910:
 14410   005CCC                     
 14411                           ;MKAL_layer/I2C/hal_i2c.c: 112:         PIR1bits.SSPIF = 0;
 14412   005CCC  969E               	bcf	158,3,c	;volatile
 14413                           
 14414                           ;MKAL_layer/I2C/hal_i2c.c: 114:         if(1 == SSPSTATbits.S){
 14415   005CCE  A6C7               	btfss	199,3,c	;volatile
 14416   005CD0  EF6C  F02E         	goto	u12921
 14417   005CD4  EF6E  F02E         	goto	u12920
 14418   005CD8                     u12921:
 14419   005CD8  EF5C  F02E         	goto	l11756
 14420   005CDC                     u12920:
 14421   005CDC                     l1054:
 14422   005CDC  0012               	return		;funcret
 14423   005CDE                     __end_of_MSSP_I2C_Master_Send_Start:
 14424                           	callstack 0
 14425                           
 14426 ;; *************** function _ADC_get_conversion_blocking *****************
 14427 ;; Defined at:
 14428 ;;		line 143 in file "MKAL_layer/ADC/hal_adc.c"
 14429 ;; Parameters:    Size  Location     Type
 14430 ;;  ADC_conf        2   23[COMRAM] PTR const struct .
 14431 ;;		 -> ADC_(6), 
 14432 ;;  ADC_CHANNAL_    1   25[COMRAM] enum E3044
 14433 ;;  conversion_s    1   26[COMRAM] PTR unsigned short 
 14434 ;;		 -> ADC_VALUE(2), 
 14435 ;; Auto vars:     Size  Location     Type
 14436 ;;  ret             1   28[COMRAM] unsigned char 
 14437 ;;  l_conversion    1   27[COMRAM] unsigned char 
 14438 ;; Return value:  Size  Location     Type
 14439 ;;                  1    wreg      unsigned char 
 14440 ;; Registers used:
 14441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14442 ;; Tracked objects:
 14443 ;;		On entry : 0/0
 14444 ;;		On exit  : 0/0
 14445 ;;		Unchanged: 0/0
 14446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14447 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14448 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14450 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14451 ;;Total ram usage:        6 bytes
 14452 ;; Hardware stack levels used: 1
 14453 ;; Hardware stack levels required when called: 6
 14454 ;; This function calls:
 14455 ;;		_ADC_ISconversion_done
 14456 ;;		_ADC_ISconversion_result
 14457 ;;		_ADC_select_channal
 14458 ;;		_ADC_start_conversion
 14459 ;; This function is called by:
 14460 ;;		_main
 14461 ;; This function uses a non-reentrant model
 14462 ;;
 14463                           
 14464                           	psect	text76
 14465   005316                     __ptext76:
 14466                           	callstack 0
 14467   005316                     _ADC_get_conversion_blocking:
 14468                           	callstack 24
 14469   005316                     
 14470                           ;MKAL_layer/ADC/hal_adc.c: 146:      uint8 l_conversion_status = 0;
 14471   005316  0E00               	movlw	0
 14472   005318  6E1C               	movwf	ADC_get_conversion_blocking@l_conversion_status^0,c
 14473   00531A                     
 14474                           ;MKAL_layer/ADC/hal_adc.c: 147:     if ((((void*)0) == ADC_conf) || (((void*)0) == conve
      +                          rsion_status)){
 14475   00531A  5018               	movf	ADC_get_conversion_blocking@ADC_conf^0,w,c
 14476   00531C  1019               	iorwf	(ADC_get_conversion_blocking@ADC_conf+1)^0,w,c
 14477   00531E  B4D8               	btfsc	status,2,c
 14478   005320  EF94  F029         	goto	u13381
 14479   005324  EF96  F029         	goto	u13380
 14480   005328                     u13381:
 14481   005328  EF9E  F029         	goto	l12174
 14482   00532C                     u13380:
 14483   00532C  501B               	movf	ADC_get_conversion_blocking@conversion_status^0,w,c
 14484   00532E  A4D8               	btfss	status,2,c
 14485   005330  EF9C  F029         	goto	u13391
 14486   005334  EF9E  F029         	goto	u13390
 14487   005338                     u13391:
 14488   005338  EFA0  F029         	goto	l12176
 14489   00533C                     u13390:
 14490   00533C                     l12174:
 14491                           
 14492                           ;MKAL_layer/ADC/hal_adc.c: 149:     }
 14493   00533C  EFC7  F029         	goto	l696
 14494   005340                     l12176:
 14495                           
 14496                           ;MKAL_layer/ADC/hal_adc.c: 152:         ret = ADC_select_channal(ADC_conf,ADC_CHANNAL_SE
      +                          LECT);
 14497   005340  C018  F013         	movff	ADC_get_conversion_blocking@ADC_conf,ADC_select_channal@ADC_conf
 14498   005344  C019  F014         	movff	ADC_get_conversion_blocking@ADC_conf+1,ADC_select_channal@ADC_conf+1
 14499   005348  C01A  F015         	movff	ADC_get_conversion_blocking@ADC_CHANNAL_SELECT,ADC_select_channal@ADC_CHANNAL_SEL
      +                          ECT
 14500   00534C  EC1A  F02E         	call	_ADC_select_channal	;wreg free
 14501   005350  6E1D               	movwf	ADC_get_conversion_blocking@ret^0,c
 14502                           
 14503                           ;MKAL_layer/ADC/hal_adc.c: 154:         ret = ADC_start_conversion(ADC_conf);
 14504   005352  C018  F010         	movff	ADC_get_conversion_blocking@ADC_conf,ADC_start_conversion@ADC_conf
 14505   005356  C019  F011         	movff	ADC_get_conversion_blocking@ADC_conf+1,ADC_start_conversion@ADC_conf+1
 14506   00535A  ECAC  F02F         	call	_ADC_start_conversion	;wreg free
 14507   00535E  6E1D               	movwf	ADC_get_conversion_blocking@ret^0,c
 14508   005360  C018  F010         	movff	ADC_get_conversion_blocking@ADC_conf,ADC_ISconversion_done@ADC_conf
 14509   005364  C019  F011         	movff	ADC_get_conversion_blocking@ADC_conf+1,ADC_ISconversion_done@ADC_conf+1
 14510   005368  0E1C               	movlw	low ADC_get_conversion_blocking@l_conversion_status
 14511   00536A  6E12               	movwf	ADC_ISconversion_done@conversion_status^0,c
 14512   00536C  EC28  F02C         	call	_ADC_ISconversion_done	;wreg free
 14513   005370                     l693:
 14514   005370  B2C2               	btfsc	194,1,c	;volatile
 14515   005372  EFBD  F029         	goto	u13401
 14516   005376  EFBF  F029         	goto	u13400
 14517   00537A                     u13401:
 14518   00537A  EFB8  F029         	goto	l693
 14519   00537E                     u13400:
 14520   00537E  C018  F010         	movff	ADC_get_conversion_blocking@ADC_conf,ADC_ISconversion_result@ADC_conf
 14521   005382  C019  F011         	movff	ADC_get_conversion_blocking@ADC_conf+1,ADC_ISconversion_result@ADC_conf+1
 14522   005386  C01B  F012         	movff	ADC_get_conversion_blocking@conversion_status,ADC_ISconversion_result@conversion_
      +                          result
 14523   00538A  EC07  F025         	call	_ADC_ISconversion_result	;wreg free
 14524   00538E                     l696:
 14525   00538E  0012               	return		;funcret
 14526   005390                     __end_of_ADC_get_conversion_blocking:
 14527                           	callstack 0
 14528                           
 14529 ;; *************** function _ADC_start_conversion *****************
 14530 ;; Defined at:
 14531 ;;		line 99 in file "MKAL_layer/ADC/hal_adc.c"
 14532 ;; Parameters:    Size  Location     Type
 14533 ;;  ADC_conf        2   15[COMRAM] PTR const struct .
 14534 ;;		 -> ADC_(6), 
 14535 ;; Auto vars:     Size  Location     Type
 14536 ;;  ret             1   17[COMRAM] unsigned char 
 14537 ;; Return value:  Size  Location     Type
 14538 ;;                  1    wreg      unsigned char 
 14539 ;; Registers used:
 14540 ;;		wreg, status,2, status,0
 14541 ;; Tracked objects:
 14542 ;;		On entry : 0/0
 14543 ;;		On exit  : 0/0
 14544 ;;		Unchanged: 0/0
 14545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14546 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14547 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14549 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14550 ;;Total ram usage:        3 bytes
 14551 ;; Hardware stack levels used: 1
 14552 ;; Hardware stack levels required when called: 4
 14553 ;; This function calls:
 14554 ;;		Nothing
 14555 ;; This function is called by:
 14556 ;;		_ADC_get_conversion_blocking
 14557 ;;		_ADC_start_conversion_interrupt
 14558 ;; This function uses a non-reentrant model
 14559 ;;
 14560                           
 14561                           	psect	text77
 14562   005F58                     __ptext77:
 14563                           	callstack 0
 14564   005F58                     _ADC_start_conversion:
 14565                           	callstack 25
 14566   005F58                     
 14567                           ;MKAL_layer/ADC/hal_adc.c: 101:     if (((void*)0) == ADC_conf){
 14568   005F58  5010               	movf	ADC_start_conversion@ADC_conf^0,w,c
 14569   005F5A  1011               	iorwf	(ADC_start_conversion@ADC_conf+1)^0,w,c
 14570   005F5C  A4D8               	btfss	status,2,c
 14571   005F5E  EFB3  F02F         	goto	u13041
 14572   005F62  EFB5  F02F         	goto	u13040
 14573   005F66                     u13041:
 14574   005F66  EFB9  F02F         	goto	l666
 14575   005F6A                     u13040:
 14576   005F6A                     
 14577                           ;MKAL_layer/ADC/hal_adc.c: 102:         ret =(Std_ReturnType)0x00;
 14578   005F6A  0E00               	movlw	0
 14579   005F6C  6E12               	movwf	ADC_start_conversion@ret^0,c
 14580                           
 14581                           ;MKAL_layer/ADC/hal_adc.c: 103:     }
 14582   005F6E  EFBC  F02F         	goto	l667
 14583   005F72                     l666:
 14584                           
 14585                           ;MKAL_layer/ADC/hal_adc.c: 105:         (ADCON0bits.GODONE =1);
 14586   005F72  82C2               	bsf	194,1,c	;volatile
 14587   005F74                     
 14588                           ;MKAL_layer/ADC/hal_adc.c: 106:         ret = (Std_ReturnType)0x01;
 14589   005F74  0E01               	movlw	1
 14590   005F76  6E12               	movwf	ADC_start_conversion@ret^0,c
 14591   005F78                     l667:
 14592                           
 14593                           ;MKAL_layer/ADC/hal_adc.c: 108:     return ret;
 14594   005F78  5012               	movf	ADC_start_conversion@ret^0,w,c
 14595   005F7A  0012               	return		;funcret
 14596   005F7C                     __end_of_ADC_start_conversion:
 14597                           	callstack 0
 14598                           
 14599 ;; *************** function _ADC_select_channal *****************
 14600 ;; Defined at:
 14601 ;;		line 86 in file "MKAL_layer/ADC/hal_adc.c"
 14602 ;; Parameters:    Size  Location     Type
 14603 ;;  ADC_conf        2   18[COMRAM] PTR const struct .
 14604 ;;		 -> ADC_(6), 
 14605 ;;  ADC_CHANNAL_    1   20[COMRAM] const enum E3044
 14606 ;; Auto vars:     Size  Location     Type
 14607 ;;  ret             1   22[COMRAM] unsigned char 
 14608 ;; Return value:  Size  Location     Type
 14609 ;;                  1    wreg      unsigned char 
 14610 ;; Registers used:
 14611 ;;		wreg, status,2, status,0, cstack
 14612 ;; Tracked objects:
 14613 ;;		On entry : 0/0
 14614 ;;		On exit  : 0/0
 14615 ;;		Unchanged: 0/0
 14616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14617 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14618 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14619 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14620 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14621 ;;Total ram usage:        5 bytes
 14622 ;; Hardware stack levels used: 1
 14623 ;; Hardware stack levels required when called: 5
 14624 ;; This function calls:
 14625 ;;		_adc_channel_port_confige
 14626 ;; This function is called by:
 14627 ;;		_ADC_get_conversion_blocking
 14628 ;;		_ADC_start_conversion_interrupt
 14629 ;; This function uses a non-reentrant model
 14630 ;;
 14631                           
 14632                           	psect	text78
 14633   005C34                     __ptext78:
 14634                           	callstack 0
 14635   005C34                     _ADC_select_channal:
 14636                           	callstack 24
 14637   005C34                     
 14638                           ;MKAL_layer/ADC/hal_adc.c: 88:     if (((void*)0) == ADC_conf){
 14639   005C34  5013               	movf	ADC_select_channal@ADC_conf^0,w,c
 14640   005C36  1014               	iorwf	(ADC_select_channal@ADC_conf+1)^0,w,c
 14641   005C38  A4D8               	btfss	status,2,c
 14642   005C3A  EF21  F02E         	goto	u13031
 14643   005C3E  EF23  F02E         	goto	u13030
 14644   005C42                     u13031:
 14645   005C42  EF27  F02E         	goto	l11890
 14646   005C46                     u13030:
 14647   005C46                     
 14648                           ;MKAL_layer/ADC/hal_adc.c: 89:         ret =(Std_ReturnType)0x00;
 14649   005C46  0E00               	movlw	0
 14650   005C48  6E17               	movwf	ADC_select_channal@ret^0,c
 14651                           
 14652                           ;MKAL_layer/ADC/hal_adc.c: 90:     }
 14653   005C4A  EF35  F02E         	goto	l11896
 14654   005C4E                     l11890:
 14655                           
 14656                           ;MKAL_layer/ADC/hal_adc.c: 92:         ADCON0bits.CHS = ADC_CHANNAL_SELECT;
 14657   005C4E  C015  F016         	movff	ADC_select_channal@ADC_CHANNAL_SELECT,??_ADC_select_channal
 14658   005C52  4616               	rlncf	??_ADC_select_channal^0,f,c
 14659   005C54  4616               	rlncf	??_ADC_select_channal^0,f,c
 14660   005C56  50C2               	movf	194,w,c	;volatile
 14661   005C58  1816               	xorwf	??_ADC_select_channal^0,w,c
 14662   005C5A  0BC3               	andlw	-61
 14663   005C5C  1816               	xorwf	??_ADC_select_channal^0,w,c
 14664   005C5E  6EC2               	movwf	194,c	;volatile
 14665   005C60                     
 14666                           ;MKAL_layer/ADC/hal_adc.c: 93:         adc_channel_port_confige(ADC_CHANNAL_SELECT);
 14667   005C60  5015               	movf	ADC_select_channal@ADC_CHANNAL_SELECT^0,w,c
 14668   005C62  ECA3  F022         	call	_adc_channel_port_confige
 14669   005C66                     
 14670                           ;MKAL_layer/ADC/hal_adc.c: 94:         ret = (Std_ReturnType)0x01;
 14671   005C66  0E01               	movlw	1
 14672   005C68  6E17               	movwf	ADC_select_channal@ret^0,c
 14673   005C6A                     l11896:
 14674                           
 14675                           ;MKAL_layer/ADC/hal_adc.c: 96:     return ret;
 14676   005C6A  5017               	movf	ADC_select_channal@ret^0,w,c
 14677   005C6C  0012               	return		;funcret
 14678   005C6E                     __end_of_ADC_select_channal:
 14679                           	callstack 0
 14680                           
 14681 ;; *************** function _adc_channel_port_confige *****************
 14682 ;; Defined at:
 14683 ;;		line 176 in file "MKAL_layer/ADC/hal_adc.c"
 14684 ;; Parameters:    Size  Location     Type
 14685 ;;  ADC_CHANNAL_    1    wreg     const enum E3044
 14686 ;; Auto vars:     Size  Location     Type
 14687 ;;  ADC_CHANNAL_    1   17[COMRAM] const enum E3044
 14688 ;; Return value:  Size  Location     Type
 14689 ;;                  1    wreg      void 
 14690 ;; Registers used:
 14691 ;;		wreg, status,2, status,0
 14692 ;; Tracked objects:
 14693 ;;		On entry : 0/0
 14694 ;;		On exit  : 0/0
 14695 ;;		Unchanged: 0/0
 14696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14698 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14699 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14700 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14701 ;;Total ram usage:        3 bytes
 14702 ;; Hardware stack levels used: 1
 14703 ;; Hardware stack levels required when called: 4
 14704 ;; This function calls:
 14705 ;;		Nothing
 14706 ;; This function is called by:
 14707 ;;		_ADC_inti
 14708 ;;		_ADC_select_channal
 14709 ;; This function uses a non-reentrant model
 14710 ;;
 14711                           
 14712                           	psect	text79
 14713   004546                     __ptext79:
 14714                           	callstack 0
 14715   004546                     _adc_channel_port_confige:
 14716                           	callstack 24
 14717                           
 14718                           ;incstack = 0
 14719                           ;adc_channel_port_confige@ADC_CHANNAL_SELECT stored from wreg
 14720   004546  6E12               	movwf	adc_channel_port_confige@ADC_CHANNAL_SELECT^0,c
 14721   004548                     
 14722                           ;MKAL_layer/ADC/hal_adc.c: 176: static __attribute__((inline)) void adc_channel_port_con
      +                          fige(const ADC_CHANNAL_SELECT_t ADC_CHANNAL_SELECT);MKAL_layer/ADC/hal_adc.c: 177: {;MKA
      +                          L_layer/ADC/hal_adc.c: 178:     switch (ADC_CHANNAL_SELECT){
 14723   004548  EFCD  F022         	goto	l11014
 14724   00454C                     l10986:
 14725   00454C  8092               	bsf	146,0,c	;volatile
 14726   00454E  EF0E  F023         	goto	l719
 14727   004552                     l10988:
 14728   004552  8292               	bsf	146,1,c	;volatile
 14729   004554  EF0E  F023         	goto	l719
 14730   004558                     l10990:
 14731   004558  8492               	bsf	146,2,c	;volatile
 14732   00455A  EF0E  F023         	goto	l719
 14733   00455E                     l10992:
 14734   00455E  8692               	bsf	146,3,c	;volatile
 14735   004560  EF0E  F023         	goto	l719
 14736   004564                     l10994:
 14737   004564  8892               	bsf	146,4,c	;volatile
 14738   004566  EF0E  F023         	goto	l719
 14739   00456A                     l10996:
 14740   00456A  8096               	bsf	150,0,c	;volatile
 14741   00456C  EF0E  F023         	goto	l719
 14742   004570                     l10998:
 14743   004570  8296               	bsf	150,1,c	;volatile
 14744   004572  EF0E  F023         	goto	l719
 14745   004576                     l11000:
 14746   004576  8496               	bsf	150,2,c	;volatile
 14747   004578  EF0E  F023         	goto	l719
 14748   00457C                     l11002:
 14749   00457C  8493               	bsf	147,2,c	;volatile
 14750   00457E  EF0E  F023         	goto	l719
 14751   004582                     l11004:
 14752   004582  8693               	bsf	147,3,c	;volatile
 14753   004584  EF0E  F023         	goto	l719
 14754   004588                     l11006:
 14755   004588  8293               	bsf	147,1,c	;volatile
 14756   00458A  EF0E  F023         	goto	l719
 14757   00458E                     l11008:
 14758   00458E  8893               	bsf	147,4,c	;volatile
 14759   004590  EF0E  F023         	goto	l719
 14760   004594                     l11010:
 14761   004594  8093               	bsf	147,0,c	;volatile
 14762   004596  EF0E  F023         	goto	l719
 14763   00459A                     l11014:
 14764   00459A  5012               	movf	adc_channel_port_confige@ADC_CHANNAL_SELECT^0,w,c
 14765   00459C  6E10               	movwf	??_adc_channel_port_confige^0,c
 14766   00459E  6A11               	clrf	(??_adc_channel_port_confige+1)^0,c
 14767                           
 14768                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14769                           ; Switch size 1, requested type "simple"
 14770                           ; Number of cases is 1, Range of values is 0 to 0
 14771                           ; switch strategies available:
 14772                           ; Name         Instructions Cycles
 14773                           ; simple_byte            4     3 (average)
 14774                           ;	Chosen strategy is simple_byte
 14775   0045A0  5011               	movf	(??_adc_channel_port_confige+1)^0,w,c
 14776   0045A2  0A00               	xorlw	0	; case 0
 14777   0045A4  B4D8               	btfsc	status,2,c
 14778   0045A6  EFD7  F022         	goto	l13648
 14779   0045AA  EF0E  F023         	goto	l719
 14780   0045AE                     l13648:
 14781                           
 14782                           ; Switch size 1, requested type "simple"
 14783                           ; Number of cases is 13, Range of values is 0 to 12
 14784                           ; switch strategies available:
 14785                           ; Name         Instructions Cycles
 14786                           ; simple_byte           40    21 (average)
 14787                           ;	Chosen strategy is simple_byte
 14788   0045AE  5010               	movf	??_adc_channel_port_confige^0,w,c
 14789   0045B0  0A00               	xorlw	0	; case 0
 14790   0045B2  B4D8               	btfsc	status,2,c
 14791   0045B4  EFA6  F022         	goto	l10986
 14792   0045B8  0A01               	xorlw	1	; case 1
 14793   0045BA  B4D8               	btfsc	status,2,c
 14794   0045BC  EFA9  F022         	goto	l10988
 14795   0045C0  0A03               	xorlw	3	; case 2
 14796   0045C2  B4D8               	btfsc	status,2,c
 14797   0045C4  EFAC  F022         	goto	l10990
 14798   0045C8  0A01               	xorlw	1	; case 3
 14799   0045CA  B4D8               	btfsc	status,2,c
 14800   0045CC  EFAF  F022         	goto	l10992
 14801   0045D0  0A07               	xorlw	7	; case 4
 14802   0045D2  B4D8               	btfsc	status,2,c
 14803   0045D4  EFB2  F022         	goto	l10994
 14804   0045D8  0A01               	xorlw	1	; case 5
 14805   0045DA  B4D8               	btfsc	status,2,c
 14806   0045DC  EFB5  F022         	goto	l10996
 14807   0045E0  0A03               	xorlw	3	; case 6
 14808   0045E2  B4D8               	btfsc	status,2,c
 14809   0045E4  EFB8  F022         	goto	l10998
 14810   0045E8  0A01               	xorlw	1	; case 7
 14811   0045EA  B4D8               	btfsc	status,2,c
 14812   0045EC  EFBB  F022         	goto	l11000
 14813   0045F0  0A0F               	xorlw	15	; case 8
 14814   0045F2  B4D8               	btfsc	status,2,c
 14815   0045F4  EFBE  F022         	goto	l11002
 14816   0045F8  0A01               	xorlw	1	; case 9
 14817   0045FA  B4D8               	btfsc	status,2,c
 14818   0045FC  EFC1  F022         	goto	l11004
 14819   004600  0A03               	xorlw	3	; case 10
 14820   004602  B4D8               	btfsc	status,2,c
 14821   004604  EFC4  F022         	goto	l11006
 14822   004608  0A01               	xorlw	1	; case 11
 14823   00460A  B4D8               	btfsc	status,2,c
 14824   00460C  EFC7  F022         	goto	l11008
 14825   004610  0A07               	xorlw	7	; case 12
 14826   004612  B4D8               	btfsc	status,2,c
 14827   004614  EFCA  F022         	goto	l11010
 14828   004618  EF0E  F023         	goto	l719
 14829   00461C                     l719:
 14830   00461C  0012               	return		;funcret
 14831   00461E                     __end_of_adc_channel_port_confige:
 14832                           	callstack 0
 14833                           
 14834 ;; *************** function _ADC_ISconversion_result *****************
 14835 ;; Defined at:
 14836 ;;		line 123 in file "MKAL_layer/ADC/hal_adc.c"
 14837 ;; Parameters:    Size  Location     Type
 14838 ;;  ADC_conf        2   15[COMRAM] PTR const struct .
 14839 ;;		 -> ADC_(6), 
 14840 ;;  conversion_r    1   17[COMRAM] PTR unsigned short 
 14841 ;;		 -> ADC_VALUE(2), 
 14842 ;; Auto vars:     Size  Location     Type
 14843 ;;  ret             1   21[COMRAM] unsigned char 
 14844 ;; Return value:  Size  Location     Type
 14845 ;;                  1    wreg      unsigned char 
 14846 ;; Registers used:
 14847 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14848 ;; Tracked objects:
 14849 ;;		On entry : 0/0
 14850 ;;		On exit  : 0/0
 14851 ;;		Unchanged: 0/0
 14852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14853 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14854 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14855 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14856 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14857 ;;Total ram usage:        7 bytes
 14858 ;; Hardware stack levels used: 1
 14859 ;; Hardware stack levels required when called: 4
 14860 ;; This function calls:
 14861 ;;		Nothing
 14862 ;; This function is called by:
 14863 ;;		_ADC_get_conversion_blocking
 14864 ;; This function uses a non-reentrant model
 14865 ;;
 14866                           
 14867                           	psect	text80
 14868   004A0E                     __ptext80:
 14869                           	callstack 0
 14870   004A0E                     _ADC_ISconversion_result:
 14871                           	callstack 25
 14872   004A0E                     
 14873                           ;MKAL_layer/ADC/hal_adc.c: 125:     if ((((void*)0) == ADC_conf) || (((void*)0) == conve
      +                          rsion_result)){
 14874   004A0E  5010               	movf	ADC_ISconversion_result@ADC_conf^0,w,c
 14875   004A10  1011               	iorwf	(ADC_ISconversion_result@ADC_conf+1)^0,w,c
 14876   004A12  B4D8               	btfsc	status,2,c
 14877   004A14  EF0E  F025         	goto	u13091
 14878   004A18  EF10  F025         	goto	u13090
 14879   004A1C                     u13091:
 14880   004A1C  EF18  F025         	goto	l11932
 14881   004A20                     u13090:
 14882   004A20  5012               	movf	ADC_ISconversion_result@conversion_result^0,w,c
 14883   004A22  A4D8               	btfss	status,2,c
 14884   004A24  EF16  F025         	goto	u13101
 14885   004A28  EF18  F025         	goto	u13100
 14886   004A2C                     u13101:
 14887   004A2C  EF1C  F025         	goto	l11934
 14888   004A30                     u13100:
 14889   004A30                     l11932:
 14890                           
 14891                           ;MKAL_layer/ADC/hal_adc.c: 126:         ret =(Std_ReturnType)0x00;
 14892   004A30  0E00               	movlw	0
 14893   004A32  6E16               	movwf	ADC_ISconversion_result@ret^0,c
 14894                           
 14895                           ;MKAL_layer/ADC/hal_adc.c: 127:     }
 14896   004A34  EF64  F025         	goto	l11946
 14897   004A38                     l11934:
 14898                           
 14899                           ;MKAL_layer/ADC/hal_adc.c: 129:         if(ADC_conf->result_format == 1){
 14900   004A38  EE20 F005          	lfsr	2,5
 14901   004A3C  5010               	movf	ADC_ISconversion_result@ADC_conf^0,w,c
 14902   004A3E  26D9               	addwf	fsr2l,f,c
 14903   004A40  5011               	movf	(ADC_ISconversion_result@ADC_conf+1)^0,w,c
 14904   004A42  22DA               	addwfc	fsr2h,f,c
 14905   004A44  A2DF               	btfss	indf2,1,c
 14906   004A46  EF27  F025         	goto	u13111
 14907   004A4A  EF29  F025         	goto	u13110
 14908   004A4E                     u13111:
 14909   004A4E  EF3C  F025         	goto	l11938
 14910   004A52                     u13110:
 14911   004A52                     l11936:
 14912                           
 14913                           ;MKAL_layer/ADC/hal_adc.c: 130:             *conversion_result = ((ADRESH << 8) + ADRESL
      +                          );
 14914   004A52  50C3               	movf	195,w,c	;volatile
 14915   004A54  CFC4 F013          	movff	4036,??_ADC_ISconversion_result	;volatile
 14916   004A58  6A14               	clrf	(??_ADC_ISconversion_result+1)^0,c
 14917   004A5A  C013  F014         	movff	??_ADC_ISconversion_result,??_ADC_ISconversion_result+1
 14918   004A5E  6A13               	clrf	??_ADC_ISconversion_result^0,c
 14919   004A60  2613               	addwf	??_ADC_ISconversion_result^0,f,c
 14920   004A62  0E00               	movlw	0
 14921   004A64  2214               	addwfc	(??_ADC_ISconversion_result+1)^0,f,c
 14922   004A66  5012               	movf	ADC_ISconversion_result@conversion_result^0,w,c
 14923   004A68  6ED9               	movwf	fsr2l,c
 14924   004A6A  6ADA               	clrf	fsr2h,c
 14925   004A6C  C013  FFDE         	movff	??_ADC_ISconversion_result,postinc2
 14926   004A70  C014  FFDD         	movff	??_ADC_ISconversion_result+1,postdec2
 14927                           
 14928                           ;MKAL_layer/ADC/hal_adc.c: 131:         }else if(ADC_conf->result_format == 0){
 14929   004A74  EF62  F025         	goto	l11944
 14930   004A78                     l11938:
 14931   004A78  EE20 F005          	lfsr	2,5
 14932   004A7C  5010               	movf	ADC_ISconversion_result@ADC_conf^0,w,c
 14933   004A7E  26D9               	addwf	fsr2l,f,c
 14934   004A80  5011               	movf	(ADC_ISconversion_result@ADC_conf+1)^0,w,c
 14935   004A82  22DA               	addwfc	fsr2h,f,c
 14936   004A84  B2DF               	btfsc	indf2,1,c
 14937   004A86  EF47  F025         	goto	u13121
 14938   004A8A  EF49  F025         	goto	u13120
 14939   004A8E                     u13121:
 14940   004A8E  EF29  F025         	goto	l11936
 14941   004A92                     u13120:
 14942   004A92                     
 14943                           ;MKAL_layer/ADC/hal_adc.c: 132:             *conversion_result = (((ADRESH << 8) + ADRES
      +                          L) >> 6) ;
 14944   004A92  50C3               	movf	195,w,c	;volatile
 14945   004A94  CFC4 F013          	movff	4036,??_ADC_ISconversion_result	;volatile
 14946   004A98  6A14               	clrf	(??_ADC_ISconversion_result+1)^0,c
 14947   004A9A  C013  F014         	movff	??_ADC_ISconversion_result,??_ADC_ISconversion_result+1
 14948   004A9E  6A13               	clrf	??_ADC_ISconversion_result^0,c
 14949   004AA0  2613               	addwf	??_ADC_ISconversion_result^0,f,c
 14950   004AA2  0E00               	movlw	0
 14951   004AA4  2214               	addwfc	(??_ADC_ISconversion_result+1)^0,f,c
 14952   004AA6  0E06               	movlw	6
 14953   004AA8  6E15               	movwf	(??_ADC_ISconversion_result+2)^0,c
 14954   004AAA                     u13135:
 14955   004AAA  3414               	rlcf	(??_ADC_ISconversion_result+1)^0,w,c
 14956   004AAC  3214               	rrcf	(??_ADC_ISconversion_result+1)^0,f,c
 14957   004AAE  3213               	rrcf	??_ADC_ISconversion_result^0,f,c
 14958   004AB0  2E15               	decfsz	(??_ADC_ISconversion_result+2)^0,f,c
 14959   004AB2  EF55  F025         	goto	u13135
 14960   004AB6  5012               	movf	ADC_ISconversion_result@conversion_result^0,w,c
 14961   004AB8  6ED9               	movwf	fsr2l,c
 14962   004ABA  6ADA               	clrf	fsr2h,c
 14963   004ABC  C013  FFDE         	movff	??_ADC_ISconversion_result,postinc2
 14964   004AC0  C014  FFDD         	movff	??_ADC_ISconversion_result+1,postdec2
 14965   004AC4                     l11944:
 14966                           
 14967                           ;MKAL_layer/ADC/hal_adc.c: 138:         ret = (Std_ReturnType)0x01;
 14968   004AC4  0E01               	movlw	1
 14969   004AC6  6E16               	movwf	ADC_ISconversion_result@ret^0,c
 14970   004AC8                     l11946:
 14971                           
 14972                           ;MKAL_layer/ADC/hal_adc.c: 140:      return ret;
 14973   004AC8  5016               	movf	ADC_ISconversion_result@ret^0,w,c
 14974   004ACA  0012               	return		;funcret
 14975   004ACC                     __end_of_ADC_ISconversion_result:
 14976                           	callstack 0
 14977                           
 14978 ;; *************** function _ADC_ISconversion_done *****************
 14979 ;; Defined at:
 14980 ;;		line 111 in file "MKAL_layer/ADC/hal_adc.c"
 14981 ;; Parameters:    Size  Location     Type
 14982 ;;  ADC_conf        2   15[COMRAM] PTR const struct .
 14983 ;;		 -> ADC_(6), 
 14984 ;;  conversion_s    1   17[COMRAM] PTR unsigned char 
 14985 ;;		 -> ADC_get_conversion_blocking@l_conversion_status(1), 
 14986 ;; Auto vars:     Size  Location     Type
 14987 ;;  ret             1   18[COMRAM] unsigned char 
 14988 ;; Return value:  Size  Location     Type
 14989 ;;                  1    wreg      unsigned char 
 14990 ;; Registers used:
 14991 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14992 ;; Tracked objects:
 14993 ;;		On entry : 0/0
 14994 ;;		On exit  : 0/0
 14995 ;;		Unchanged: 0/0
 14996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14997 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14998 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15000 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15001 ;;Total ram usage:        4 bytes
 15002 ;; Hardware stack levels used: 1
 15003 ;; Hardware stack levels required when called: 4
 15004 ;; This function calls:
 15005 ;;		Nothing
 15006 ;; This function is called by:
 15007 ;;		_ADC_get_conversion_blocking
 15008 ;; This function uses a non-reentrant model
 15009 ;;
 15010                           
 15011                           	psect	text81
 15012   005850                     __ptext81:
 15013                           	callstack 0
 15014   005850                     _ADC_ISconversion_done:
 15015                           	callstack 25
 15016   005850                     
 15017                           ;MKAL_layer/ADC/hal_adc.c: 113:     if ((((void*)0) == ADC_conf) || (((void*)0) == conve
      +                          rsion_status)){
 15018   005850  5010               	movf	ADC_ISconversion_done@ADC_conf^0,w,c
 15019   005852  1011               	iorwf	(ADC_ISconversion_done@ADC_conf+1)^0,w,c
 15020   005854  B4D8               	btfsc	status,2,c
 15021   005856  EF2F  F02C         	goto	u13051
 15022   00585A  EF31  F02C         	goto	u13050
 15023   00585E                     u13051:
 15024   00585E  EF39  F02C         	goto	l11916
 15025   005862                     u13050:
 15026   005862  5012               	movf	ADC_ISconversion_done@conversion_status^0,w,c
 15027   005864  A4D8               	btfss	status,2,c
 15028   005866  EF37  F02C         	goto	u13061
 15029   00586A  EF39  F02C         	goto	u13060
 15030   00586E                     u13061:
 15031   00586E  EF3D  F02C         	goto	l11918
 15032   005872                     u13060:
 15033   005872                     l11916:
 15034                           
 15035                           ;MKAL_layer/ADC/hal_adc.c: 114:         ret =(Std_ReturnType)0x00;
 15036   005872  0E00               	movlw	0
 15037   005874  6E13               	movwf	ADC_ISconversion_done@ret^0,c
 15038                           
 15039                           ;MKAL_layer/ADC/hal_adc.c: 115:     }
 15040   005876  EF4C  F02C         	goto	l11922
 15041   00587A                     l11918:
 15042                           
 15043                           ;MKAL_layer/ADC/hal_adc.c: 117:         *conversion_status = (uint8)(!(ADCON0bits.GO_nDO
      +                          NE));
 15044   00587A  5012               	movf	ADC_ISconversion_done@conversion_status^0,w,c
 15045   00587C  6ED9               	movwf	fsr2l,c
 15046   00587E  6ADA               	clrf	fsr2h,c
 15047   005880  A2C2               	btfss	194,1,c	;volatile
 15048   005882  EF45  F02C         	goto	u13071
 15049   005886  EF48  F02C         	goto	u13070
 15050   00588A                     u13071:
 15051   00588A  0E01               	movlw	1
 15052   00588C  EF49  F02C         	goto	u13080
 15053   005890                     u13070:
 15054   005890  0E00               	movlw	0
 15055   005892                     u13080:
 15056   005892  6EDF               	movwf	indf2,c
 15057   005894                     
 15058                           ;MKAL_layer/ADC/hal_adc.c: 118:         ret = (Std_ReturnType)0x01;
 15059   005894  0E01               	movlw	1
 15060   005896  6E13               	movwf	ADC_ISconversion_done@ret^0,c
 15061   005898                     l11922:
 15062                           
 15063                           ;MKAL_layer/ADC/hal_adc.c: 120:      return ret;
 15064   005898  5013               	movf	ADC_ISconversion_done@ret^0,w,c
 15065   00589A  0012               	return		;funcret
 15066   00589C                     __end_of_ADC_ISconversion_done:
 15067                           	callstack 0
 15068                           
 15069 ;; *************** function _interrupt_manager *****************
 15070 ;; Defined at:
 15071 ;;		line 153 in file "MKAL_layer/Interrupt/mcal_interrupt_manager.c"
 15072 ;; Parameters:    Size  Location     Type
 15073 ;;		None
 15074 ;; Auto vars:     Size  Location     Type
 15075 ;;		None
 15076 ;; Return value:  Size  Location     Type
 15077 ;;                  1    wreg      void 
 15078 ;; Registers used:
 15079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 15080 ;; Tracked objects:
 15081 ;;		On entry : 0/0
 15082 ;;		On exit  : 0/0
 15083 ;;		Unchanged: 0/0
 15084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15087 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15088 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15089 ;;Total ram usage:        6 bytes
 15090 ;; Hardware stack levels used: 1
 15091 ;; Hardware stack levels required when called: 3
 15092 ;; This function calls:
 15093 ;;		_ADC_handeler_funvtion
 15094 ;;		_CCP1_ISR
 15095 ;;		_CCP2_ISR
 15096 ;;		_INT0_ISR
 15097 ;;		_INT1_ISR
 15098 ;;		_INT2_ISR
 15099 ;;		_MSSP_I2C_BC_ISR
 15100 ;;		_MSSP_I2C_ISR
 15101 ;;		_RB4_ISR
 15102 ;;		_RB5_ISR
 15103 ;;		_RB6_ISR
 15104 ;;		_RB7_ISR
 15105 ;;		_TIMER0_ISR
 15106 ;;		_TIMER1_ISR
 15107 ;;		_TIMER2_ISR
 15108 ;;		_TIMER3_ISR
 15109 ;;		_USART_RX_ISR
 15110 ;;		_USART_TX_ISR
 15111 ;; This function is called by:
 15112 ;;		Interrupt level 2
 15113 ;; This function uses a non-reentrant model
 15114 ;;
 15115                           
 15116                           	psect	intcode
 15117   000008                     __pintcode:
 15118                           	callstack 0
 15119   000008                     _interrupt_manager:
 15120                           	callstack 21
 15121                           
 15122                           ;incstack = 0
 15123   000008  8270               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15124   00000A  ED5A  F015         	call	int_func,f	;refresh shadow registers
 15125                           
 15126                           	psect	intcode_body
 15127   002AB4                     __pintcode_body:
 15128                           	callstack 21
 15129   002AB4                     int_func:
 15130                           	callstack 21
 15131   002AB4  0006               	pop		; remove dummy address from shadow register refresh
 15132   002AB6  CFFA F00A          	movff	pclath,??_interrupt_manager
 15133   002ABA  CFFB F00B          	movff	pclatu,??_interrupt_manager+1
 15134   002ABE  CFD9 F00C          	movff	fsr2l,??_interrupt_manager+2
 15135   002AC2  CFDA F00D          	movff	fsr2h,??_interrupt_manager+3
 15136   002AC6  CFF3 F00E          	movff	prodl,??_interrupt_manager+4
 15137   002ACA  CFF4 F00F          	movff	prodh,??_interrupt_manager+5
 15138   002ACE                     
 15139                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 155:         if((1 == INTCONbits.INT0IF)
      +                           && (1 == INTCONbits.INT0IF)){
 15140   002ACE  A2F2               	btfss	242,1,c	;volatile
 15141   002AD0  EF6C  F015         	goto	i2u1492_41
 15142   002AD4  EF6E  F015         	goto	i2u1492_40
 15143   002AD8                     i2u1492_41:
 15144   002AD8  EF77  F015         	goto	i2l1430
 15145   002ADC                     i2u1492_40:
 15146   002ADC  A2F2               	btfss	242,1,c	;volatile
 15147   002ADE  EF73  F015         	goto	i2u1493_41
 15148   002AE2  EF75  F015         	goto	i2u1493_40
 15149   002AE6                     i2u1493_41:
 15150   002AE6  EF77  F015         	goto	i2l1430
 15151   002AEA                     i2u1493_40:
 15152   002AEA                     
 15153                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 156:             INT0_ISR();
 15154   002AEA  EC52  F02F         	call	_INT0_ISR	;wreg free
 15155   002AEE                     i2l1430:
 15156                           
 15157                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 159:         if((1 == INTCON3bits.INT1IE
      +                          ) && (1 == INTCON3bits.INT1IF)){
 15158   002AEE  A6F0               	btfss	240,3,c	;volatile
 15159   002AF0  EF7C  F015         	goto	i2u1494_41
 15160   002AF4  EF7E  F015         	goto	i2u1494_40
 15161   002AF8                     i2u1494_41:
 15162   002AF8  EF87  F015         	goto	i2l1432
 15163   002AFC                     i2u1494_40:
 15164   002AFC  A0F0               	btfss	240,0,c	;volatile
 15165   002AFE  EF83  F015         	goto	i2u1495_41
 15166   002B02  EF85  F015         	goto	i2u1495_40
 15167   002B06                     i2u1495_41:
 15168   002B06  EF87  F015         	goto	i2l1432
 15169   002B0A                     i2u1495_40:
 15170   002B0A                     
 15171                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 160:             INT1_ISR();
 15172   002B0A  EC3A  F02F         	call	_INT1_ISR	;wreg free
 15173   002B0E                     i2l1432:
 15174                           
 15175                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 163:         if((1 == INTCON3bits.INT2IE
      +                          ) && (1 == INTCON3bits.INT2IF)){
 15176   002B0E  A8F0               	btfss	240,4,c	;volatile
 15177   002B10  EF8C  F015         	goto	i2u1496_41
 15178   002B14  EF8E  F015         	goto	i2u1496_40
 15179   002B18                     i2u1496_41:
 15180   002B18  EF97  F015         	goto	i2l1434
 15181   002B1C                     i2u1496_40:
 15182   002B1C  A2F0               	btfss	240,1,c	;volatile
 15183   002B1E  EF93  F015         	goto	i2u1497_41
 15184   002B22  EF95  F015         	goto	i2u1497_40
 15185   002B26                     i2u1497_41:
 15186   002B26  EF97  F015         	goto	i2l1434
 15187   002B2A                     i2u1497_40:
 15188   002B2A                     
 15189                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 164:             INT2_ISR();
 15190   002B2A  EC22  F02F         	call	_INT2_ISR	;wreg free
 15191   002B2E                     i2l1434:
 15192                           
 15193                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 168:         if((1 == INTCONbits.RBIE) &
      +                          & (1 == INTCONbits.RBIF)
 15194   002B2E  A6F2               	btfss	242,3,c	;volatile
 15195   002B30  EF9C  F015         	goto	i2u1498_41
 15196   002B34  EF9E  F015         	goto	i2u1498_40
 15197   002B38                     i2u1498_41:
 15198   002B38  EFB9  F015         	goto	i2l1436
 15199   002B3C                     i2u1498_40:
 15200   002B3C  A0F2               	btfss	242,0,c	;volatile
 15201   002B3E  EFA3  F015         	goto	i2u1499_41
 15202   002B42  EFA5  F015         	goto	i2u1499_40
 15203   002B46                     i2u1499_41:
 15204   002B46  EFB9  F015         	goto	i2l1436
 15205   002B4A                     i2u1499_40:
 15206   002B4A  A881               	btfss	129,4,c	;volatile
 15207   002B4C  EFAA  F015         	goto	i2u1500_41
 15208   002B50  EFAC  F015         	goto	i2u1500_40
 15209   002B54                     i2u1500_41:
 15210   002B54  EFB9  F015         	goto	i2l1436
 15211   002B58                     i2u1500_40:
 15212   002B58  046D               	decf	_flag1^0,w,c
 15213   002B5A  A4D8               	btfss	status,2,c
 15214   002B5C  EFB2  F015         	goto	i2u1501_41
 15215   002B60  EFB4  F015         	goto	i2u1501_40
 15216   002B64                     i2u1501_41:
 15217   002B64  EFB9  F015         	goto	i2l1436
 15218   002B68                     i2u1501_40:
 15219   002B68                     
 15220                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 169:             && (PORTBbits.RB4 == GP
      +                          IO_HIGH) && (flag1 == 1)){;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 170:          
      +                             flag1 = 0;
 15221   002B68  0E00               	movlw	0
 15222   002B6A  6E6D               	movwf	_flag1^0,c
 15223   002B6C                     
 15224                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 171:             RB4_ISR(0);
 15225   002B6C  0E00               	movlw	0
 15226   002B6E  EC4D  F030         	call	_RB4_ISR
 15227   002B72                     i2l1436:
 15228                           
 15229                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 174:         if((1 == INTCONbits.RBIE) &
      +                          & (1 == INTCONbits.RBIF)
 15230   002B72  A6F2               	btfss	242,3,c	;volatile
 15231   002B74  EFBE  F015         	goto	i2u1502_41
 15232   002B78  EFC0  F015         	goto	i2u1502_40
 15233   002B7C                     i2u1502_41:
 15234   002B7C  EFDB  F015         	goto	i2l1438
 15235   002B80                     i2u1502_40:
 15236   002B80  A0F2               	btfss	242,0,c	;volatile
 15237   002B82  EFC5  F015         	goto	i2u1503_41
 15238   002B86  EFC7  F015         	goto	i2u1503_40
 15239   002B8A                     i2u1503_41:
 15240   002B8A  EFDB  F015         	goto	i2l1438
 15241   002B8E                     i2u1503_40:
 15242   002B8E  B881               	btfsc	129,4,c	;volatile
 15243   002B90  EFCC  F015         	goto	i2u1504_41
 15244   002B94  EFCE  F015         	goto	i2u1504_40
 15245   002B98                     i2u1504_41:
 15246   002B98  EFDB  F015         	goto	i2l1438
 15247   002B9C                     i2u1504_40:
 15248   002B9C  506D               	movf	_flag1^0,w,c
 15249   002B9E  A4D8               	btfss	status,2,c
 15250   002BA0  EFD4  F015         	goto	i2u1505_41
 15251   002BA4  EFD6  F015         	goto	i2u1505_40
 15252   002BA8                     i2u1505_41:
 15253   002BA8  EFDB  F015         	goto	i2l1438
 15254   002BAC                     i2u1505_40:
 15255   002BAC                     
 15256                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 175:             && (PORTBbits.RB4 == GP
      +                          IO_LOW) && (flag1 == 0)){;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 176:           
      +                            flag1 = 1;
 15257   002BAC  0E01               	movlw	1
 15258   002BAE  6E6D               	movwf	_flag1^0,c
 15259   002BB0                     
 15260                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 177:             RB4_ISR(1);
 15261   002BB0  0E01               	movlw	1
 15262   002BB2  EC4D  F030         	call	_RB4_ISR
 15263   002BB6                     i2l1438:
 15264                           
 15265                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 180:          if((1 == INTCONbits.RBIE) 
      +                          && (1 == INTCONbits.RBIF)
 15266   002BB6  A6F2               	btfss	242,3,c	;volatile
 15267   002BB8  EFE0  F015         	goto	i2u1506_41
 15268   002BBC  EFE2  F015         	goto	i2u1506_40
 15269   002BC0                     i2u1506_41:
 15270   002BC0  EFFD  F015         	goto	i2l1440
 15271   002BC4                     i2u1506_40:
 15272   002BC4  A0F2               	btfss	242,0,c	;volatile
 15273   002BC6  EFE7  F015         	goto	i2u1507_41
 15274   002BCA  EFE9  F015         	goto	i2u1507_40
 15275   002BCE                     i2u1507_41:
 15276   002BCE  EFFD  F015         	goto	i2l1440
 15277   002BD2                     i2u1507_40:
 15278   002BD2  AA81               	btfss	129,5,c	;volatile
 15279   002BD4  EFEE  F015         	goto	i2u1508_41
 15280   002BD8  EFF0  F015         	goto	i2u1508_40
 15281   002BDC                     i2u1508_41:
 15282   002BDC  EFFD  F015         	goto	i2l1440
 15283   002BE0                     i2u1508_40:
 15284   002BE0  046C               	decf	_flag2^0,w,c
 15285   002BE2  A4D8               	btfss	status,2,c
 15286   002BE4  EFF6  F015         	goto	i2u1509_41
 15287   002BE8  EFF8  F015         	goto	i2u1509_40
 15288   002BEC                     i2u1509_41:
 15289   002BEC  EFFD  F015         	goto	i2l1440
 15290   002BF0                     i2u1509_40:
 15291   002BF0                     
 15292                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 181:             && (PORTBbits.RB5 == GP
      +                          IO_HIGH) && (flag2 == 1)){;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 182:          
      +                             flag2 = 0;
 15293   002BF0  0E00               	movlw	0
 15294   002BF2  6E6C               	movwf	_flag2^0,c
 15295   002BF4                     
 15296                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 183:             RB5_ISR(0);
 15297   002BF4  0E00               	movlw	0
 15298   002BF6  EC40  F030         	call	_RB5_ISR
 15299   002BFA                     i2l1440:
 15300                           
 15301                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 186:         if((1 == INTCONbits.RBIE) &
      +                          & (1 == INTCONbits.RBIF)
 15302   002BFA  A6F2               	btfss	242,3,c	;volatile
 15303   002BFC  EF02  F016         	goto	i2u1510_41
 15304   002C00  EF04  F016         	goto	i2u1510_40
 15305   002C04                     i2u1510_41:
 15306   002C04  EF1F  F016         	goto	i2l1442
 15307   002C08                     i2u1510_40:
 15308   002C08  A0F2               	btfss	242,0,c	;volatile
 15309   002C0A  EF09  F016         	goto	i2u1511_41
 15310   002C0E  EF0B  F016         	goto	i2u1511_40
 15311   002C12                     i2u1511_41:
 15312   002C12  EF1F  F016         	goto	i2l1442
 15313   002C16                     i2u1511_40:
 15314   002C16  BA81               	btfsc	129,5,c	;volatile
 15315   002C18  EF10  F016         	goto	i2u1512_41
 15316   002C1C  EF12  F016         	goto	i2u1512_40
 15317   002C20                     i2u1512_41:
 15318   002C20  EF1F  F016         	goto	i2l1442
 15319   002C24                     i2u1512_40:
 15320   002C24  506C               	movf	_flag2^0,w,c
 15321   002C26  A4D8               	btfss	status,2,c
 15322   002C28  EF18  F016         	goto	i2u1513_41
 15323   002C2C  EF1A  F016         	goto	i2u1513_40
 15324   002C30                     i2u1513_41:
 15325   002C30  EF1F  F016         	goto	i2l1442
 15326   002C34                     i2u1513_40:
 15327   002C34                     
 15328                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 187:             && (PORTBbits.RB5 == GP
      +                          IO_LOW) && (flag2 == 0)){;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 188:           
      +                            flag2 =1;
 15329   002C34  0E01               	movlw	1
 15330   002C36  6E6C               	movwf	_flag2^0,c
 15331   002C38                     
 15332                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 189:             RB5_ISR(1);
 15333   002C38  0E01               	movlw	1
 15334   002C3A  EC40  F030         	call	_RB5_ISR
 15335   002C3E                     i2l1442:
 15336                           
 15337                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 192:          if((1 == INTCONbits.RBIE) 
      +                          && (1 == INTCONbits.RBIF)
 15338   002C3E  A6F2               	btfss	242,3,c	;volatile
 15339   002C40  EF24  F016         	goto	i2u1514_41
 15340   002C44  EF26  F016         	goto	i2u1514_40
 15341   002C48                     i2u1514_41:
 15342   002C48  EF42  F016         	goto	i2l1444
 15343   002C4C                     i2u1514_40:
 15344   002C4C  A0F2               	btfss	242,0,c	;volatile
 15345   002C4E  EF2B  F016         	goto	i2u1515_41
 15346   002C52  EF2D  F016         	goto	i2u1515_40
 15347   002C56                     i2u1515_41:
 15348   002C56  EF42  F016         	goto	i2l1444
 15349   002C5A                     i2u1515_40:
 15350   002C5A  AC81               	btfss	129,6,c	;volatile
 15351   002C5C  EF32  F016         	goto	i2u1516_41
 15352   002C60  EF34  F016         	goto	i2u1516_40
 15353   002C64                     i2u1516_41:
 15354   002C64  EF42  F016         	goto	i2l1444
 15355   002C68                     i2u1516_40:
 15356   002C68  0100               	movlb	0	; () banked
 15357   002C6A  05E7               	decf	_flag3& (0+255),w,b
 15358   002C6C  A4D8               	btfss	status,2,c
 15359   002C6E  EF3B  F016         	goto	i2u1517_41
 15360   002C72  EF3D  F016         	goto	i2u1517_40
 15361   002C76                     i2u1517_41:
 15362   002C76  EF42  F016         	goto	i2l1444
 15363   002C7A                     i2u1517_40:
 15364   002C7A                     
 15365                           ; BSR set to: 0
 15366                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 193:             && (PORTBbits.RB6 == GP
      +                          IO_HIGH) && (1 == flag3)){;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 194:          
      +                             flag3 = 0;
 15367   002C7A  0E00               	movlw	0
 15368   002C7C  6FE7               	movwf	_flag3& (0+255),b
 15369   002C7E                     
 15370                           ; BSR set to: 0
 15371                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 195:             RB6_ISR(0);
 15372   002C7E  0E00               	movlw	0
 15373   002C80  EC33  F030         	call	_RB6_ISR
 15374   002C84                     i2l1444:
 15375                           
 15376                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 198:         if((1 == INTCONbits.RBIE) &
      +                          & (1 == INTCONbits.RBIF)
 15377   002C84  A6F2               	btfss	242,3,c	;volatile
 15378   002C86  EF47  F016         	goto	i2u1518_41
 15379   002C8A  EF49  F016         	goto	i2u1518_40
 15380   002C8E                     i2u1518_41:
 15381   002C8E  EF65  F016         	goto	i2l1446
 15382   002C92                     i2u1518_40:
 15383   002C92  A0F2               	btfss	242,0,c	;volatile
 15384   002C94  EF4E  F016         	goto	i2u1519_41
 15385   002C98  EF50  F016         	goto	i2u1519_40
 15386   002C9C                     i2u1519_41:
 15387   002C9C  EF65  F016         	goto	i2l1446
 15388   002CA0                     i2u1519_40:
 15389   002CA0  BC81               	btfsc	129,6,c	;volatile
 15390   002CA2  EF55  F016         	goto	i2u1520_41
 15391   002CA6  EF57  F016         	goto	i2u1520_40
 15392   002CAA                     i2u1520_41:
 15393   002CAA  EF65  F016         	goto	i2l1446
 15394   002CAE                     i2u1520_40:
 15395   002CAE  0100               	movlb	0	; () banked
 15396   002CB0  51E7               	movf	_flag3& (0+255),w,b
 15397   002CB2  A4D8               	btfss	status,2,c
 15398   002CB4  EF5E  F016         	goto	i2u1521_41
 15399   002CB8  EF60  F016         	goto	i2u1521_40
 15400   002CBC                     i2u1521_41:
 15401   002CBC  EF65  F016         	goto	i2l1446
 15402   002CC0                     i2u1521_40:
 15403   002CC0                     
 15404                           ; BSR set to: 0
 15405                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 199:             && (PORTBbits.RB6 == GP
      +                          IO_LOW) && (0 == flag3)){;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 200:           
      +                            flag3 = 1;
 15406   002CC0  0E01               	movlw	1
 15407   002CC2  6FE7               	movwf	_flag3& (0+255),b
 15408   002CC4                     
 15409                           ; BSR set to: 0
 15410                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 201:             RB6_ISR(1);
 15411   002CC4  0E01               	movlw	1
 15412   002CC6  EC33  F030         	call	_RB6_ISR
 15413   002CCA                     i2l1446:
 15414                           
 15415                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 204:          if((1 == INTCONbits.RBIE) 
      +                          && (1 == INTCONbits.RBIF)
 15416   002CCA  A6F2               	btfss	242,3,c	;volatile
 15417   002CCC  EF6A  F016         	goto	i2u1522_41
 15418   002CD0  EF6C  F016         	goto	i2u1522_40
 15419   002CD4                     i2u1522_41:
 15420   002CD4  EF88  F016         	goto	i2l1448
 15421   002CD8                     i2u1522_40:
 15422   002CD8  A0F2               	btfss	242,0,c	;volatile
 15423   002CDA  EF71  F016         	goto	i2u1523_41
 15424   002CDE  EF73  F016         	goto	i2u1523_40
 15425   002CE2                     i2u1523_41:
 15426   002CE2  EF88  F016         	goto	i2l1448
 15427   002CE6                     i2u1523_40:
 15428   002CE6  AE81               	btfss	129,7,c	;volatile
 15429   002CE8  EF78  F016         	goto	i2u1524_41
 15430   002CEC  EF7A  F016         	goto	i2u1524_40
 15431   002CF0                     i2u1524_41:
 15432   002CF0  EF88  F016         	goto	i2l1448
 15433   002CF4                     i2u1524_40:
 15434   002CF4  0100               	movlb	0	; () banked
 15435   002CF6  05E6               	decf	_flag4& (0+255),w,b
 15436   002CF8  A4D8               	btfss	status,2,c
 15437   002CFA  EF81  F016         	goto	i2u1525_41
 15438   002CFE  EF83  F016         	goto	i2u1525_40
 15439   002D02                     i2u1525_41:
 15440   002D02  EF88  F016         	goto	i2l1448
 15441   002D06                     i2u1525_40:
 15442   002D06                     
 15443                           ; BSR set to: 0
 15444                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 205:             && (PORTBbits.RB7 == GP
      +                          IO_HIGH) && (1 == flag4)){;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 206:          
      +                             flag4 = 0;
 15445   002D06  0E00               	movlw	0
 15446   002D08  6FE6               	movwf	_flag4& (0+255),b
 15447   002D0A                     
 15448                           ; BSR set to: 0
 15449                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 207:             RB7_ISR(0);
 15450   002D0A  0E00               	movlw	0
 15451   002D0C  EC26  F030         	call	_RB7_ISR
 15452   002D10                     i2l1448:
 15453                           
 15454                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 210:         if((1 == INTCONbits.RBIE) &
      +                          & (1 == INTCONbits.RBIF)
 15455   002D10  A6F2               	btfss	242,3,c	;volatile
 15456   002D12  EF8D  F016         	goto	i2u1526_41
 15457   002D16  EF8F  F016         	goto	i2u1526_40
 15458   002D1A                     i2u1526_41:
 15459   002D1A  EFAB  F016         	goto	i2l1450
 15460   002D1E                     i2u1526_40:
 15461   002D1E  A0F2               	btfss	242,0,c	;volatile
 15462   002D20  EF94  F016         	goto	i2u1527_41
 15463   002D24  EF96  F016         	goto	i2u1527_40
 15464   002D28                     i2u1527_41:
 15465   002D28  EFAB  F016         	goto	i2l1450
 15466   002D2C                     i2u1527_40:
 15467   002D2C  BE81               	btfsc	129,7,c	;volatile
 15468   002D2E  EF9B  F016         	goto	i2u1528_41
 15469   002D32  EF9D  F016         	goto	i2u1528_40
 15470   002D36                     i2u1528_41:
 15471   002D36  EFAB  F016         	goto	i2l1450
 15472   002D3A                     i2u1528_40:
 15473   002D3A  0100               	movlb	0	; () banked
 15474   002D3C  51E6               	movf	_flag4& (0+255),w,b
 15475   002D3E  A4D8               	btfss	status,2,c
 15476   002D40  EFA4  F016         	goto	i2u1529_41
 15477   002D44  EFA6  F016         	goto	i2u1529_40
 15478   002D48                     i2u1529_41:
 15479   002D48  EFAB  F016         	goto	i2l1450
 15480   002D4C                     i2u1529_40:
 15481   002D4C                     
 15482                           ; BSR set to: 0
 15483                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 211:             && (PORTBbits.RB7 == GP
      +                          IO_LOW) && (0 == flag4)){;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 212:           
      +                            flag4 = 1;
 15484   002D4C  0E01               	movlw	1
 15485   002D4E  6FE6               	movwf	_flag4& (0+255),b
 15486   002D50                     
 15487                           ; BSR set to: 0
 15488                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 213:             RB7_ISR(1);
 15489   002D50  0E01               	movlw	1
 15490   002D52  EC26  F030         	call	_RB7_ISR
 15491   002D56                     i2l1450:
 15492                           
 15493                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 217:         if((1 == PIE1bits.ADIE) && 
      +                          (1 == PIR1bits.ADIF)){
 15494   002D56  AC9D               	btfss	157,6,c	;volatile
 15495   002D58  EFB0  F016         	goto	i2u1530_41
 15496   002D5C  EFB2  F016         	goto	i2u1530_40
 15497   002D60                     i2u1530_41:
 15498   002D60  EFBB  F016         	goto	i2l1452
 15499   002D64                     i2u1530_40:
 15500   002D64  AC9E               	btfss	158,6,c	;volatile
 15501   002D66  EFB7  F016         	goto	i2u1531_41
 15502   002D6A  EFB9  F016         	goto	i2u1531_40
 15503   002D6E                     i2u1531_41:
 15504   002D6E  EFBB  F016         	goto	i2l1452
 15505   002D72                     i2u1531_40:
 15506   002D72                     
 15507                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 218:             ADC_handeler_funvtion()
      +                          ;
 15508   002D72  EC8E  F030         	call	_ADC_handeler_funvtion	;wreg free
 15509   002D76                     i2l1452:
 15510                           
 15511                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 222:         if((1 == INTCONbits.TMR0IE)
      +                           && (1 == INTCONbits.TMR0IF)){
 15512   002D76  AAF2               	btfss	242,5,c	;volatile
 15513   002D78  EFC0  F016         	goto	i2u1532_41
 15514   002D7C  EFC2  F016         	goto	i2u1532_40
 15515   002D80                     i2u1532_41:
 15516   002D80  EFCB  F016         	goto	i2l1454
 15517   002D84                     i2u1532_40:
 15518   002D84  A4F2               	btfss	242,2,c	;volatile
 15519   002D86  EFC7  F016         	goto	i2u1533_41
 15520   002D8A  EFC9  F016         	goto	i2u1533_40
 15521   002D8E                     i2u1533_41:
 15522   002D8E  EFCB  F016         	goto	i2l1454
 15523   002D92                     i2u1533_40:
 15524   002D92                     
 15525                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 223:             TIMER0_ISR();
 15526   002D92  EC6D  F030         	call	_TIMER0_ISR	;wreg free
 15527   002D96                     i2l1454:
 15528                           
 15529                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 227:         if((1 == PIE1bits.TMR1IE) &
      +                          & (1 == PIR1bits.TMR1IF)){
 15530   002D96  A09D               	btfss	157,0,c	;volatile
 15531   002D98  EFD0  F016         	goto	i2u1534_41
 15532   002D9C  EFD2  F016         	goto	i2u1534_40
 15533   002DA0                     i2u1534_41:
 15534   002DA0  EFDB  F016         	goto	i2l1456
 15535   002DA4                     i2u1534_40:
 15536   002DA4  A09E               	btfss	158,0,c	;volatile
 15537   002DA6  EFD7  F016         	goto	i2u1535_41
 15538   002DAA  EFD9  F016         	goto	i2u1535_40
 15539   002DAE                     i2u1535_41:
 15540   002DAE  EFDB  F016         	goto	i2l1456
 15541   002DB2                     i2u1535_40:
 15542   002DB2                     
 15543                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 228:             TIMER1_ISR();
 15544   002DB2  EC6F  F02E         	call	_TIMER1_ISR	;wreg free
 15545   002DB6                     i2l1456:
 15546                           
 15547                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 232:         if((1 == PIE1bits.TMR2IE) &
      +                          & (1 == PIR1bits.TMR2IF)){
 15548   002DB6  A29D               	btfss	157,1,c	;volatile
 15549   002DB8  EFE0  F016         	goto	i2u1536_41
 15550   002DBC  EFE2  F016         	goto	i2u1536_40
 15551   002DC0                     i2u1536_41:
 15552   002DC0  EFEB  F016         	goto	i2l1458
 15553   002DC4                     i2u1536_40:
 15554   002DC4  A29E               	btfss	158,1,c	;volatile
 15555   002DC6  EFE7  F016         	goto	i2u1537_41
 15556   002DCA  EFE9  F016         	goto	i2u1537_40
 15557   002DCE                     i2u1537_41:
 15558   002DCE  EFEB  F016         	goto	i2l1458
 15559   002DD2                     i2u1537_40:
 15560   002DD2                     
 15561                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 233:             TIMER2_ISR();
 15562   002DD2  EC7B  F030         	call	_TIMER2_ISR	;wreg free
 15563   002DD6                     i2l1458:
 15564                           
 15565                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 237:         if((1 == PIE2bits.TMR3IE) &
      +                          & (1 == PIR2bits.TMR3IF)){
 15566   002DD6  A2A0               	btfss	160,1,c	;volatile
 15567   002DD8  EFF0  F016         	goto	i2u1538_41
 15568   002DDC  EFF2  F016         	goto	i2u1538_40
 15569   002DE0                     i2u1538_41:
 15570   002DE0  EFFB  F016         	goto	i2l1460
 15571   002DE4                     i2u1538_40:
 15572   002DE4  A2A1               	btfss	161,1,c	;volatile
 15573   002DE6  EFF7  F016         	goto	i2u1539_41
 15574   002DEA  EFF9  F016         	goto	i2u1539_40
 15575   002DEE                     i2u1539_41:
 15576   002DEE  EFFB  F016         	goto	i2l1460
 15577   002DF2                     i2u1539_40:
 15578   002DF2                     
 15579                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 238:             TIMER3_ISR();
 15580   002DF2  EC66  F030         	call	_TIMER3_ISR	;wreg free
 15581   002DF6                     i2l1460:
 15582                           
 15583                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 242:         if((1 == PIE1bits.CCP1IE) &
      +                          & (1 == PIR1bits.CCP1IF)){
 15584   002DF6  A49D               	btfss	157,2,c	;volatile
 15585   002DF8  EF00  F017         	goto	i2u1540_41
 15586   002DFC  EF02  F017         	goto	i2u1540_40
 15587   002E00                     i2u1540_41:
 15588   002E00  EF0B  F017         	goto	i2l1462
 15589   002E04                     i2u1540_40:
 15590   002E04  A49E               	btfss	158,2,c	;volatile
 15591   002E06  EF07  F017         	goto	i2u1541_41
 15592   002E0A  EF09  F017         	goto	i2u1541_40
 15593   002E0E                     i2u1541_41:
 15594   002E0E  EF0B  F017         	goto	i2l1462
 15595   002E12                     i2u1541_40:
 15596   002E12                     
 15597                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 243:             CCP1_ISR();
 15598   002E12  EC8C  F030         	call	_CCP1_ISR	;wreg free
 15599   002E16                     i2l1462:
 15600                           
 15601                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 247:         if((1 == PIE2bits.CCP2IE) &
      +                          & (1 == PIR2bits.CCP2IF)){
 15602   002E16  A0A0               	btfss	160,0,c	;volatile
 15603   002E18  EF10  F017         	goto	i2u1542_41
 15604   002E1C  EF12  F017         	goto	i2u1542_40
 15605   002E20                     i2u1542_41:
 15606   002E20  EF1B  F017         	goto	i2l1464
 15607   002E24                     i2u1542_40:
 15608   002E24  A0A1               	btfss	161,0,c	;volatile
 15609   002E26  EF17  F017         	goto	i2u1543_41
 15610   002E2A  EF19  F017         	goto	i2u1543_40
 15611   002E2E                     i2u1543_41:
 15612   002E2E  EF1B  F017         	goto	i2l1464
 15613   002E32                     i2u1543_40:
 15614   002E32                     
 15615                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 248:             CCP2_ISR();
 15616   002E32  EC8A  F030         	call	_CCP2_ISR	;wreg free
 15617   002E36                     i2l1464:
 15618                           
 15619                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 252:         if((1 == PIE1bits.TXIE) && 
      +                          (1 == PIR1bits.TXIF)){
 15620   002E36  A89D               	btfss	157,4,c	;volatile
 15621   002E38  EF20  F017         	goto	i2u1544_41
 15622   002E3C  EF22  F017         	goto	i2u1544_40
 15623   002E40                     i2u1544_41:
 15624   002E40  EF2B  F017         	goto	i2l1466
 15625   002E44                     i2u1544_40:
 15626   002E44  A89E               	btfss	158,4,c	;volatile
 15627   002E46  EF27  F017         	goto	i2u1545_41
 15628   002E4A  EF29  F017         	goto	i2u1545_40
 15629   002E4E                     i2u1545_41:
 15630   002E4E  EF2B  F017         	goto	i2l1466
 15631   002E52                     i2u1545_40:
 15632   002E52                     
 15633                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 253:             USART_TX_ISR();
 15634   002E52  EC84  F030         	call	_USART_TX_ISR	;wreg free
 15635   002E56                     i2l1466:
 15636                           
 15637                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 257:         if((1 == PIE1bits.RCIE) && 
      +                          (1 == PIR1bits.RCIF)){
 15638   002E56  AA9D               	btfss	157,5,c	;volatile
 15639   002E58  EF30  F017         	goto	i2u1546_41
 15640   002E5C  EF32  F017         	goto	i2u1546_40
 15641   002E60                     i2u1546_41:
 15642   002E60  EF3B  F017         	goto	i2l1468
 15643   002E64                     i2u1546_40:
 15644   002E64  AA9E               	btfss	158,5,c	;volatile
 15645   002E66  EF37  F017         	goto	i2u1547_41
 15646   002E6A  EF39  F017         	goto	i2u1547_40
 15647   002E6E                     i2u1547_41:
 15648   002E6E  EF3B  F017         	goto	i2l1468
 15649   002E72                     i2u1547_40:
 15650   002E72                     
 15651                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 258:             USART_RX_ISR();
 15652   002E72  EC6A  F02F         	call	_USART_RX_ISR	;wreg free
 15653   002E76                     i2l1468:
 15654                           
 15655                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 262:         if((1 == PIE1bits.SSPIE) &&
      +                           (1 == PIR1bits.SSPIF)){
 15656   002E76  A69D               	btfss	157,3,c	;volatile
 15657   002E78  EF40  F017         	goto	i2u1548_41
 15658   002E7C  EF42  F017         	goto	i2u1548_40
 15659   002E80                     i2u1548_41:
 15660   002E80  EF4B  F017         	goto	i2l1470
 15661   002E84                     i2u1548_40:
 15662   002E84  A69E               	btfss	158,3,c	;volatile
 15663   002E86  EF47  F017         	goto	i2u1549_41
 15664   002E8A  EF49  F017         	goto	i2u1549_40
 15665   002E8E                     i2u1549_41:
 15666   002E8E  EF4B  F017         	goto	i2l1470
 15667   002E92                     i2u1549_40:
 15668   002E92                     
 15669                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 263:             MSSP_I2C_ISR();
 15670   002E92  EC86  F030         	call	_MSSP_I2C_ISR	;wreg free
 15671   002E96                     i2l1470:
 15672                           
 15673                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 267:         if((1 == PIE2bits.BCLIE) &&
      +                           (1 == IPR2bits.BCLIP)){
 15674   002E96  A6A0               	btfss	160,3,c	;volatile
 15675   002E98  EF50  F017         	goto	i2u1550_41
 15676   002E9C  EF52  F017         	goto	i2u1550_40
 15677   002EA0                     i2u1550_41:
 15678   002EA0  EF5B  F017         	goto	i2l1473
 15679   002EA4                     i2u1550_40:
 15680   002EA4  A6A2               	btfss	162,3,c	;volatile
 15681   002EA6  EF57  F017         	goto	i2u1551_41
 15682   002EAA  EF59  F017         	goto	i2u1551_40
 15683   002EAE                     i2u1551_41:
 15684   002EAE  EF5B  F017         	goto	i2l1473
 15685   002EB2                     i2u1551_40:
 15686   002EB2                     
 15687                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 268:             MSSP_I2C_BC_ISR();
 15688   002EB2  EC88  F030         	call	_MSSP_I2C_BC_ISR	;wreg free
 15689   002EB6                     i2l1473:
 15690   002EB6  C00F  FFF4         	movff	??_interrupt_manager+5,prodh
 15691   002EBA  C00E  FFF3         	movff	??_interrupt_manager+4,prodl
 15692   002EBE  C00D  FFDA         	movff	??_interrupt_manager+3,fsr2h
 15693   002EC2  C00C  FFD9         	movff	??_interrupt_manager+2,fsr2l
 15694   002EC6  C00B  FFFB         	movff	??_interrupt_manager+1,pclatu
 15695   002ECA  C00A  FFFA         	movff	??_interrupt_manager,pclath
 15696   002ECE  9270               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15697   002ED0  0011               	retfie		f
 15698   002ED2                     __end_of_interrupt_manager:
 15699                           	callstack 0
 15700                           
 15701 ;; *************** function _USART_TX_ISR *****************
 15702 ;; Defined at:
 15703 ;;		line 258 in file "MKAL_layer/USART/hal_usart.c"
 15704 ;; Parameters:    Size  Location     Type
 15705 ;;		None
 15706 ;; Auto vars:     Size  Location     Type
 15707 ;;		None
 15708 ;; Return value:  Size  Location     Type
 15709 ;;                  1    wreg      void 
 15710 ;; Registers used:
 15711 ;;		None
 15712 ;; Tracked objects:
 15713 ;;		On entry : 0/0
 15714 ;;		On exit  : 0/0
 15715 ;;		Unchanged: 0/0
 15716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15721 ;;Total ram usage:        0 bytes
 15722 ;; Hardware stack levels used: 1
 15723 ;; This function calls:
 15724 ;;		Nothing
 15725 ;; This function is called by:
 15726 ;;		_interrupt_manager
 15727 ;; This function uses a non-reentrant model
 15728 ;;
 15729                           
 15730                           	psect	text83
 15731   006108                     __ptext83:
 15732                           	callstack 0
 15733   006108                     _USART_TX_ISR:
 15734                           	callstack 23
 15735   006108                     
 15736                           ;MKAL_layer/USART/hal_usart.c: 259:     (PIE1bits.TXIE = 0);
 15737   006108  989D               	bcf	157,4,c	;volatile
 15738   00610A  0012               	return		;funcret
 15739   00610C                     __end_of_USART_TX_ISR:
 15740                           	callstack 0
 15741                           
 15742 ;; *************** function _USART_RX_ISR *****************
 15743 ;; Defined at:
 15744 ;;		line 266 in file "MKAL_layer/USART/hal_usart.c"
 15745 ;; Parameters:    Size  Location     Type
 15746 ;;		None
 15747 ;; Auto vars:     Size  Location     Type
 15748 ;;		None
 15749 ;; Return value:  Size  Location     Type
 15750 ;;                  1    wreg      void 
 15751 ;; Registers used:
 15752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 15753 ;; Tracked objects:
 15754 ;;		On entry : 0/0
 15755 ;;		On exit  : 0/0
 15756 ;;		Unchanged: 0/0
 15757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15762 ;;Total ram usage:        0 bytes
 15763 ;; Hardware stack levels used: 1
 15764 ;; Hardware stack levels required when called: 2
 15765 ;; This function calls:
 15766 ;;		NULL
 15767 ;;		_interrupt_usart_rx
 15768 ;; This function is called by:
 15769 ;;		_interrupt_manager
 15770 ;; This function uses a non-reentrant model
 15771 ;;
 15772                           
 15773                           	psect	text84
 15774   005ED4                     __ptext84:
 15775                           	callstack 0
 15776   005ED4                     _USART_RX_ISR:
 15777                           	callstack 21
 15778   005ED4                     
 15779                           ;MKAL_layer/USART/hal_usart.c: 267:     if(USART_RX_Interrupthandler){
 15780   005ED4  0100               	movlb	0	; () banked
 15781   005ED6  5188               	movf	_USART_RX_Interrupthandler& (0+255),w,b
 15782   005ED8  1189               	iorwf	(_USART_RX_Interrupthandler+1)& (0+255),w,b
 15783   005EDA  B4D8               	btfsc	status,2,c
 15784   005EDC  EF72  F02F         	goto	i2u844_41
 15785   005EE0  EF74  F02F         	goto	i2u844_40
 15786   005EE4                     i2u844_41:
 15787   005EE4  EF80  F02F         	goto	i2l1843
 15788   005EE8                     i2u844_40:
 15789   005EE8                     
 15790                           ; BSR set to: 0
 15791                           ;MKAL_layer/USART/hal_usart.c: 268:         USART_RX_Interrupthandler();
 15792   005EE8  D802               	call	i2u845_48
 15793   005EEA  EF80  F02F         	goto	i2u845_49
 15794   005EEE                     i2u845_48:
 15795   005EEE  0005               	push	
 15796   005EF0  6EFA               	movwf	pclath,c
 15797   005EF2  5188               	movf	_USART_RX_Interrupthandler& (0+255),w,b
 15798   005EF4  6EFD               	movwf	tosl,c
 15799   005EF6  5189               	movf	(_USART_RX_Interrupthandler+1)& (0+255),w,b
 15800   005EF8  6EFE               	movwf	tosh,c
 15801   005EFA  6AFF               	clrf	tosu,c
 15802   005EFC  50FA               	movf	pclath,w,c
 15803   005EFE  0012               	return		;indir
 15804   005F00                     i2u845_49:
 15805   005F00                     i2l1843:
 15806   005F00  0012               	return		;funcret
 15807   005F02                     __end_of_USART_RX_ISR:
 15808                           	callstack 0
 15809                           
 15810 ;; *************** function _interrupt_usart_rx *****************
 15811 ;; Defined at:
 15812 ;;		line 371 in file "main.c"
 15813 ;; Parameters:    Size  Location     Type
 15814 ;;		None
 15815 ;; Auto vars:     Size  Location     Type
 15816 ;;  ret_data        1    1[COMRAM] volatile unsigned char 
 15817 ;; Return value:  Size  Location     Type
 15818 ;;                  1    wreg      void 
 15819 ;; Registers used:
 15820 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15821 ;; Tracked objects:
 15822 ;;		On entry : 0/0
 15823 ;;		On exit  : 0/0
 15824 ;;		Unchanged: 0/0
 15825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15827 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15829 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15830 ;;Total ram usage:        1 bytes
 15831 ;; Hardware stack levels used: 1
 15832 ;; Hardware stack levels required when called: 1
 15833 ;; This function calls:
 15834 ;;		_usart_ASYNC_read_byte_blocking
 15835 ;; This function is called by:
 15836 ;;		_USART_RX_ISR
 15837 ;; This function uses a non-reentrant model
 15838 ;;
 15839                           
 15840                           	psect	text85
 15841   005F02                     __ptext85:
 15842                           	callstack 0
 15843   005F02                     _interrupt_usart_rx:
 15844                           	callstack 21
 15845   005F02                     
 15846                           ;main.c: 372:     volatile uint8 ret_data = 0;
 15847   005F02  0E00               	movlw	0
 15848   005F04  6E02               	movwf	interrupt_usart_rx@ret_data^0,c	;volatile
 15849   005F06                     
 15850                           ;main.c: 373:     ret = usart_ASYNC_read_byte_blocking (&usart_data[usart_counter]);
 15851   005F06  5066               	movf	_usart_counter^0,w,c
 15852   005F08  0FCA               	addlw	low _usart_data
 15853   005F0A  6E01               	movwf	usart_ASYNC_read_byte_blocking@data^0,c
 15854   005F0C  EC0B  F030         	call	_usart_ASYNC_read_byte_blocking	;wreg free
 15855   005F10  0100               	movlb	0	; () banked
 15856   005F12  6FFF               	movwf	_ret& (0+255),b
 15857   005F14                     
 15858                           ; BSR set to: 0
 15859                           ;main.c: 374:     usart_counter++;
 15860   005F14  2A66               	incf	_usart_counter^0,f,c
 15861   005F16                     
 15862                           ; BSR set to: 0
 15863                           ;main.c: 375:     if(usart_counter == 7){
 15864   005F16  0E07               	movlw	7
 15865   005F18  1866               	xorwf	_usart_counter^0,w,c
 15866   005F1A  A4D8               	btfss	status,2,c
 15867   005F1C  EF92  F02F         	goto	i2u769_41
 15868   005F20  EF94  F02F         	goto	i2u769_40
 15869   005F24                     i2u769_41:
 15870   005F24  EF96  F02F         	goto	i2l235
 15871   005F28                     i2u769_40:
 15872   005F28                     
 15873                           ; BSR set to: 0
 15874                           ;main.c: 376:         usart_counter = 0;
 15875   005F28  0E00               	movlw	0
 15876   005F2A  6E66               	movwf	_usart_counter^0,c
 15877   005F2C                     i2l235:
 15878                           
 15879                           ; BSR set to: 0
 15880   005F2C  0012               	return		;funcret
 15881   005F2E                     __end_of_interrupt_usart_rx:
 15882                           	callstack 0
 15883                           
 15884 ;; *************** function _usart_ASYNC_read_byte_blocking *****************
 15885 ;; Defined at:
 15886 ;;		line 57 in file "MKAL_layer/USART/hal_usart.c"
 15887 ;; Parameters:    Size  Location     Type
 15888 ;;  data            1    0[COMRAM] PTR unsigned char 
 15889 ;;		 -> usart_data(7), 
 15890 ;; Auto vars:     Size  Location     Type
 15891 ;;  ret             1    0        unsigned char 
 15892 ;; Return value:  Size  Location     Type
 15893 ;;                  1    wreg      unsigned char 
 15894 ;; Registers used:
 15895 ;;		wreg, fsr2l, fsr2h, status,2
 15896 ;; Tracked objects:
 15897 ;;		On entry : 0/0
 15898 ;;		On exit  : 0/0
 15899 ;;		Unchanged: 0/0
 15900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15901 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15904 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15905 ;;Total ram usage:        1 bytes
 15906 ;; Hardware stack levels used: 1
 15907 ;; This function calls:
 15908 ;;		Nothing
 15909 ;; This function is called by:
 15910 ;;		_interrupt_usart_rx
 15911 ;; This function uses a non-reentrant model
 15912 ;;
 15913                           
 15914                           	psect	text86
 15915   006016                     __ptext86:
 15916                           	callstack 0
 15917   006016                     _usart_ASYNC_read_byte_blocking:
 15918                           	callstack 21
 15919   006016                     i2l1770:
 15920                           
 15921                           ;MKAL_layer/USART/hal_usart.c: 59:         while(!PIR1bits.RCIF){
 15922   006016  AA9E               	btfss	158,5,c	;volatile
 15923   006018  EF10  F030         	goto	i2u680_41
 15924   00601C  EF12  F030         	goto	i2u680_40
 15925   006020                     i2u680_41:
 15926   006020  EF0B  F030         	goto	i2l1770
 15927   006024                     i2u680_40:
 15928   006024                     
 15929                           ;MKAL_layer/USART/hal_usart.c: 61:         *data = RCREG;
 15930   006024  5001               	movf	usart_ASYNC_read_byte_blocking@data^0,w,c
 15931   006026  6ED9               	movwf	fsr2l,c
 15932   006028  6ADA               	clrf	fsr2h,c
 15933   00602A  CFAE FFDF          	movff	4014,indf2	;volatile
 15934   00602E                     
 15935                           ;MKAL_layer/USART/hal_usart.c: 63:     return ret;
 15936   00602E  0E01               	movlw	1
 15937   006030  0012               	return		;funcret
 15938   006032                     __end_of_usart_ASYNC_read_byte_blocking:
 15939                           	callstack 0
 15940                           
 15941 ;; *************** function _TIMER3_ISR *****************
 15942 ;; Defined at:
 15943 ;;		line 129 in file "MKAL_layer/timer3/hal_timer3.c"
 15944 ;; Parameters:    Size  Location     Type
 15945 ;;		None
 15946 ;; Auto vars:     Size  Location     Type
 15947 ;;		None
 15948 ;; Return value:  Size  Location     Type
 15949 ;;                  1    wreg      void 
 15950 ;; Registers used:
 15951 ;;		wreg, status,2
 15952 ;; Tracked objects:
 15953 ;;		On entry : 0/0
 15954 ;;		On exit  : 0/0
 15955 ;;		Unchanged: 0/0
 15956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15961 ;;Total ram usage:        0 bytes
 15962 ;; Hardware stack levels used: 1
 15963 ;; This function calls:
 15964 ;;		Nothing
 15965 ;; This function is called by:
 15966 ;;		_interrupt_manager
 15967 ;; This function uses a non-reentrant model
 15968 ;;
 15969                           
 15970                           	psect	text87
 15971   0060CC                     __ptext87:
 15972                           	callstack 0
 15973   0060CC                     _TIMER3_ISR:
 15974                           	callstack 23
 15975   0060CC                     
 15976                           ;MKAL_layer/timer3/hal_timer3.c: 131:     (PIR2bits.TMR3IF = 0);
 15977   0060CC  92A1               	bcf	161,1,c	;volatile
 15978   0060CE                     
 15979                           ;MKAL_layer/timer3/hal_timer3.c: 133:     TMR3H = (Timer3_preload >> 8);
 15980   0060CE  0100               	movlb	0	; () banked
 15981   0060D0  518D               	movf	(_Timer3_preload+1)& (0+255),w,b
 15982   0060D2  6EB3               	movwf	179,c	;volatile
 15983   0060D4                     
 15984                           ; BSR set to: 0
 15985                           ;MKAL_layer/timer3/hal_timer3.c: 134:     TMR3L = (uint8)(Timer3_preload);
 15986   0060D4  C08C  FFB2         	movff	_Timer3_preload,4018	;volatile
 15987   0060D8                     
 15988                           ; BSR set to: 0
 15989   0060D8  0012               	return		;funcret
 15990   0060DA                     __end_of_TIMER3_ISR:
 15991                           	callstack 0
 15992                           
 15993 ;; *************** function _TIMER2_ISR *****************
 15994 ;; Defined at:
 15995 ;;		line 95 in file "MKAL_layer/timer2/hal_timer2.c"
 15996 ;; Parameters:    Size  Location     Type
 15997 ;;		None
 15998 ;; Auto vars:     Size  Location     Type
 15999 ;;		None
 16000 ;; Return value:  Size  Location     Type
 16001 ;;                  1    wreg      void 
 16002 ;; Registers used:
 16003 ;;		None
 16004 ;; Tracked objects:
 16005 ;;		On entry : 0/0
 16006 ;;		On exit  : 0/0
 16007 ;;		Unchanged: 0/0
 16008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16013 ;;Total ram usage:        0 bytes
 16014 ;; Hardware stack levels used: 1
 16015 ;; This function calls:
 16016 ;;		Nothing
 16017 ;; This function is called by:
 16018 ;;		_interrupt_manager
 16019 ;; This function uses a non-reentrant model
 16020 ;;
 16021                           
 16022                           	psect	text88
 16023   0060F6                     __ptext88:
 16024                           	callstack 0
 16025   0060F6                     _TIMER2_ISR:
 16026                           	callstack 23
 16027   0060F6                     
 16028                           ;MKAL_layer/timer2/hal_timer2.c: 97:     (PIR1bits.TMR2IF = 0);
 16029   0060F6  929E               	bcf	158,1,c	;volatile
 16030                           
 16031                           ;MKAL_layer/timer2/hal_timer2.c: 99:     TMR2 = Timer2_preload;
 16032   0060F8  C0BE  FFCC         	movff	_Timer2_preload,4044	;volatile
 16033   0060FC  0012               	return		;funcret
 16034   0060FE                     __end_of_TIMER2_ISR:
 16035                           	callstack 0
 16036                           
 16037 ;; *************** function _TIMER1_ISR *****************
 16038 ;; Defined at:
 16039 ;;		line 153 in file "MKAL_layer/timer1/hal_timer1.c"
 16040 ;; Parameters:    Size  Location     Type
 16041 ;;		None
 16042 ;; Auto vars:     Size  Location     Type
 16043 ;;		None
 16044 ;; Return value:  Size  Location     Type
 16045 ;;                  1    wreg      void 
 16046 ;; Registers used:
 16047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 16048 ;; Tracked objects:
 16049 ;;		On entry : 0/0
 16050 ;;		On exit  : 0/0
 16051 ;;		Unchanged: 0/0
 16052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16057 ;;Total ram usage:        0 bytes
 16058 ;; Hardware stack levels used: 1
 16059 ;; Hardware stack levels required when called: 2
 16060 ;; This function calls:
 16061 ;;		NULL
 16062 ;;		_timer1_interrupt
 16063 ;; This function is called by:
 16064 ;;		_interrupt_manager
 16065 ;; This function uses a non-reentrant model
 16066 ;;
 16067                           
 16068                           	psect	text89
 16069   005CDE                     __ptext89:
 16070                           	callstack 0
 16071   005CDE                     _TIMER1_ISR:
 16072                           	callstack 21
 16073   005CDE                     
 16074                           ;MKAL_layer/timer1/hal_timer1.c: 155:     (PIR1bits.TMR1IF = 0);
 16075   005CDE  909E               	bcf	158,0,c	;volatile
 16076   005CE0                     
 16077                           ;MKAL_layer/timer1/hal_timer1.c: 157:     TMR1H = (Timer1_preload >> 8);
 16078   005CE0  0100               	movlb	0	; () banked
 16079   005CE2  5193               	movf	(_Timer1_preload+1)& (0+255),w,b
 16080   005CE4  6ECF               	movwf	207,c	;volatile
 16081   005CE6                     
 16082                           ; BSR set to: 0
 16083                           ;MKAL_layer/timer1/hal_timer1.c: 158:     TMR1L = (uint8)(Timer1_preload);
 16084   005CE6  C092  FFCE         	movff	_Timer1_preload,4046	;volatile
 16085   005CEA                     
 16086                           ; BSR set to: 0
 16087                           ;MKAL_layer/timer1/hal_timer1.c: 160:     if(TIMER1_Interrupthandler){
 16088   005CEA  5194               	movf	_TIMER1_Interrupthandler& (0+255),w,b
 16089   005CEC  1195               	iorwf	(_TIMER1_Interrupthandler+1)& (0+255),w,b
 16090   005CEE  B4D8               	btfsc	status,2,c
 16091   005CF0  EF7C  F02E         	goto	i2u1358_41
 16092   005CF4  EF7E  F02E         	goto	i2u1358_40
 16093   005CF8                     i2u1358_41:
 16094   005CF8  EF8A  F02E         	goto	i2l1615
 16095   005CFC                     i2u1358_40:
 16096   005CFC                     
 16097                           ; BSR set to: 0
 16098                           ;MKAL_layer/timer1/hal_timer1.c: 161:         TIMER1_Interrupthandler();
 16099   005CFC  D802               	call	i2u1359_48
 16100   005CFE  EF8A  F02E         	goto	i2u1359_49
 16101   005D02                     i2u1359_48:
 16102   005D02  0005               	push	
 16103   005D04  6EFA               	movwf	pclath,c
 16104   005D06  5194               	movf	_TIMER1_Interrupthandler& (0+255),w,b
 16105   005D08  6EFD               	movwf	tosl,c
 16106   005D0A  5195               	movf	(_TIMER1_Interrupthandler+1)& (0+255),w,b
 16107   005D0C  6EFE               	movwf	tosh,c
 16108   005D0E  6AFF               	clrf	tosu,c
 16109   005D10  50FA               	movf	pclath,w,c
 16110   005D12  0012               	return		;indir
 16111   005D14                     i2u1359_49:
 16112   005D14                     i2l1615:
 16113   005D14  0012               	return		;funcret
 16114   005D16                     __end_of_TIMER1_ISR:
 16115                           	callstack 0
 16116                           
 16117 ;; *************** function _timer1_interrupt *****************
 16118 ;; Defined at:
 16119 ;;		line 358 in file "main.c"
 16120 ;; Parameters:    Size  Location     Type
 16121 ;;		None
 16122 ;; Auto vars:     Size  Location     Type
 16123 ;;		None
 16124 ;; Return value:  Size  Location     Type
 16125 ;;                  1    wreg      void 
 16126 ;; Registers used:
 16127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16128 ;; Tracked objects:
 16129 ;;		On entry : 0/0
 16130 ;;		On exit  : 0/0
 16131 ;;		Unchanged: 0/0
 16132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16137 ;;Total ram usage:        0 bytes
 16138 ;; Hardware stack levels used: 1
 16139 ;; Hardware stack levels required when called: 1
 16140 ;; This function calls:
 16141 ;;		i2_GPIO_pIN_WRITE_LOGIC
 16142 ;; This function is called by:
 16143 ;;		_TIMER1_ISR
 16144 ;; This function uses a non-reentrant model
 16145 ;;
 16146                           
 16147                           	psect	text90
 16148   005E14                     __ptext90:
 16149                           	callstack 0
 16150   005E14                     _timer1_interrupt:
 16151                           	callstack 21
 16152   005E14                     
 16153                           ;main.c: 359:     timer1_counter++;
 16154   005E14  2A67               	incf	_timer1_counter^0,f,c	;volatile
 16155                           
 16156                           ;main.c: 360:     counter++;
 16157   005E16  0100               	movlb	0	; () banked
 16158   005E18  2BC9               	incf	_counter& (0+255),f,b	;volatile
 16159   005E1A                     
 16160                           ; BSR set to: 0
 16161                           ;main.c: 361:     if(timer1_counter == 6){
 16162   005E1A  0E06               	movlw	6
 16163   005E1C  1867               	xorwf	_timer1_counter^0,w,c	;volatile
 16164   005E1E  A4D8               	btfss	status,2,c
 16165   005E20  EF14  F02F         	goto	i2u1289_41
 16166   005E24  EF16  F02F         	goto	i2u1289_40
 16167   005E28                     i2u1289_41:
 16168   005E28  EF21  F02F         	goto	i2l228
 16169   005E2C                     i2u1289_40:
 16170   005E2C                     
 16171                           ; BSR set to: 0
 16172                           ;main.c: 362:         timer1_counter = 0;
 16173   005E2C  0E00               	movlw	0
 16174   005E2E  6E67               	movwf	_timer1_counter^0,c	;volatile
 16175   005E30                     
 16176                           ; BSR set to: 0
 16177                           ;main.c: 363:         ret = GPIO_pIN_WRITE_LOGIC(&leds_1,GPIO_LOW);
 16178   005E30  0E6E               	movlw	low _leds_1
 16179   005E32  6E01               	movwf	i2GPIO_pIN_WRITE_LOGIC@config_pin^0,c
 16180   005E34  6A02               	clrf	(i2GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
 16181   005E36  0E00               	movlw	0
 16182   005E38  6E03               	movwf	i2GPIO_pIN_WRITE_LOGIC@logic^0,c
 16183   005E3A  EC01  F020         	call	i2_GPIO_pIN_WRITE_LOGIC	;wreg free
 16184   005E3E  0100               	movlb	0	; () banked
 16185   005E40  6FFF               	movwf	_ret& (0+255),b
 16186   005E42                     i2l228:
 16187                           
 16188                           ; BSR set to: 0
 16189   005E42  0012               	return		;funcret
 16190   005E44                     __end_of_timer1_interrupt:
 16191                           	callstack 0
 16192                           
 16193 ;; *************** function _TIMER0_ISR *****************
 16194 ;; Defined at:
 16195 ;;		line 157 in file "MKAL_layer/timer/hal_timer0.c"
 16196 ;; Parameters:    Size  Location     Type
 16197 ;;		None
 16198 ;; Auto vars:     Size  Location     Type
 16199 ;;		None
 16200 ;; Return value:  Size  Location     Type
 16201 ;;                  1    wreg      void 
 16202 ;; Registers used:
 16203 ;;		wreg, status,2
 16204 ;; Tracked objects:
 16205 ;;		On entry : 0/0
 16206 ;;		On exit  : 0/0
 16207 ;;		Unchanged: 0/0
 16208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16213 ;;Total ram usage:        0 bytes
 16214 ;; Hardware stack levels used: 1
 16215 ;; This function calls:
 16216 ;;		Nothing
 16217 ;; This function is called by:
 16218 ;;		_interrupt_manager
 16219 ;; This function uses a non-reentrant model
 16220 ;;
 16221                           
 16222                           	psect	text91
 16223   0060DA                     __ptext91:
 16224                           	callstack 0
 16225   0060DA                     _TIMER0_ISR:
 16226                           	callstack 23
 16227   0060DA                     
 16228                           ;MKAL_layer/timer/hal_timer0.c: 159:     (INTCONbits.TMR0IF = 0);
 16229   0060DA  94F2               	bcf	242,2,c	;volatile
 16230   0060DC                     
 16231                           ;MKAL_layer/timer/hal_timer0.c: 161:     TMR0H = (Timer0_preload >> 8);
 16232   0060DC  0100               	movlb	0	; () banked
 16233   0060DE  5197               	movf	(_Timer0_preload+1)& (0+255),w,b
 16234   0060E0  6ED7               	movwf	215,c	;volatile
 16235   0060E2                     
 16236                           ; BSR set to: 0
 16237                           ;MKAL_layer/timer/hal_timer0.c: 162:     TMR0L = (uint8)(Timer0_preload);
 16238   0060E2  C096  FFD6         	movff	_Timer0_preload,4054	;volatile
 16239   0060E6                     
 16240                           ; BSR set to: 0
 16241   0060E6  0012               	return		;funcret
 16242   0060E8                     __end_of_TIMER0_ISR:
 16243                           	callstack 0
 16244                           
 16245 ;; *************** function _RB7_ISR *****************
 16246 ;; Defined at:
 16247 ;;		line 585 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
 16248 ;; Parameters:    Size  Location     Type
 16249 ;;  value           1    wreg     unsigned char 
 16250 ;; Auto vars:     Size  Location     Type
 16251 ;;  value           1    0[COMRAM] unsigned char 
 16252 ;; Return value:  Size  Location     Type
 16253 ;;                  1    wreg      void 
 16254 ;; Registers used:
 16255 ;;		wreg, status,2, status,0
 16256 ;; Tracked objects:
 16257 ;;		On entry : 0/0
 16258 ;;		On exit  : 0/0
 16259 ;;		Unchanged: 0/0
 16260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16262 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16264 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16265 ;;Total ram usage:        1 bytes
 16266 ;; Hardware stack levels used: 1
 16267 ;; This function calls:
 16268 ;;		Nothing
 16269 ;; This function is called by:
 16270 ;;		_interrupt_manager
 16271 ;; This function uses a non-reentrant model
 16272 ;;
 16273                           
 16274                           	psect	text92
 16275   00604C                     __ptext92:
 16276                           	callstack 0
 16277   00604C                     _RB7_ISR:
 16278                           	callstack 23
 16279                           
 16280                           ; BSR set to: 0
 16281                           ;incstack = 0
 16282                           ;RB7_ISR@value stored from wreg
 16283   00604C  6E01               	movwf	RB7_ISR@value^0,c
 16284   00604E                     
 16285                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 587:     (INTCONbits.RBIF = 0);
 16286   00604E  90F2               	bcf	242,0,c	;volatile
 16287   006050                     
 16288                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 591:     if(1 == value){
 16289   006050  0401               	decf	RB7_ISR@value^0,w,c
 16290   006052  A4D8               	btfss	status,2,c
 16291   006054  EF2E  F030         	goto	i2u841_41
 16292   006058  EF30  F030         	goto	i2u841_40
 16293   00605C                     i2u841_41:
 16294   00605C  EF32  F030         	goto	i2l8676
 16295   006060                     i2u841_40:
 16296   006060  EF32  F030         	goto	i2l1364
 16297   006064                     i2l8676:
 16298   006064                     i2l1364:
 16299   006064  0012               	return		;funcret
 16300   006066                     __end_of_RB7_ISR:
 16301                           	callstack 0
 16302                           
 16303 ;; *************** function _RB6_ISR *****************
 16304 ;; Defined at:
 16305 ;;		line 565 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
 16306 ;; Parameters:    Size  Location     Type
 16307 ;;  value           1    wreg     unsigned char 
 16308 ;; Auto vars:     Size  Location     Type
 16309 ;;  value           1    0[COMRAM] unsigned char 
 16310 ;; Return value:  Size  Location     Type
 16311 ;;                  1    wreg      void 
 16312 ;; Registers used:
 16313 ;;		wreg, status,2, status,0
 16314 ;; Tracked objects:
 16315 ;;		On entry : 0/0
 16316 ;;		On exit  : 0/0
 16317 ;;		Unchanged: 0/0
 16318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16320 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16322 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16323 ;;Total ram usage:        1 bytes
 16324 ;; Hardware stack levels used: 1
 16325 ;; This function calls:
 16326 ;;		Nothing
 16327 ;; This function is called by:
 16328 ;;		_interrupt_manager
 16329 ;; This function uses a non-reentrant model
 16330 ;;
 16331                           
 16332                           	psect	text93
 16333   006066                     __ptext93:
 16334                           	callstack 0
 16335   006066                     _RB6_ISR:
 16336                           	callstack 23
 16337                           
 16338                           ;incstack = 0
 16339                           ;RB6_ISR@value stored from wreg
 16340   006066  6E01               	movwf	RB6_ISR@value^0,c
 16341   006068                     
 16342                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 567:     (INTCONbits.RBIF = 0);
 16343   006068  90F2               	bcf	242,0,c	;volatile
 16344   00606A                     
 16345                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 571:     if(1 == value){
 16346   00606A  0401               	decf	RB6_ISR@value^0,w,c
 16347   00606C  A4D8               	btfss	status,2,c
 16348   00606E  EF3B  F030         	goto	i2u840_41
 16349   006072  EF3D  F030         	goto	i2u840_40
 16350   006076                     i2u840_41:
 16351   006076  EF3F  F030         	goto	i2l8662
 16352   00607A                     i2u840_40:
 16353   00607A  EF3F  F030         	goto	i2l1353
 16354   00607E                     i2l8662:
 16355   00607E                     i2l1353:
 16356   00607E  0012               	return		;funcret
 16357   006080                     __end_of_RB6_ISR:
 16358                           	callstack 0
 16359                           
 16360 ;; *************** function _RB5_ISR *****************
 16361 ;; Defined at:
 16362 ;;		line 545 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
 16363 ;; Parameters:    Size  Location     Type
 16364 ;;  value           1    wreg     unsigned char 
 16365 ;; Auto vars:     Size  Location     Type
 16366 ;;  value           1    0[COMRAM] unsigned char 
 16367 ;; Return value:  Size  Location     Type
 16368 ;;                  1    wreg      void 
 16369 ;; Registers used:
 16370 ;;		wreg, status,2, status,0
 16371 ;; Tracked objects:
 16372 ;;		On entry : 0/0
 16373 ;;		On exit  : 0/0
 16374 ;;		Unchanged: 0/0
 16375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16377 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16379 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16380 ;;Total ram usage:        1 bytes
 16381 ;; Hardware stack levels used: 1
 16382 ;; This function calls:
 16383 ;;		Nothing
 16384 ;; This function is called by:
 16385 ;;		_interrupt_manager
 16386 ;; This function uses a non-reentrant model
 16387 ;;
 16388                           
 16389                           	psect	text94
 16390   006080                     __ptext94:
 16391                           	callstack 0
 16392   006080                     _RB5_ISR:
 16393                           	callstack 23
 16394                           
 16395                           ;incstack = 0
 16396                           ;RB5_ISR@value stored from wreg
 16397   006080  6E01               	movwf	RB5_ISR@value^0,c
 16398   006082                     
 16399                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 547:     (INTCONbits.RBIF = 0);
 16400   006082  90F2               	bcf	242,0,c	;volatile
 16401   006084                     
 16402                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 551:     if(1 == value){
 16403   006084  0401               	decf	RB5_ISR@value^0,w,c
 16404   006086  A4D8               	btfss	status,2,c
 16405   006088  EF48  F030         	goto	i2u839_41
 16406   00608C  EF4A  F030         	goto	i2u839_40
 16407   006090                     i2u839_41:
 16408   006090  EF4C  F030         	goto	i2l8648
 16409   006094                     i2u839_40:
 16410   006094  EF4C  F030         	goto	i2l1342
 16411   006098                     i2l8648:
 16412   006098                     i2l1342:
 16413   006098  0012               	return		;funcret
 16414   00609A                     __end_of_RB5_ISR:
 16415                           	callstack 0
 16416                           
 16417 ;; *************** function _RB4_ISR *****************
 16418 ;; Defined at:
 16419 ;;		line 525 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
 16420 ;; Parameters:    Size  Location     Type
 16421 ;;  value           1    wreg     unsigned char 
 16422 ;; Auto vars:     Size  Location     Type
 16423 ;;  value           1    0[COMRAM] unsigned char 
 16424 ;; Return value:  Size  Location     Type
 16425 ;;                  1    wreg      void 
 16426 ;; Registers used:
 16427 ;;		wreg, status,2, status,0
 16428 ;; Tracked objects:
 16429 ;;		On entry : 0/0
 16430 ;;		On exit  : 0/0
 16431 ;;		Unchanged: 0/0
 16432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16434 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16436 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16437 ;;Total ram usage:        1 bytes
 16438 ;; Hardware stack levels used: 1
 16439 ;; This function calls:
 16440 ;;		Nothing
 16441 ;; This function is called by:
 16442 ;;		_interrupt_manager
 16443 ;; This function uses a non-reentrant model
 16444 ;;
 16445                           
 16446                           	psect	text95
 16447   00609A                     __ptext95:
 16448                           	callstack 0
 16449   00609A                     _RB4_ISR:
 16450                           	callstack 23
 16451                           
 16452                           ;incstack = 0
 16453                           ;RB4_ISR@value stored from wreg
 16454   00609A  6E01               	movwf	RB4_ISR@value^0,c
 16455   00609C                     
 16456                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 527:     (INTCONbits.RBIF = 0);
 16457   00609C  90F2               	bcf	242,0,c	;volatile
 16458   00609E                     
 16459                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 531:     if(1 == value){
 16460   00609E  0401               	decf	RB4_ISR@value^0,w,c
 16461   0060A0  A4D8               	btfss	status,2,c
 16462   0060A2  EF55  F030         	goto	i2u838_41
 16463   0060A6  EF57  F030         	goto	i2u838_40
 16464   0060AA                     i2u838_41:
 16465   0060AA  EF59  F030         	goto	i2l8634
 16466   0060AE                     i2u838_40:
 16467   0060AE  EF59  F030         	goto	i2l1331
 16468   0060B2                     i2l8634:
 16469   0060B2                     i2l1331:
 16470   0060B2  0012               	return		;funcret
 16471   0060B4                     __end_of_RB4_ISR:
 16472                           	callstack 0
 16473                           
 16474 ;; *************** function _MSSP_I2C_ISR *****************
 16475 ;; Defined at:
 16476 ;;		line 269 in file "MKAL_layer/I2C/hal_i2c.c"
 16477 ;; Parameters:    Size  Location     Type
 16478 ;;		None
 16479 ;; Auto vars:     Size  Location     Type
 16480 ;;		None
 16481 ;; Return value:  Size  Location     Type
 16482 ;;                  1    wreg      void 
 16483 ;; Registers used:
 16484 ;;		None
 16485 ;; Tracked objects:
 16486 ;;		On entry : 0/0
 16487 ;;		On exit  : 0/0
 16488 ;;		Unchanged: 0/0
 16489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16494 ;;Total ram usage:        0 bytes
 16495 ;; Hardware stack levels used: 1
 16496 ;; This function calls:
 16497 ;;		Nothing
 16498 ;; This function is called by:
 16499 ;;		_interrupt_manager
 16500 ;; This function uses a non-reentrant model
 16501 ;;
 16502                           
 16503                           	psect	text96
 16504   00610C                     __ptext96:
 16505                           	callstack 0
 16506   00610C                     _MSSP_I2C_ISR:
 16507                           	callstack 23
 16508   00610C                     
 16509                           ;MKAL_layer/I2C/hal_i2c.c: 271:     (PIR1bits.SSPIF = 0);
 16510   00610C  969E               	bcf	158,3,c	;volatile
 16511   00610E  0012               	return		;funcret
 16512   006110                     __end_of_MSSP_I2C_ISR:
 16513                           	callstack 0
 16514                           
 16515 ;; *************** function _MSSP_I2C_BC_ISR *****************
 16516 ;; Defined at:
 16517 ;;		line 278 in file "MKAL_layer/I2C/hal_i2c.c"
 16518 ;; Parameters:    Size  Location     Type
 16519 ;;		None
 16520 ;; Auto vars:     Size  Location     Type
 16521 ;;		None
 16522 ;; Return value:  Size  Location     Type
 16523 ;;                  1    wreg      void 
 16524 ;; Registers used:
 16525 ;;		None
 16526 ;; Tracked objects:
 16527 ;;		On entry : 0/0
 16528 ;;		On exit  : 0/0
 16529 ;;		Unchanged: 0/0
 16530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16535 ;;Total ram usage:        0 bytes
 16536 ;; Hardware stack levels used: 1
 16537 ;; This function calls:
 16538 ;;		Nothing
 16539 ;; This function is called by:
 16540 ;;		_interrupt_manager
 16541 ;; This function uses a non-reentrant model
 16542 ;;
 16543                           
 16544                           	psect	text97
 16545   006110                     __ptext97:
 16546                           	callstack 0
 16547   006110                     _MSSP_I2C_BC_ISR:
 16548                           	callstack 23
 16549   006110                     
 16550                           ;MKAL_layer/I2C/hal_i2c.c: 280:     (PIR2bits.BCLIF = 0);
 16551   006110  96A1               	bcf	161,3,c	;volatile
 16552   006112  0012               	return		;funcret
 16553   006114                     __end_of_MSSP_I2C_BC_ISR:
 16554                           	callstack 0
 16555                           
 16556 ;; *************** function _INT2_ISR *****************
 16557 ;; Defined at:
 16558 ;;		line 511 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
 16559 ;; Parameters:    Size  Location     Type
 16560 ;;		None
 16561 ;; Auto vars:     Size  Location     Type
 16562 ;;		None
 16563 ;; Return value:  Size  Location     Type
 16564 ;;                  1    wreg      void 
 16565 ;; Registers used:
 16566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 16567 ;; Tracked objects:
 16568 ;;		On entry : 0/0
 16569 ;;		On exit  : 0/0
 16570 ;;		Unchanged: 0/0
 16571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16576 ;;Total ram usage:        0 bytes
 16577 ;; Hardware stack levels used: 1
 16578 ;; Hardware stack levels required when called: 2
 16579 ;; This function calls:
 16580 ;;		NULL
 16581 ;;		_int1_interrupt
 16582 ;;		_into_interrupt
 16583 ;; This function is called by:
 16584 ;;		_interrupt_manager
 16585 ;; This function uses a non-reentrant model
 16586 ;;
 16587                           
 16588                           	psect	text98
 16589   005E44                     __ptext98:
 16590                           	callstack 0
 16591   005E44                     _INT2_ISR:
 16592                           	callstack 21
 16593   005E44                     
 16594                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 513:     (INTCON3bits.INT2IF = 0);
 16595   005E44  92F0               	bcf	240,1,c	;volatile
 16596   005E46                     
 16597                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 517:     if(Int2_interrupthandler){
 16598   005E46  0100               	movlb	0	; () banked
 16599   005E48  51AA               	movf	_Int2_interrupthandler& (0+255),w,b
 16600   005E4A  11AB               	iorwf	(_Int2_interrupthandler+1)& (0+255),w,b
 16601   005E4C  B4D8               	btfsc	status,2,c
 16602   005E4E  EF2B  F02F         	goto	i2u1356_41
 16603   005E52  EF2D  F02F         	goto	i2u1356_40
 16604   005E56                     i2u1356_41:
 16605   005E56  EF39  F02F         	goto	i2l1320
 16606   005E5A                     i2u1356_40:
 16607   005E5A                     
 16608                           ; BSR set to: 0
 16609                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 518:         Int2_interrupthandler();
 16610   005E5A  D802               	call	i2u1357_48
 16611   005E5C  EF39  F02F         	goto	i2u1357_49
 16612   005E60                     i2u1357_48:
 16613   005E60  0005               	push	
 16614   005E62  6EFA               	movwf	pclath,c
 16615   005E64  51AA               	movf	_Int2_interrupthandler& (0+255),w,b
 16616   005E66  6EFD               	movwf	tosl,c
 16617   005E68  51AB               	movf	(_Int2_interrupthandler+1)& (0+255),w,b
 16618   005E6A  6EFE               	movwf	tosh,c
 16619   005E6C  6AFF               	clrf	tosu,c
 16620   005E6E  50FA               	movf	pclath,w,c
 16621   005E70  0012               	return		;indir
 16622   005E72                     i2u1357_49:
 16623   005E72                     i2l1320:
 16624   005E72  0012               	return		;funcret
 16625   005E74                     __end_of_INT2_ISR:
 16626                           	callstack 0
 16627                           
 16628 ;; *************** function _INT1_ISR *****************
 16629 ;; Defined at:
 16630 ;;		line 498 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
 16631 ;; Parameters:    Size  Location     Type
 16632 ;;		None
 16633 ;; Auto vars:     Size  Location     Type
 16634 ;;		None
 16635 ;; Return value:  Size  Location     Type
 16636 ;;                  1    wreg      void 
 16637 ;; Registers used:
 16638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 16639 ;; Tracked objects:
 16640 ;;		On entry : 0/0
 16641 ;;		On exit  : 0/0
 16642 ;;		Unchanged: 0/0
 16643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16648 ;;Total ram usage:        0 bytes
 16649 ;; Hardware stack levels used: 1
 16650 ;; Hardware stack levels required when called: 2
 16651 ;; This function calls:
 16652 ;;		NULL
 16653 ;;		_int1_interrupt
 16654 ;;		_into_interrupt
 16655 ;; This function is called by:
 16656 ;;		_interrupt_manager
 16657 ;; This function uses a non-reentrant model
 16658 ;;
 16659                           
 16660                           	psect	text99
 16661   005E74                     __ptext99:
 16662                           	callstack 0
 16663   005E74                     _INT1_ISR:
 16664                           	callstack 21
 16665   005E74                     
 16666                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 500:     (INTCON3bits.INT1IF = 0);
 16667   005E74  90F0               	bcf	240,0,c	;volatile
 16668   005E76                     
 16669                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 504:     if(Int1_interrupthandler){
 16670   005E76  0100               	movlb	0	; () banked
 16671   005E78  51AC               	movf	_Int1_interrupthandler& (0+255),w,b
 16672   005E7A  11AD               	iorwf	(_Int1_interrupthandler+1)& (0+255),w,b
 16673   005E7C  B4D8               	btfsc	status,2,c
 16674   005E7E  EF43  F02F         	goto	i2u1354_41
 16675   005E82  EF45  F02F         	goto	i2u1354_40
 16676   005E86                     i2u1354_41:
 16677   005E86  EF51  F02F         	goto	i2l1315
 16678   005E8A                     i2u1354_40:
 16679   005E8A                     
 16680                           ; BSR set to: 0
 16681                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 505:         Int1_interrupthandler();
 16682   005E8A  D802               	call	i2u1355_48
 16683   005E8C  EF51  F02F         	goto	i2u1355_49
 16684   005E90                     i2u1355_48:
 16685   005E90  0005               	push	
 16686   005E92  6EFA               	movwf	pclath,c
 16687   005E94  51AC               	movf	_Int1_interrupthandler& (0+255),w,b
 16688   005E96  6EFD               	movwf	tosl,c
 16689   005E98  51AD               	movf	(_Int1_interrupthandler+1)& (0+255),w,b
 16690   005E9A  6EFE               	movwf	tosh,c
 16691   005E9C  6AFF               	clrf	tosu,c
 16692   005E9E  50FA               	movf	pclath,w,c
 16693   005EA0  0012               	return		;indir
 16694   005EA2                     i2u1355_49:
 16695   005EA2                     i2l1315:
 16696   005EA2  0012               	return		;funcret
 16697   005EA4                     __end_of_INT1_ISR:
 16698                           	callstack 0
 16699                           
 16700 ;; *************** function _INT0_ISR *****************
 16701 ;; Defined at:
 16702 ;;		line 485 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
 16703 ;; Parameters:    Size  Location     Type
 16704 ;;		None
 16705 ;; Auto vars:     Size  Location     Type
 16706 ;;		None
 16707 ;; Return value:  Size  Location     Type
 16708 ;;                  1    wreg      void 
 16709 ;; Registers used:
 16710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 16711 ;; Tracked objects:
 16712 ;;		On entry : 0/0
 16713 ;;		On exit  : 0/0
 16714 ;;		Unchanged: 0/0
 16715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16720 ;;Total ram usage:        0 bytes
 16721 ;; Hardware stack levels used: 1
 16722 ;; Hardware stack levels required when called: 2
 16723 ;; This function calls:
 16724 ;;		NULL
 16725 ;;		_int1_interrupt
 16726 ;;		_into_interrupt
 16727 ;; This function is called by:
 16728 ;;		_interrupt_manager
 16729 ;; This function uses a non-reentrant model
 16730 ;;
 16731                           
 16732                           	psect	text100
 16733   005EA4                     __ptext100:
 16734                           	callstack 0
 16735   005EA4                     _INT0_ISR:
 16736                           	callstack 21
 16737   005EA4                     
 16738                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 487:     (INTCONbits.INT0IF = 0);
 16739   005EA4  92F2               	bcf	242,1,c	;volatile
 16740   005EA6                     
 16741                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 491:     if(Int0_interrupthandler){
 16742   005EA6  0100               	movlb	0	; () banked
 16743   005EA8  51AE               	movf	_Int0_interrupthandler& (0+255),w,b
 16744   005EAA  11AF               	iorwf	(_Int0_interrupthandler+1)& (0+255),w,b
 16745   005EAC  B4D8               	btfsc	status,2,c
 16746   005EAE  EF5B  F02F         	goto	i2u1352_41
 16747   005EB2  EF5D  F02F         	goto	i2u1352_40
 16748   005EB6                     i2u1352_41:
 16749   005EB6  EF69  F02F         	goto	i2l1310
 16750   005EBA                     i2u1352_40:
 16751   005EBA                     
 16752                           ; BSR set to: 0
 16753                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 492:         Int0_interrupthandler();
 16754   005EBA  D802               	call	i2u1353_48
 16755   005EBC  EF69  F02F         	goto	i2u1353_49
 16756   005EC0                     i2u1353_48:
 16757   005EC0  0005               	push	
 16758   005EC2  6EFA               	movwf	pclath,c
 16759   005EC4  51AE               	movf	_Int0_interrupthandler& (0+255),w,b
 16760   005EC6  6EFD               	movwf	tosl,c
 16761   005EC8  51AF               	movf	(_Int0_interrupthandler+1)& (0+255),w,b
 16762   005ECA  6EFE               	movwf	tosh,c
 16763   005ECC  6AFF               	clrf	tosu,c
 16764   005ECE  50FA               	movf	pclath,w,c
 16765   005ED0  0012               	return		;indir
 16766   005ED2                     i2u1353_49:
 16767   005ED2                     i2l1310:
 16768   005ED2  0012               	return		;funcret
 16769   005ED4                     __end_of_INT0_ISR:
 16770                           	callstack 0
 16771                           
 16772 ;; *************** function _int1_interrupt *****************
 16773 ;; Defined at:
 16774 ;;		line 367 in file "main.c"
 16775 ;; Parameters:    Size  Location     Type
 16776 ;;		None
 16777 ;; Auto vars:     Size  Location     Type
 16778 ;;		None
 16779 ;; Return value:  Size  Location     Type
 16780 ;;                  1    wreg      void 
 16781 ;; Registers used:
 16782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16783 ;; Tracked objects:
 16784 ;;		On entry : 0/0
 16785 ;;		On exit  : 0/0
 16786 ;;		Unchanged: 0/0
 16787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16792 ;;Total ram usage:        0 bytes
 16793 ;; Hardware stack levels used: 1
 16794 ;; Hardware stack levels required when called: 1
 16795 ;; This function calls:
 16796 ;;		_GPIO_pIN_TOGGLE_LOGIC
 16797 ;; This function is called by:
 16798 ;;		_INT0_ISR
 16799 ;;		_INT1_ISR
 16800 ;;		_INT2_ISR
 16801 ;; This function uses a non-reentrant model
 16802 ;;
 16803                           
 16804                           	psect	text101
 16805   0060E8                     __ptext101:
 16806                           	callstack 0
 16807   0060E8                     _int1_interrupt:
 16808                           	callstack 21
 16809   0060E8                     
 16810                           ;main.c: 368:     ret = GPIO_pIN_TOGGLE_LOGIC(&LED_ROOM_1);
 16811   0060E8  0E6F               	movlw	low _LED_ROOM_1
 16812   0060EA  6E01               	movwf	GPIO_pIN_TOGGLE_LOGIC@config_pin^0,c
 16813   0060EC  EC82  F028         	call	_GPIO_pIN_TOGGLE_LOGIC	;wreg free
 16814   0060F0  0100               	movlb	0	; () banked
 16815   0060F2  6FFF               	movwf	_ret& (0+255),b
 16816   0060F4                     
 16817                           ; BSR set to: 0
 16818   0060F4  0012               	return		;funcret
 16819   0060F6                     __end_of_int1_interrupt:
 16820                           	callstack 0
 16821                           
 16822 ;; *************** function _into_interrupt *****************
 16823 ;; Defined at:
 16824 ;;		line 353 in file "main.c"
 16825 ;; Parameters:    Size  Location     Type
 16826 ;;		None
 16827 ;; Auto vars:     Size  Location     Type
 16828 ;;		None
 16829 ;; Return value:  Size  Location     Type
 16830 ;;                  1    wreg      void 
 16831 ;; Registers used:
 16832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16833 ;; Tracked objects:
 16834 ;;		On entry : 0/0
 16835 ;;		On exit  : 0/0
 16836 ;;		Unchanged: 0/0
 16837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16842 ;;Total ram usage:        0 bytes
 16843 ;; Hardware stack levels used: 1
 16844 ;; Hardware stack levels required when called: 1
 16845 ;; This function calls:
 16846 ;;		i2_GPIO_pIN_WRITE_LOGIC
 16847 ;; This function is called by:
 16848 ;;		_INT0_ISR
 16849 ;;		_INT1_ISR
 16850 ;;		_INT2_ISR
 16851 ;; This function uses a non-reentrant model
 16852 ;;
 16853                           
 16854                           	psect	text102
 16855   0060B4                     __ptext102:
 16856                           	callstack 0
 16857   0060B4                     _into_interrupt:
 16858                           	callstack 21
 16859   0060B4                     
 16860                           ;main.c: 354:     ret = GPIO_pIN_WRITE_LOGIC(&leds_1,GPIO_HIGH);
 16861   0060B4  0E6E               	movlw	low _leds_1
 16862   0060B6  6E01               	movwf	i2GPIO_pIN_WRITE_LOGIC@config_pin^0,c
 16863   0060B8  6A02               	clrf	(i2GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
 16864   0060BA  0E01               	movlw	1
 16865   0060BC  6E03               	movwf	i2GPIO_pIN_WRITE_LOGIC@logic^0,c
 16866   0060BE  EC01  F020         	call	i2_GPIO_pIN_WRITE_LOGIC	;wreg free
 16867   0060C2  0100               	movlb	0	; () banked
 16868   0060C4  6FFF               	movwf	_ret& (0+255),b
 16869   0060C6                     
 16870                           ; BSR set to: 0
 16871                           ;main.c: 355:     timer1_counter = 0;
 16872   0060C6  0E00               	movlw	0
 16873   0060C8  6E67               	movwf	_timer1_counter^0,c	;volatile
 16874   0060CA                     
 16875                           ; BSR set to: 0
 16876   0060CA  0012               	return		;funcret
 16877   0060CC                     __end_of_into_interrupt:
 16878                           	callstack 0
 16879                           
 16880 ;; *************** function i2_GPIO_pIN_WRITE_LOGIC *****************
 16881 ;; Defined at:
 16882 ;;		line 50 in file "MKAL_layer/gpio/pro_gpio.c"
 16883 ;; Parameters:    Size  Location     Type
 16884 ;;  config_pin      2    0[COMRAM] PTR const struct .
 16885 ;;		 -> relay_turn_off@pin_config(1), relay_turn_on@pin_config(1), relay_intialize@pin_config(1), led_turn_off@pin_confi
      +g(1), 
 16886 ;;		 -> led_turn_on@pin_config(1), led_intialize@pin_config(1), leds_1(1), LED_ROOM_1(1), 
 16887 ;;		 -> ccp2_(10), ccp1_(10), motor_2(2), motor_1(2), 
 16888 ;;		 -> INT_1(6), INT_0(6), lcd_4bit(6), 
 16889 ;;  logic           1    2[COMRAM] enum E2980
 16890 ;; Auto vars:     Size  Location     Type
 16891 ;;  ret             1    8[COMRAM] unsigned char 
 16892 ;; Return value:  Size  Location     Type
 16893 ;;                  1    wreg      unsigned char 
 16894 ;; Registers used:
 16895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16896 ;; Tracked objects:
 16897 ;;		On entry : 0/0
 16898 ;;		On exit  : 0/0
 16899 ;;		Unchanged: 0/0
 16900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16901 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16902 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16903 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16904 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16905 ;;Total ram usage:        9 bytes
 16906 ;; Hardware stack levels used: 1
 16907 ;; This function calls:
 16908 ;;		Nothing
 16909 ;; This function is called by:
 16910 ;;		_into_interrupt
 16911 ;;		_timer1_interrupt
 16912 ;; This function uses a non-reentrant model
 16913 ;;
 16914                           
 16915                           	psect	text103
 16916   004002                     __ptext103:
 16917                           	callstack 0
 16918   004002                     i2_GPIO_pIN_WRITE_LOGIC:
 16919                           	callstack 21
 16920   004002                     
 16921                           ;MKAL_layer/gpio/pro_gpio.c: 50: Std_ReturnType GPIO_pIN_WRITE_LOGIC(const pin_config_t 
      +                          *config_pin ,logic_t logic);MKAL_layer/gpio/pro_gpio.c: 51: {;MKAL_layer/gpio/pro_gpio.c
      +                          : 52:     Std_ReturnType ret =(Std_ReturnType)0x01;
 16922   004002  0E01               	movlw	1
 16923   004004  6E09               	movwf	i2GPIO_pIN_WRITE_LOGIC@ret^0,c
 16924   004006                     
 16925                           ;MKAL_layer/gpio/pro_gpio.c: 53:     if ((((void*)0) == config_pin) || (config_pin->pin 
      +                          > 8 -1)){
 16926   004006  5001               	movf	i2GPIO_pIN_WRITE_LOGIC@config_pin^0,w,c
 16927   004008  1002               	iorwf	(i2GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,w,c
 16928   00400A  B4D8               	btfsc	status,2,c
 16929   00400C  EF0A  F020         	goto	i2u1258_41
 16930   004010  EF0C  F020         	goto	i2u1258_40
 16931   004014                     i2u1258_41:
 16932   004014  EF1D  F020         	goto	i2l11398
 16933   004018                     i2u1258_40:
 16934   004018  C001  FFD9         	movff	i2GPIO_pIN_WRITE_LOGIC@config_pin,fsr2l
 16935   00401C  C002  FFDA         	movff	i2GPIO_pIN_WRITE_LOGIC@config_pin+1,fsr2h
 16936   004020  30DF               	rrcf	223,w,c
 16937   004022  32E8               	rrcf	wreg,f,c
 16938   004024  32E8               	rrcf	wreg,f,c
 16939   004026  0B07               	andlw	7
 16940   004028  6E04               	movwf	??i2_GPIO_pIN_WRITE_LOGIC^0,c
 16941   00402A  0E07               	movlw	7
 16942   00402C  6404               	cpfsgt	??i2_GPIO_pIN_WRITE_LOGIC^0,c
 16943   00402E  EF1B  F020         	goto	i2u1259_41
 16944   004032  EF1D  F020         	goto	i2u1259_40
 16945   004036                     i2u1259_41:
 16946   004036  EF78  F020         	goto	i2l11406
 16947   00403A                     i2u1259_40:
 16948   00403A                     i2l11398:
 16949                           
 16950                           ;MKAL_layer/gpio/pro_gpio.c: 54:         ret =(Std_ReturnType)0x00;
 16951   00403A  0E00               	movlw	0
 16952   00403C  6E09               	movwf	i2GPIO_pIN_WRITE_LOGIC@ret^0,c
 16953                           
 16954                           ;MKAL_layer/gpio/pro_gpio.c: 55:     }
 16955   00403E  EF8D  F020         	goto	i2l11408
 16956   004042                     i2l11400:
 16957                           
 16958                           ;MKAL_layer/gpio/pro_gpio.c: 59:                 (*lat_regisrers[config_pin->port] &= ~(
      +                          (uint8)1 << config_pin->pin));
 16959   004042  C001  FFD9         	movff	i2GPIO_pIN_WRITE_LOGIC@config_pin,fsr2l
 16960   004046  C002  FFDA         	movff	i2GPIO_pIN_WRITE_LOGIC@config_pin+1,fsr2h
 16961   00404A  30DF               	rrcf	223,w,c
 16962   00404C  32E8               	rrcf	wreg,f,c
 16963   00404E  32E8               	rrcf	wreg,f,c
 16964   004050  0B07               	andlw	7
 16965   004052  6E04               	movwf	??i2_GPIO_pIN_WRITE_LOGIC^0,c
 16966   004054  0E01               	movlw	1
 16967   004056  6E05               	movwf	(??i2_GPIO_pIN_WRITE_LOGIC+1)^0,c
 16968   004058  2A04               	incf	??i2_GPIO_pIN_WRITE_LOGIC^0,f,c
 16969   00405A  EF31  F020         	goto	i2u1260_44
 16970   00405E                     i2u1260_45:
 16971   00405E  90D8               	bcf	status,0,c
 16972   004060  3605               	rlcf	(??i2_GPIO_pIN_WRITE_LOGIC+1)^0,f,c
 16973   004062                     i2u1260_44:
 16974   004062  2E04               	decfsz	??i2_GPIO_pIN_WRITE_LOGIC^0,f,c
 16975   004064  EF2F  F020         	goto	i2u1260_45
 16976   004068  5005               	movf	(??i2_GPIO_pIN_WRITE_LOGIC+1)^0,w,c
 16977   00406A  0AFF               	xorlw	255
 16978   00406C  6E06               	movwf	(??i2_GPIO_pIN_WRITE_LOGIC+2)^0,c
 16979   00406E  C001  FFD9         	movff	i2GPIO_pIN_WRITE_LOGIC@config_pin,fsr2l
 16980   004072  C002  FFDA         	movff	i2GPIO_pIN_WRITE_LOGIC@config_pin+1,fsr2h
 16981   004076  50DF               	movf	223,w,c
 16982   004078  0B07               	andlw	7
 16983   00407A  0D02               	mullw	2
 16984   00407C  50F3               	movf	243,w,c
 16985   00407E  0FD9               	addlw	low _lat_regisrers
 16986   004080  6ED9               	movwf	fsr2l,c
 16987   004082  6ADA               	clrf	fsr2h,c
 16988   004084  CFDE F007          	movff	postinc2,??i2_GPIO_pIN_WRITE_LOGIC+3
 16989   004088  CFDD F008          	movff	postdec2,??i2_GPIO_pIN_WRITE_LOGIC+4
 16990   00408C  C007  FFD9         	movff	??i2_GPIO_pIN_WRITE_LOGIC+3,fsr2l
 16991   004090  C008  FFDA         	movff	??i2_GPIO_pIN_WRITE_LOGIC+4,fsr2h
 16992   004094  5006               	movf	(??i2_GPIO_pIN_WRITE_LOGIC+2)^0,w,c
 16993   004096  16DF               	andwf	indf2,f,c
 16994                           
 16995                           ;MKAL_layer/gpio/pro_gpio.c: 60:                 break;
 16996   004098  EF8D  F020         	goto	i2l11408
 16997   00409C                     i2l11402:
 16998                           
 16999                           ;MKAL_layer/gpio/pro_gpio.c: 62:                 (*lat_regisrers[config_pin->port] |= ((
      +                          uint8)1 << config_pin->pin));
 17000   00409C  C001  FFD9         	movff	i2GPIO_pIN_WRITE_LOGIC@config_pin,fsr2l
 17001   0040A0  C002  FFDA         	movff	i2GPIO_pIN_WRITE_LOGIC@config_pin+1,fsr2h
 17002   0040A4  30DF               	rrcf	223,w,c
 17003   0040A6  32E8               	rrcf	wreg,f,c
 17004   0040A8  32E8               	rrcf	wreg,f,c
 17005   0040AA  0B07               	andlw	7
 17006   0040AC  6E04               	movwf	??i2_GPIO_pIN_WRITE_LOGIC^0,c
 17007   0040AE  0E01               	movlw	1
 17008   0040B0  6E05               	movwf	(??i2_GPIO_pIN_WRITE_LOGIC+1)^0,c
 17009   0040B2  2A04               	incf	??i2_GPIO_pIN_WRITE_LOGIC^0,f,c
 17010   0040B4  EF5E  F020         	goto	i2u1261_44
 17011   0040B8                     i2u1261_45:
 17012   0040B8  90D8               	bcf	status,0,c
 17013   0040BA  3605               	rlcf	(??i2_GPIO_pIN_WRITE_LOGIC+1)^0,f,c
 17014   0040BC                     i2u1261_44:
 17015   0040BC  2E04               	decfsz	??i2_GPIO_pIN_WRITE_LOGIC^0,f,c
 17016   0040BE  EF5C  F020         	goto	i2u1261_45
 17017   0040C2  C001  FFD9         	movff	i2GPIO_pIN_WRITE_LOGIC@config_pin,fsr2l
 17018   0040C6  C002  FFDA         	movff	i2GPIO_pIN_WRITE_LOGIC@config_pin+1,fsr2h
 17019   0040CA  50DF               	movf	223,w,c
 17020   0040CC  0B07               	andlw	7
 17021   0040CE  0D02               	mullw	2
 17022   0040D0  50F3               	movf	243,w,c
 17023   0040D2  0FD9               	addlw	low _lat_regisrers
 17024   0040D4  6ED9               	movwf	fsr2l,c
 17025   0040D6  6ADA               	clrf	fsr2h,c
 17026   0040D8  CFDE F006          	movff	postinc2,??i2_GPIO_pIN_WRITE_LOGIC+2
 17027   0040DC  CFDD F007          	movff	postdec2,??i2_GPIO_pIN_WRITE_LOGIC+3
 17028   0040E0  C006  FFD9         	movff	??i2_GPIO_pIN_WRITE_LOGIC+2,fsr2l
 17029   0040E4  C007  FFDA         	movff	??i2_GPIO_pIN_WRITE_LOGIC+3,fsr2h
 17030   0040E8  5005               	movf	(??i2_GPIO_pIN_WRITE_LOGIC+1)^0,w,c
 17031   0040EA  12DF               	iorwf	indf2,f,c
 17032                           
 17033                           ;MKAL_layer/gpio/pro_gpio.c: 63:                 break;
 17034   0040EC  EF8D  F020         	goto	i2l11408
 17035   0040F0                     i2l11406:
 17036   0040F0  5003               	movf	i2GPIO_pIN_WRITE_LOGIC@logic^0,w,c
 17037   0040F2  6E04               	movwf	??i2_GPIO_pIN_WRITE_LOGIC^0,c
 17038   0040F4  6A05               	clrf	(??i2_GPIO_pIN_WRITE_LOGIC+1)^0,c
 17039                           
 17040                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17041                           ; Switch size 1, requested type "simple"
 17042                           ; Number of cases is 1, Range of values is 0 to 0
 17043                           ; switch strategies available:
 17044                           ; Name         Instructions Cycles
 17045                           ; simple_byte            4     3 (average)
 17046                           ;	Chosen strategy is simple_byte
 17047   0040F6  5005               	movf	(??i2_GPIO_pIN_WRITE_LOGIC+1)^0,w,c
 17048   0040F8  0A00               	xorlw	0	; case 0
 17049   0040FA  B4D8               	btfsc	status,2,c
 17050   0040FC  EF82  F020         	goto	i2l13650
 17051   004100  EF1D  F020         	goto	i2l11398
 17052   004104                     i2l13650:
 17053                           
 17054                           ; Switch size 1, requested type "simple"
 17055                           ; Number of cases is 2, Range of values is 0 to 1
 17056                           ; switch strategies available:
 17057                           ; Name         Instructions Cycles
 17058                           ; simple_byte            7     4 (average)
 17059                           ;	Chosen strategy is simple_byte
 17060   004104  5004               	movf	??i2_GPIO_pIN_WRITE_LOGIC^0,w,c
 17061   004106  0A00               	xorlw	0	; case 0
 17062   004108  B4D8               	btfsc	status,2,c
 17063   00410A  EF21  F020         	goto	i2l11400
 17064   00410E  0A01               	xorlw	1	; case 1
 17065   004110  B4D8               	btfsc	status,2,c
 17066   004112  EF4E  F020         	goto	i2l11402
 17067   004116  EF1D  F020         	goto	i2l11398
 17068   00411A                     i2l11408:
 17069                           
 17070                           ;MKAL_layer/gpio/pro_gpio.c: 67:     return ret;
 17071   00411A  5009               	movf	i2GPIO_pIN_WRITE_LOGIC@ret^0,w,c
 17072   00411C  0012               	return		;funcret
 17073   00411E                     __end_ofi2_GPIO_pIN_WRITE_LOGIC:
 17074                           	callstack 0
 17075                           
 17076 ;; *************** function _GPIO_pIN_TOGGLE_LOGIC *****************
 17077 ;; Defined at:
 17078 ;;		line 101 in file "MKAL_layer/gpio/pro_gpio.c"
 17079 ;; Parameters:    Size  Location     Type
 17080 ;;  config_pin      1    0[COMRAM] PTR const struct .
 17081 ;;		 -> relay_toggle@pin_config(1), led_toggle@pin_config(1), LED_ROOM_1(1), 
 17082 ;; Auto vars:     Size  Location     Type
 17083 ;;  ret             1    5[COMRAM] unsigned char 
 17084 ;; Return value:  Size  Location     Type
 17085 ;;                  1    wreg      unsigned char 
 17086 ;; Registers used:
 17087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17088 ;; Tracked objects:
 17089 ;;		On entry : 0/0
 17090 ;;		On exit  : 0/0
 17091 ;;		Unchanged: 0/0
 17092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17093 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17094 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17095 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17096 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17097 ;;Total ram usage:        6 bytes
 17098 ;; Hardware stack levels used: 1
 17099 ;; This function calls:
 17100 ;;		Nothing
 17101 ;; This function is called by:
 17102 ;;		_int1_interrupt
 17103 ;;		_led_toggle
 17104 ;;		_relay_toggle
 17105 ;; This function uses a non-reentrant model
 17106 ;;
 17107                           
 17108                           	psect	text104
 17109   005104                     __ptext104:
 17110                           	callstack 0
 17111   005104                     _GPIO_pIN_TOGGLE_LOGIC:
 17112                           	callstack 21
 17113   005104                     
 17114                           ;MKAL_layer/gpio/pro_gpio.c: 101: Std_ReturnType GPIO_pIN_TOGGLE_LOGIC(const pin_config_
      +                          t *config_pin);MKAL_layer/gpio/pro_gpio.c: 102: {;MKAL_layer/gpio/pro_gpio.c: 103:     S
      +                          td_ReturnType ret =(Std_ReturnType)0x01;
 17115   005104  0E01               	movlw	1
 17116   005106  6E06               	movwf	GPIO_pIN_TOGGLE_LOGIC@ret^0,c
 17117                           
 17118                           ;MKAL_layer/gpio/pro_gpio.c: 104:     if ((((void*)0) == config_pin) || (config_pin->pin
      +                           > 8 -1)){
 17119   005108  5001               	movf	GPIO_pIN_TOGGLE_LOGIC@config_pin^0,w,c
 17120   00510A  B4D8               	btfsc	status,2,c
 17121   00510C  EF8A  F028         	goto	i2u677_41
 17122   005110  EF8C  F028         	goto	i2u677_40
 17123   005114                     i2u677_41:
 17124   005114  EF9C  F028         	goto	i2l7144
 17125   005118                     i2u677_40:
 17126   005118  5001               	movf	GPIO_pIN_TOGGLE_LOGIC@config_pin^0,w,c
 17127   00511A  6ED9               	movwf	fsr2l,c
 17128   00511C  6ADA               	clrf	fsr2h,c
 17129   00511E  30DF               	rrcf	223,w,c
 17130   005120  32E8               	rrcf	wreg,f,c
 17131   005122  32E8               	rrcf	wreg,f,c
 17132   005124  0B07               	andlw	7
 17133   005126  6E02               	movwf	??_GPIO_pIN_TOGGLE_LOGIC^0,c
 17134   005128  0E07               	movlw	7
 17135   00512A  6402               	cpfsgt	??_GPIO_pIN_TOGGLE_LOGIC^0,c
 17136   00512C  EF9A  F028         	goto	i2u678_41
 17137   005130  EF9C  F028         	goto	i2u678_40
 17138   005134                     i2u678_41:
 17139   005134  EFA0  F028         	goto	i2l7146
 17140   005138                     i2u678_40:
 17141   005138                     i2l7144:
 17142                           
 17143                           ;MKAL_layer/gpio/pro_gpio.c: 105:         ret =(Std_ReturnType)0x00;
 17144   005138  0E00               	movlw	0
 17145   00513A  6E06               	movwf	GPIO_pIN_TOGGLE_LOGIC@ret^0,c
 17146                           
 17147                           ;MKAL_layer/gpio/pro_gpio.c: 106:     }
 17148   00513C  EFC6  F028         	goto	i2l7148
 17149   005140                     i2l7146:
 17150                           
 17151                           ;MKAL_layer/gpio/pro_gpio.c: 108:         (*lat_regisrers[config_pin->port] ^= ((uint8)1
      +                           << config_pin->pin));
 17152   005140  5001               	movf	GPIO_pIN_TOGGLE_LOGIC@config_pin^0,w,c
 17153   005142  6ED9               	movwf	fsr2l,c
 17154   005144  6ADA               	clrf	fsr2h,c
 17155   005146  30DF               	rrcf	223,w,c
 17156   005148  32E8               	rrcf	wreg,f,c
 17157   00514A  32E8               	rrcf	wreg,f,c
 17158   00514C  0B07               	andlw	7
 17159   00514E  6E02               	movwf	??_GPIO_pIN_TOGGLE_LOGIC^0,c
 17160   005150  0E01               	movlw	1
 17161   005152  6E03               	movwf	(??_GPIO_pIN_TOGGLE_LOGIC+1)^0,c
 17162   005154  2A02               	incf	??_GPIO_pIN_TOGGLE_LOGIC^0,f,c
 17163   005156  EFAF  F028         	goto	i2u679_44
 17164   00515A                     i2u679_45:
 17165   00515A  90D8               	bcf	status,0,c
 17166   00515C  3603               	rlcf	(??_GPIO_pIN_TOGGLE_LOGIC+1)^0,f,c
 17167   00515E                     i2u679_44:
 17168   00515E  2E02               	decfsz	??_GPIO_pIN_TOGGLE_LOGIC^0,f,c
 17169   005160  EFAD  F028         	goto	i2u679_45
 17170   005164  5001               	movf	GPIO_pIN_TOGGLE_LOGIC@config_pin^0,w,c
 17171   005166  6ED9               	movwf	fsr2l,c
 17172   005168  6ADA               	clrf	fsr2h,c
 17173   00516A  50DF               	movf	223,w,c
 17174   00516C  0B07               	andlw	7
 17175   00516E  0D02               	mullw	2
 17176   005170  50F3               	movf	243,w,c
 17177   005172  0FD9               	addlw	low _lat_regisrers
 17178   005174  6ED9               	movwf	fsr2l,c
 17179   005176  6ADA               	clrf	fsr2h,c
 17180   005178  CFDE F004          	movff	postinc2,??_GPIO_pIN_TOGGLE_LOGIC+2
 17181   00517C  CFDD F005          	movff	postdec2,??_GPIO_pIN_TOGGLE_LOGIC+3
 17182   005180  C004  FFD9         	movff	??_GPIO_pIN_TOGGLE_LOGIC+2,fsr2l
 17183   005184  C005  FFDA         	movff	??_GPIO_pIN_TOGGLE_LOGIC+3,fsr2h
 17184   005188  5003               	movf	(??_GPIO_pIN_TOGGLE_LOGIC+1)^0,w,c
 17185   00518A  1ADF               	xorwf	indf2,f,c
 17186   00518C                     i2l7148:
 17187                           
 17188                           ;MKAL_layer/gpio/pro_gpio.c: 110:     return ret;
 17189   00518C  5006               	movf	GPIO_pIN_TOGGLE_LOGIC@ret^0,w,c
 17190   00518E  0012               	return		;funcret
 17191   005190                     __end_of_GPIO_pIN_TOGGLE_LOGIC:
 17192                           	callstack 0
 17193                           
 17194 ;; *************** function _CCP2_ISR *****************
 17195 ;; Defined at:
 17196 ;;		line 218 in file "MKAL_layer/CCP2/hal_ccp2.c"
 17197 ;; Parameters:    Size  Location     Type
 17198 ;;		None
 17199 ;; Auto vars:     Size  Location     Type
 17200 ;;		None
 17201 ;; Return value:  Size  Location     Type
 17202 ;;                  1    wreg      void 
 17203 ;; Registers used:
 17204 ;;		None
 17205 ;; Tracked objects:
 17206 ;;		On entry : 0/0
 17207 ;;		On exit  : 0/0
 17208 ;;		Unchanged: 0/0
 17209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17214 ;;Total ram usage:        0 bytes
 17215 ;; Hardware stack levels used: 1
 17216 ;; This function calls:
 17217 ;;		Nothing
 17218 ;; This function is called by:
 17219 ;;		_interrupt_manager
 17220 ;; This function uses a non-reentrant model
 17221 ;;
 17222                           
 17223                           	psect	text105
 17224   006114                     __ptext105:
 17225                           	callstack 0
 17226   006114                     _CCP2_ISR:
 17227                           	callstack 23
 17228   006114                     
 17229                           ;MKAL_layer/CCP2/hal_ccp2.c: 219:     (PIR2bits.CCP2IF = 0);
 17230   006114  90A1               	bcf	161,0,c	;volatile
 17231   006116  0012               	return		;funcret
 17232   006118                     __end_of_CCP2_ISR:
 17233                           	callstack 0
 17234                           
 17235 ;; *************** function _CCP1_ISR *****************
 17236 ;; Defined at:
 17237 ;;		line 218 in file "MKAL_layer/CCP1/hal_ccp1.c"
 17238 ;; Parameters:    Size  Location     Type
 17239 ;;		None
 17240 ;; Auto vars:     Size  Location     Type
 17241 ;;		None
 17242 ;; Return value:  Size  Location     Type
 17243 ;;                  1    wreg      void 
 17244 ;; Registers used:
 17245 ;;		None
 17246 ;; Tracked objects:
 17247 ;;		On entry : 0/0
 17248 ;;		On exit  : 0/0
 17249 ;;		Unchanged: 0/0
 17250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17255 ;;Total ram usage:        0 bytes
 17256 ;; Hardware stack levels used: 1
 17257 ;; This function calls:
 17258 ;;		Nothing
 17259 ;; This function is called by:
 17260 ;;		_interrupt_manager
 17261 ;; This function uses a non-reentrant model
 17262 ;;
 17263                           
 17264                           	psect	text106
 17265   006118                     __ptext106:
 17266                           	callstack 0
 17267   006118                     _CCP1_ISR:
 17268                           	callstack 23
 17269   006118                     
 17270                           ;MKAL_layer/CCP1/hal_ccp1.c: 219:     (PIR1bits.CCP1IF = 0);
 17271   006118  949E               	bcf	158,2,c	;volatile
 17272   00611A  0012               	return		;funcret
 17273   00611C                     __end_of_CCP1_ISR:
 17274                           	callstack 0
 17275                           
 17276 ;; *************** function _ADC_handeler_funvtion *****************
 17277 ;; Defined at:
 17278 ;;		line 222 in file "MKAL_layer/ADC/hal_adc.c"
 17279 ;; Parameters:    Size  Location     Type
 17280 ;;		None
 17281 ;; Auto vars:     Size  Location     Type
 17282 ;;		None
 17283 ;; Return value:  Size  Location     Type
 17284 ;;                  1    wreg      void 
 17285 ;; Registers used:
 17286 ;;		None
 17287 ;; Tracked objects:
 17288 ;;		On entry : 0/0
 17289 ;;		On exit  : 0/0
 17290 ;;		Unchanged: 0/0
 17291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17296 ;;Total ram usage:        0 bytes
 17297 ;; Hardware stack levels used: 1
 17298 ;; This function calls:
 17299 ;;		Nothing
 17300 ;; This function is called by:
 17301 ;;		_interrupt_manager
 17302 ;; This function uses a non-reentrant model
 17303 ;;
 17304                           
 17305                           	psect	text107
 17306   00611C                     __ptext107:
 17307                           	callstack 0
 17308   00611C                     _ADC_handeler_funvtion:
 17309                           	callstack 23
 17310   00611C                     
 17311                           ;MKAL_layer/ADC/hal_adc.c: 224:     (PIR1bits.ADIF = 0);
 17312   00611C  9C9E               	bcf	158,6,c	;volatile
 17313   00611E  0012               	return		;funcret
 17314   006120                     __end_of_ADC_handeler_funvtion:
 17315                           	callstack 0
 17316                           
 17317                           	psect	text108
 17318   000000                     __ptext108:
 17319                           	callstack 0
 17320   000000                     
 17321                           	psect	rparam
 17322   000000                     
 17323                           	psect	temp
 17324   000070                     btemp:
 17325                           	callstack 0
 17326   000070                     	ds	1
 17327   000000                     int$flags	set	btemp
 17328   000000                     wtemp8	set	btemp+1
 17329   000000                     ttemp5	set	btemp+1
 17330   000000                     ttemp6	set	btemp+4
 17331   000000                     ttemp7	set	btemp+8
 17332                           
 17333                           	psect	config
 17334                           
 17335                           ; Padding undefined space
 17336   300000                     	org	3145728
 17337   300000  FF                 	db	255
 17338                           
 17339                           ;Config register CONFIG1H @ 0x300001
 17340                           ;	Oscillator Selection bits
 17341                           ;	OSC = HS, HS oscillator
 17342                           ;	Fail-Safe Clock Monitor Enable bit
 17343                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 17344                           ;	Internal/External Oscillator Switchover bit
 17345                           ;	IESO = OFF, Oscillator Switchover mode disabled
 17346   300001                     	org	3145729
 17347   300001  02                 	db	2
 17348                           
 17349                           ;Config register CONFIG2L @ 0x300002
 17350                           ;	Power-up Timer Enable bit
 17351                           ;	PWRT = OFF, PWRT disabled
 17352                           ;	Brown-out Reset Enable bits
 17353                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 17354                           ;	Brown Out Reset Voltage bits
 17355                           ;	BORV = 1, 
 17356   300002                     	org	3145730
 17357   300002  09                 	db	9
 17358                           
 17359                           ;Config register CONFIG2H @ 0x300003
 17360                           ;	Watchdog Timer Enable bit
 17361                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 17362                           ;	Watchdog Timer Postscale Select bits
 17363                           ;	WDTPS = 32768, 1:32768
 17364   300003                     	org	3145731
 17365   300003  1E                 	db	30
 17366                           
 17367                           ; Padding undefined space
 17368   300004                     	org	3145732
 17369   300004  FF                 	db	255
 17370                           
 17371                           ;Config register CONFIG3H @ 0x300005
 17372                           ;	CCP2 MUX bit
 17373                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 17374                           ;	PORTB A/D Enable bit
 17375                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 17376                           ;	Low-Power Timer1 Oscillator Enable bit
 17377                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 17378                           ;	MCLR Pin Enable bit
 17379                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 17380   300005                     	org	3145733
 17381   300005  81                 	db	129
 17382                           
 17383                           ;Config register CONFIG4L @ 0x300006
 17384                           ;	Stack Full/Underflow Reset Enable bit
 17385                           ;	STVREN = ON, Stack full/underflow will cause Reset
 17386                           ;	Single-Supply ICSP Enable bit
 17387                           ;	LVP = OFF, Single-Supply ICSP disabled
 17388                           ;	Extended Instruction Set Enable bit
 17389                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 17390                           ;	Background Debugger Enable bit
 17391                           ;	DEBUG = 0x1, unprogrammed default
 17392   300006                     	org	3145734
 17393   300006  81                 	db	129
 17394                           
 17395                           ; Padding undefined space
 17396   300007                     	org	3145735
 17397   300007  FF                 	db	255
 17398                           
 17399                           ;Config register CONFIG5L @ 0x300008
 17400                           ;	Code Protection bit
 17401                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 17402                           ;	Code Protection bit
 17403                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 17404                           ;	Code Protection bit
 17405                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 17406                           ;	Code Protection bit
 17407                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 17408   300008                     	org	3145736
 17409   300008  0F                 	db	15
 17410                           
 17411                           ;Config register CONFIG5H @ 0x300009
 17412                           ;	Boot Block Code Protection bit
 17413                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 17414                           ;	Data EEPROM Code Protection bit
 17415                           ;	CPD = OFF, Data EEPROM not code-protected
 17416   300009                     	org	3145737
 17417   300009  C0                 	db	192
 17418                           
 17419                           ;Config register CONFIG6L @ 0x30000A
 17420                           ;	Write Protection bit
 17421                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 17422                           ;	Write Protection bit
 17423                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 17424                           ;	Write Protection bit
 17425                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 17426                           ;	Write Protection bit
 17427                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 17428   30000A                     	org	3145738
 17429   30000A  0F                 	db	15
 17430                           
 17431                           ;Config register CONFIG6H @ 0x30000B
 17432                           ;	Configuration Register Write Protection bit
 17433                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 17434                           ;	Boot Block Write Protection bit
 17435                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 17436                           ;	Data EEPROM Write Protection bit
 17437                           ;	WRTD = OFF, Data EEPROM not write-protected
 17438   30000B                     	org	3145739
 17439   30000B  E0                 	db	224
 17440                           
 17441                           ;Config register CONFIG7L @ 0x30000C
 17442                           ;	Table Read Protection bit
 17443                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 17444                           ;	Table Read Protection bit
 17445                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 17446                           ;	Table Read Protection bit
 17447                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 17448                           ;	Table Read Protection bit
 17449                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 17450   30000C                     	org	3145740
 17451   30000C  0F                 	db	15
 17452                           
 17453                           ;Config register CONFIG7H @ 0x30000D
 17454                           ;	Boot Block Table Read Protection bit
 17455                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 17456   30000D                     	org	3145741
 17457   30000D  40                 	db	64
 17458                           tosu	equ	0xFFF
 17459                           tosh	equ	0xFFE
 17460                           tosl	equ	0xFFD
 17461                           stkptr	equ	0xFFC
 17462                           pclatu	equ	0xFFB
 17463                           pclath	equ	0xFFA
 17464                           pcl	equ	0xFF9
 17465                           tblptru	equ	0xFF8
 17466                           tblptrh	equ	0xFF7
 17467                           tblptrl	equ	0xFF6
 17468                           tablat	equ	0xFF5
 17469                           prodh	equ	0xFF4
 17470                           prodl	equ	0xFF3
 17471                           indf0	equ	0xFEF
 17472                           postinc0	equ	0xFEE
 17473                           postdec0	equ	0xFED
 17474                           preinc0	equ	0xFEC
 17475                           plusw0	equ	0xFEB
 17476                           fsr0h	equ	0xFEA
 17477                           fsr0l	equ	0xFE9
 17478                           wreg	equ	0xFE8
 17479                           indf1	equ	0xFE7
 17480                           postinc1	equ	0xFE6
 17481                           postdec1	equ	0xFE5
 17482                           preinc1	equ	0xFE4
 17483                           plusw1	equ	0xFE3
 17484                           fsr1h	equ	0xFE2
 17485                           fsr1l	equ	0xFE1
 17486                           bsr	equ	0xFE0
 17487                           indf2	equ	0xFDF
 17488                           postinc2	equ	0xFDE
 17489                           postdec2	equ	0xFDD
 17490                           preinc2	equ	0xFDC
 17491                           plusw2	equ	0xFDB
 17492                           fsr2h	equ	0xFDA
 17493                           fsr2l	equ	0xFD9
 17494                           status	equ	0xFD8

Data Sizes:
    Strings     40
    Constant    16
    Data        140
    BSS         149
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     95     111
    BANK0           128      9     128
    BANK1           256     17     172
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    ADC_$ADC_interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_get_conversion_blocking@ADC_conf	PTR const struct . size(2) Largest target is 6
		 -> ADC_(BANK1[6]), 

    ADC_get_conversion_blocking@conversion_status	PTR unsigned short  size(1) Largest target is 2
		 -> ADC_VALUE(BANK0[2]), 

    ADC_INTERRUPTHANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_inti@ADC_conf	PTR const struct . size(2) Largest target is 6
		 -> ADC_(BANK1[6]), 

    ADC_inti@ADC_conf$ADC_interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_ISconversion_done@ADC_conf	PTR const struct . size(2) Largest target is 6
		 -> ADC_(BANK1[6]), 

    ADC_ISconversion_done@conversion_status	PTR unsigned char  size(1) Largest target is 1
		 -> ADC_get_conversion_blocking@l_conversion_status(COMRAM[1]), 

    ADC_ISconversion_result@ADC_conf	PTR const struct . size(2) Largest target is 6
		 -> ADC_(BANK1[6]), 

    ADC_ISconversion_result@ADC_conf$ADC_interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_ISconversion_result@conversion_result	PTR unsigned short  size(1) Largest target is 2
		 -> ADC_VALUE(BANK0[2]), 

    ADC_select_channal@ADC_conf	PTR const struct . size(2) Largest target is 6
		 -> ADC_(BANK1[6]), 

    ADC_start_conversion@ADC_conf	PTR const struct . size(2) Largest target is 6
		 -> ADC_(BANK1[6]), 

    baudrate_calculate@usart	PTR const struct . size(2) Largest target is 18
		 -> usart_1(BANK1[18]), 

    baudrate_calculate@usart$USART_FRAMING_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    baudrate_calculate@usart$USART_OVERRUN_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    baudrate_calculate@usart$USART_RX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> interrupt_usart_rx(), 

    baudrate_calculate@usart$USART_TX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ccp1_$CCP1_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ccp1_init@ccp1_	PTR const struct . size(2) Largest target is 10
		 -> ccp1_(BANK1[10]), 

    ccp1_init@ccp1_$CCP1_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP1_Interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ccp2_$CCP2_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ccp2_init@ccp2_	PTR const struct . size(2) Largest target is 10
		 -> ccp2_(BANK1[10]), 

    ccp2_init@ccp2_$CCP2_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP2_Interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    configure_voltage_ref@ADC_conf	PTR const struct . size(2) Largest target is 6
		 -> ADC_(BANK1[6]), 

    configure_voltage_ref@ADC_conf$ADC_interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    convert_uint8_to_string@str	PTR unsigned char  size(1) Largest target is 1
		 -> addd(COMRAM[1]), 

    ds1307_read_values@_ack	PTR unsigned char  size(1) Largest target is 1
		 -> i2c_ack(COMRAM[1]), 

    ds1307_read_values@i2c_obj	PTR const struct . size(2) Largest target is 15
		 -> mssp_i2c(BANK1[15]), 

    ds1307_read_values@return_data_array	PTR unsigned char  size(1) Largest target is 6
		 -> ds13_data(BANK0[6]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    GPIO_pIN_DIRECTION_INTIALIZE@config_pin	PTR const struct . size(2) Largest target is 10
		 -> ccp1_(BANK1[10]), ccp2_(BANK1[10]), INT_0(BANK1[6]), INT_1(BANK1[6]), 
		 -> lcd_4bit(BANK0[6]), lcd_4bit$lcd_data(BANK0[4]), led_intialize@pin_config(COMRAM[1]), LED_ROOM_1(COMRAM[1]), 
		 -> leds_1(COMRAM[1]), motor_1(BANK0[2]), motor_1$motor_pin_config(BANK0[2]), motor_2(BANK0[2]), 
		 -> motor_2$motor_pin_config(BANK0[2]), relay_intialize@pin_config(COMRAM[1]), 

    GPIO_pIN_INTIALIZE@config_pin	PTR const struct . size(2) Largest target is 10
		 -> ccp1_(BANK1[10]), ccp2_(BANK1[10]), INT_0(BANK1[6]), INT_1(BANK1[6]), 
		 -> lcd_4bit(BANK0[6]), lcd_4bit$lcd_data(BANK0[4]), led_intialize@pin_config(COMRAM[1]), LED_ROOM_1(COMRAM[1]), 
		 -> leds_1(COMRAM[1]), motor_1(BANK0[2]), motor_1$motor_pin_config(BANK0[2]), motor_2(BANK0[2]), 
		 -> motor_2$motor_pin_config(BANK0[2]), relay_intialize@pin_config(COMRAM[1]), 

    GPIO_pIN_TOGGLE_LOGIC@config_pin	PTR const struct . size(1) Largest target is 1
		 -> LED_ROOM_1(COMRAM[1]), led_toggle@pin_config(COMRAM[1]), relay_toggle@pin_config(COMRAM[1]), 

    GPIO_pIN_WRITE_LOGIC@config_pin	PTR const struct . size(2) Largest target is 10
		 -> ccp1_(BANK1[10]), ccp2_(BANK1[10]), INT_0(BANK1[6]), INT_1(BANK1[6]), 
		 -> lcd_4bit(BANK0[6]), lcd_4bit$lcd_data(BANK0[4]), led_intialize@pin_config(COMRAM[1]), LED_ROOM_1(COMRAM[1]), 
		 -> led_turn_off@pin_config(COMRAM[1]), led_turn_on@pin_config(COMRAM[1]), leds_1(COMRAM[1]), motor_1(BANK0[2]), 
		 -> motor_1$motor_pin_config(BANK0[2]), motor_2(BANK0[2]), motor_2$motor_pin_config(BANK0[2]), relay_intialize@pin_config(COMRAM[1]), 
		 -> relay_turn_off@pin_config(COMRAM[1]), relay_turn_on@pin_config(COMRAM[1]), 

    I2C_DefaultInterruptHandle	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Master_Mode_Clock_Configurations@i2c_obj	PTR const struct . size(2) Largest target is 15
		 -> mssp_i2c(BANK1[15]), 

    I2C_Master_Mode_Clock_Configurations@i2c_obj$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Master_Mode_Clock_Configurations@i2c_obj$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Master_Mode_Clock_Configurations@i2c_obj$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Report_Receive_Overflow_InterruptHandle	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Report_Write_Collision_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Slave_Mode_Configurations@i2c_obj	PTR const struct . size(2) Largest target is 15
		 -> mssp_i2c(BANK1[15]), 

    I2C_Slave_Mode_Configurations@i2c_obj$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Slave_Mode_Configurations@i2c_obj$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Slave_Mode_Configurations@i2c_obj$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Int0_interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> int1_interrupt(), into_interrupt(), NULL(), 

    INT0_setinterrupthandler@interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> int1_interrupt(), into_interrupt(), 

    Int1_interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> int1_interrupt(), into_interrupt(), NULL(), 

    INT1_setinterrupthandler@interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> int1_interrupt(), into_interrupt(), 

    Int2_interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> int1_interrupt(), into_interrupt(), NULL(), 

    INT2_setinterrupthandler@interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> int1_interrupt(), into_interrupt(), 

    INT_0$EXT_INTERRUPTHANDLE	PTR FTN()void  size(2) Largest target is 1
		 -> int1_interrupt(), into_interrupt(), 

    INT_1$EXT_INTERRUPTHANDLE	PTR FTN()void  size(2) Largest target is 1
		 -> int1_interrupt(), into_interrupt(), 

    interrupt_intx_clear@INTERRUPT_INTX	PTR const struct . size(2) Largest target is 6
		 -> INT_0(BANK1[6]), INT_1(BANK1[6]), 

    interrupt_intx_clear@INTERRUPT_INTX$EXT_INTERRUPTHANDLE	PTR FTN()void  size(2) Largest target is 1
		 -> int1_interrupt(), into_interrupt(), 

    interrupt_intx_disable@INTERRUPT_INTX	PTR const struct . size(2) Largest target is 6
		 -> INT_0(BANK1[6]), INT_1(BANK1[6]), 

    interrupt_intx_disable@INTERRUPT_INTX$EXT_INTERRUPTHANDLE	PTR FTN()void  size(2) Largest target is 1
		 -> int1_interrupt(), into_interrupt(), 

    interrupt_intx_edge_inti@INTERRUPT_INTX	PTR const struct . size(2) Largest target is 6
		 -> INT_0(BANK1[6]), INT_1(BANK1[6]), 

    interrupt_intx_edge_inti@INTERRUPT_INTX$EXT_INTERRUPTHANDLE	PTR FTN()void  size(2) Largest target is 1
		 -> int1_interrupt(), into_interrupt(), 

    interrupt_intx_enable@INTERRUPT_INTX	PTR const struct . size(2) Largest target is 6
		 -> INT_0(BANK1[6]), INT_1(BANK1[6]), 

    interrupt_intx_enable@INTERRUPT_INTX$EXT_INTERRUPTHANDLE	PTR FTN()void  size(2) Largest target is 1
		 -> int1_interrupt(), into_interrupt(), 

    Interrupt_Intx_Inti@INTERRUPT_INTX	PTR const struct . size(2) Largest target is 6
		 -> INT_0(BANK1[6]), INT_1(BANK1[6]), 

    interrupt_intx_pin_inti@INTERRUPT_INTX	PTR const struct . size(2) Largest target is 6
		 -> INT_0(BANK1[6]), INT_1(BANK1[6]), 

    interrupt_intx_pin_inti@INTERRUPT_INTX$EXT_INTERRUPTHANDLE	PTR FTN()void  size(2) Largest target is 1
		 -> int1_interrupt(), into_interrupt(), 

    interrupt_intx_sethandler@INTERRUPT_INTX	PTR const struct . size(2) Largest target is 6
		 -> INT_0(BANK1[6]), INT_1(BANK1[6]), 

    interrupt_intx_sethandler@INTERRUPT_INTX$EXT_INTERRUPTHANDLE	PTR FTN()void  size(2) Largest target is 1
		 -> int1_interrupt(), into_interrupt(), 

    Interrupt_Pbx_Inti@INTERRUPT_PBX$EXT_INTERRUPTHANDLE_high	PTR FTN()void  size(2) Largest target is 0

    Interrupt_Pbx_Inti@INTERRUPT_PBX$EXT_INTERRUPTHANDLE_low	PTR FTN()void  size(2) Largest target is 0

    lat_regisrers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlllll[1]), LATB(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), 
		 -> LATE(BITBIGSFRllllh[1]), 

    lcd_4bit_intialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    lcd_4bit_send_char_data_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 15
		 -> addd(COMRAM[1]), STR_1(CODE[14]), STR_2(CODE[8]), STR_3(CODE[15]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    memset@dest	PTR void  size(1) Largest target is 1
		 -> addd(COMRAM[1]), 

    memset@p	PTR unsigned char  size(1) Largest target is 1
		 -> addd(COMRAM[1]), 

    morot_stop@motor_pin	PTR const struct . size(1) Largest target is 2
		 -> motor_1(BANK0[2]), motor_2(BANK0[2]), 

    morot_turn_left@motor_pin	PTR const struct . size(1) Largest target is 2
		 -> motor_2(BANK0[2]), 

    morot_turn_right@motor_pin	PTR const struct . size(1) Largest target is 2
		 -> motor_1(BANK0[2]), 

    motor_intialize@motor_pin	PTR const struct . size(1) Largest target is 2
		 -> motor_1(BANK0[2]), motor_2(BANK0[2]), 

    mssp_i2c$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    mssp_i2c$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    mssp_i2c$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    MSSP_I2C_Init@i2c_obj	PTR const struct . size(2) Largest target is 15
		 -> mssp_i2c(BANK1[15]), 

    MSSP_I2C_Init@i2c_obj$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    MSSP_I2C_Init@i2c_obj$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    MSSP_I2C_Init@i2c_obj$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    MSSP_I2C_Interrupt_Configurations@i2c_obj	PTR const struct . size(2) Largest target is 15
		 -> mssp_i2c(BANK1[15]), 

    MSSP_I2C_Interrupt_Configurations@i2c_obj$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    MSSP_I2C_Interrupt_Configurations@i2c_obj$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    MSSP_I2C_Interrupt_Configurations@i2c_obj$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    MSSP_I2C_Master_call_slave@_ack	PTR unsigned char  size(1) Largest target is 1
		 -> i2c_ack(COMRAM[1]), 

    MSSP_I2C_Master_call_slave@i2c_obj	PTR const struct . size(2) Largest target is 15
		 -> mssp_i2c(BANK1[15]), 

    MSSP_I2C_Master_Read_Blocking@i2c_data	PTR unsigned char  size(1) Largest target is 6
		 -> ds13_data(BANK0[6]), tc74(COMRAM[1]), 

    MSSP_I2C_Master_Read_Blocking@i2c_obj	PTR const struct . size(2) Largest target is 15
		 -> mssp_i2c(BANK1[15]), read_byte_24c02c@mssp_i2c(COMRAM[2]), 

    MSSP_I2C_Master_read_data_in_register@_ack	PTR unsigned char  size(1) Largest target is 1
		 -> i2c_ack(COMRAM[1]), 

    MSSP_I2C_Master_read_data_in_register@i2c_obj	PTR const struct . size(2) Largest target is 15
		 -> mssp_i2c(BANK1[15]), 

    MSSP_I2C_Master_read_data_in_register@ret_data	PTR unsigned char  size(1) Largest target is 6
		 -> ds13_data(BANK0[6]), tc74(COMRAM[1]), 

    MSSP_I2C_Master_Send_Repeated_Start@i2c_obj	PTR const struct . size(2) Largest target is 15
		 -> mssp_i2c(BANK1[15]), 

    MSSP_I2C_Master_Send_Start@i2c_obj	PTR const struct . size(2) Largest target is 15
		 -> mssp_i2c(BANK1[15]), read_byte_24c02c@mssp_i2c(COMRAM[2]), write_byte_24c02c@mssp_i2c(COMRAM[2]), 

    MSSP_I2C_Master_Send_Stop@i2c_obj	PTR const struct . size(2) Largest target is 15
		 -> mssp_i2c(BANK1[15]), read_byte_24c02c@mssp_i2c(COMRAM[2]), write_byte_24c02c@mssp_i2c(COMRAM[2]), 

    MSSP_I2C_Master_Write_Blocking@_ack	PTR unsigned char  size(1) Largest target is 1
		 -> i2c_ack(COMRAM[1]), 

    MSSP_I2C_Master_Write_Blocking@i2c_obj	PTR const struct . size(2) Largest target is 15
		 -> mssp_i2c(BANK1[15]), read_byte_24c02c@mssp_i2c(COMRAM[2]), write_byte_24c02c@mssp_i2c(COMRAM[2]), 

    port_regisrers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), 
		 -> PORTE(BITBIGSFRlllll[1]), 

    RB4_interrupthandler_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_interrupthandler_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_interrupthandler_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_interrupthandler_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_interrupthandler_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_interrupthandler_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_interrupthandler_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_interrupthandler_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S129$EXT_INTERRUPTHANDLE	PTR FTN()void  size(2) Largest target is 1
		 -> int1_interrupt(), into_interrupt(), 

    S144$Timer1_handler	PTR FTN()void  size(2) Largest target is 1
		 -> timer1_interrupt(), 

    S188$USART_FRAMING_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    S188$USART_OVERRUN_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    S188$USART_RX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> interrupt_usart_rx(), 

    S188$USART_TX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S208$CCP1_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S222$CCP2_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S232$Timer2_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S3036$EXT_INTERRUPTHANDLE_high	PTR FTN()void  size(2) Largest target is 0

    S3036$EXT_INTERRUPTHANDLE_low	PTR FTN()void  size(2) Largest target is 0

    S3631$Timer0_handler	PTR FTN()void  size(2) Largest target is 0

    S4111$Timer3_handler	PTR FTN()void  size(2) Largest target is 0

    S5177$buffer	PTR unsigned char  size(2) Largest target is 0

    S5177$source	PTR const unsigned char  size(2) Largest target is 0

    S56$ADC_interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S82$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S82$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S82$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    select_result_format@ADC_conf	PTR const struct . size(2) Largest target is 6
		 -> ADC_(BANK1[6]), 

    select_result_format@ADC_conf$ADC_interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    sp__memset	PTR void  size(1) Largest target is 1
		 -> addd(COMRAM[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_4(CODE[3]), STR_5(CODE[3]), STR_6(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 6
		 -> addd(COMRAM[1]), convert_uint16_to_string@Temp_String(COMRAM[6]), 

    tc74_read_value@_ack	PTR unsigned char  size(1) Largest target is 1
		 -> i2c_ack(COMRAM[1]), 

    tc74_read_value@i2c_obj	PTR const struct . size(2) Largest target is 15
		 -> mssp_i2c(BANK1[15]), 

    tc74_read_value@ret_data	PTR unsigned char  size(1) Largest target is 1
		 -> tc74(COMRAM[1]), 

    Timer0_init@Timer0$Timer0_handler	PTR FTN()void  size(2) Largest target is 0

    TIMER0_Interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    timer0_mode@Timer0$Timer0_handler	PTR FTN()void  size(2) Largest target is 0

    timer0_prescaler_cfg@Timer0$Timer0_handler	PTR FTN()void  size(2) Largest target is 0

    timer0_register_size@Timer0$Timer0_handler	PTR FTN()void  size(2) Largest target is 0

    Timer1$Timer1_handler	PTR FTN()void  size(2) Largest target is 1
		 -> timer1_interrupt(), 

    Timer1_init@Timer1	PTR const struct . size(2) Largest target is 5
		 -> Timer1(BANK1[5]), 

    Timer1_init@Timer1$Timer1_handler	PTR FTN()void  size(2) Largest target is 1
		 -> timer1_interrupt(), 

    TIMER1_Interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer1_interrupt(), NULL(), 

    timer1_mode_cfg@Timer1	PTR const struct . size(2) Largest target is 5
		 -> Timer1(BANK1[5]), 

    timer1_mode_cfg@Timer1$Timer1_handler	PTR FTN()void  size(2) Largest target is 1
		 -> timer1_interrupt(), 

    timer1_osc_cfg@Timer1	PTR const struct . size(2) Largest target is 5
		 -> Timer1(BANK1[5]), 

    timer1_osc_cfg@Timer1$Timer1_handler	PTR FTN()void  size(2) Largest target is 1
		 -> timer1_interrupt(), 

    timer1_reg_bit_cfg@Timer1	PTR const struct . size(2) Largest target is 5
		 -> Timer1(BANK1[5]), 

    timer1_reg_bit_cfg@Timer1$Timer1_handler	PTR FTN()void  size(2) Largest target is 1
		 -> timer1_interrupt(), 

    Timer2$Timer2_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer2_init@Timer2	PTR const struct . size(2) Largest target is 4
		 -> Timer2(BANK1[4]), 

    Timer2_init@Timer2$Timer2_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    TIMER2_Interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer3_init@Timer3$Timer3_handler	PTR FTN()void  size(2) Largest target is 0

    TIMER3_Interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    timer3_mode_cfg@Timer3$Timer3_handler	PTR FTN()void  size(2) Largest target is 0

    timer3_reg_bit_cfg@Timer3$Timer3_handler	PTR FTN()void  size(2) Largest target is 0

    tris_regisrers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRlllll[1]), TRISB(ABS[1]), TRISC(ABS[1]), TRISD(ABS[1]), 
		 -> TRISE(ABS[1]), 

    usart_1$USART_FRAMING_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    usart_1$USART_OVERRUN_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    usart_1$USART_RX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> interrupt_usart_rx(), 

    usart_1$USART_TX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    usart_ASYNC_init@usart	PTR const struct . size(2) Largest target is 18
		 -> usart_1(BANK1[18]), 

    usart_ASYNC_read_byte_blocking@data	PTR unsigned char  size(1) Largest target is 7
		 -> usart_data(BANK0[7]), 

    usart_async_rx_int@usart	PTR const struct . size(2) Largest target is 18
		 -> usart_1(BANK1[18]), 

    usart_async_rx_int@usart$USART_FRAMING_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    usart_async_rx_int@usart$USART_OVERRUN_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    usart_async_rx_int@usart$USART_RX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> interrupt_usart_rx(), 

    usart_async_rx_int@usart$USART_TX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    usart_async_tx_int@usart	PTR const struct . size(2) Largest target is 18
		 -> usart_1(BANK1[18]), 

    usart_async_tx_int@usart$USART_FRAMING_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    usart_async_tx_int@usart$USART_OVERRUN_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    usart_async_tx_int@usart$USART_RX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> interrupt_usart_rx(), 

    usart_async_tx_int@usart$USART_TX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    USART_FRAMERROR_Interrupthandler	PTR FTN()void  size(2) Largest target is 2
		 -> usart_1$USART_FRAMING_ERROR_INTERRUPT_HANDLER(BANK1[2]), NULL(), 

    USART_OVERRUN_Interrupthandler	PTR FTN()void  size(2) Largest target is 2
		 -> usart_1$USART_OVERRUN_ERROR_INTERRUPT_HANDLER(BANK1[2]), NULL(), 

    USART_RX_Interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> interrupt_usart_rx(), NULL(), 

    USART_TX_Interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_4(CODE[3]), STR_5(CODE[3]), STR_6(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_4(CODE[3]), STR_5(CODE[3]), STR_6(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_4(CODE[3]), STR_5(CODE[3]), STR_6(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _transfer_0x_d->___awdiv
    _tc74_read_value->_MSSP_I2C_Master_read_data_in_register
    _morot_turn_right->_GPIO_pIN_WRITE_LOGIC
    _morot_turn_left->_GPIO_pIN_WRITE_LOGIC
    _morot_stop->_GPIO_pIN_WRITE_LOGIC
    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor
    _lcd_4bit_send_char_data_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _motor_intialize->_GPIO_pIN_INTIALIZE
    _lcd_4bit_intialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_GPIO_pIN_WRITE_LOGIC
    _lcd_4bit_send_enable_signal->_GPIO_pIN_WRITE_LOGIC
    _ccp2_init->___lldiv
    _ccp1_init->___lldiv
    ___lldiv->___lmul
    _Timer1_init->_timer1_mode_cfg
    _Timer1_init->_timer1_osc_cfg
    _Timer1_init->_timer1_reg_bit_cfg
    _Interrupt_Intx_Inti->_interrupt_intx_pin_inti
    _interrupt_intx_sethandler->_INT0_setinterrupthandler
    _interrupt_intx_sethandler->_INT1_setinterrupthandler
    _interrupt_intx_sethandler->_INT2_setinterrupthandler
    _interrupt_intx_pin_inti->_GPIO_pIN_INTIALIZE
    _GPIO_pIN_INTIALIZE->_GPIO_pIN_DIRECTION_INTIALIZE
    _GPIO_pIN_INTIALIZE->_GPIO_pIN_WRITE_LOGIC
    _ADC_inti->_adc_channel_port_confige
    _ds1307_read_values->_MSSP_I2C_Master_read_data_in_register
    _MSSP_I2C_Master_read_data_in_register->_MSSP_I2C_Master_Read_Blocking
    _MSSP_I2C_Master_read_data_in_register->_MSSP_I2C_Master_Write_Blocking
    _convert_uint8_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _ccp2_pwm_set_duty->___flmul
    _ccp1_pwm_set_duty->___flmul
    ___fltol->___flmul
    ___flmul->___fladd
    ___fldiv->___xxtofl
    ___fladd->___fldiv
    _MSSP_I2C_Master_call_slave->_MSSP_I2C_Master_Write_Blocking
    _ADC_get_conversion_blocking->_ADC_select_channal
    _ADC_select_channal->_adc_channel_port_confige

Critical Paths under _interrupt_manager in COMRAM

    _USART_RX_ISR->_interrupt_usart_rx
    _interrupt_usart_rx->_usart_ASYNC_read_byte_blocking
    _timer1_interrupt->i2_GPIO_pIN_WRITE_LOGIC
    _into_interrupt->i2_GPIO_pIN_WRITE_LOGIC
    _int1_interrupt->_GPIO_pIN_TOGGLE_LOGIC

Critical Paths under _main in BANK0

    _intitialized_functions->_usart_ASYNC_init
    _baudrate_calculate->___fltol
    _MSSP_I2C_Init->_I2C_Master_Mode_Clock_Configurations
    _I2C_Master_Mode_Clock_Configurations->___fltol
    _ccp2_pwm_set_duty->___fltol
    _ccp1_pwm_set_duty->___fltol

Critical Paths under _interrupt_manager in BANK0

    None.

Critical Paths under _main in BANK1

    _intitialized_functions->_usart_ASYNC_init
    _usart_ASYNC_init->_baudrate_calculate
    _baudrate_calculate->___fltol
    _MSSP_I2C_Init->_I2C_Master_Mode_Clock_Configurations
    _I2C_Master_Mode_Clock_Configurations->___fltol
    _ccp2_pwm_set_duty->___fltol
    _ccp1_pwm_set_duty->___fltol

Critical Paths under _interrupt_manager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_manager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_manager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupt_manager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupt_manager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupt_manager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupt_manager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interrupt_manager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interrupt_manager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interrupt_manager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interrupt_manager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interrupt_manager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interrupt_manager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interrupt_manager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interrupt_manager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  296679
                                             16 BANK1      1     1      0
        _ADC_get_conversion_blocking
               _GPIO_pIN_WRITE_LOGIC
         _MSSP_I2C_Master_call_slave
                  _ccp1_pwm_set_duty
                  _ccp2_pwm_set_duty
            _convert_uint8_to_string
                 _ds1307_read_values
             _intitialized_functions
        _lcd_4bit_send_char_data_pos
           _lcd_4bit_send_string_pos
                         _morot_stop
                    _morot_turn_left
                   _morot_turn_right
                    _tc74_read_value
                      _transfer_0x_d
    _usart_ASYNC_write_byte_blocking
 ---------------------------------------------------------------------------------
 (1) _usart_ASYNC_write_byte_blocking                      2     2      0      68
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _transfer_0x_d                                        3     3      0    1796
                                             23 COMRAM     3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _tc74_read_value                                      6     0      6    9606
                                             26 COMRAM     6     0      6
         _MSSP_I2C_Master_Send_Start
          _MSSP_I2C_Master_Send_Stop
_MSSP_I2C_Master_read_data_in_regist
 ---------------------------------------------------------------------------------
 (1) _morot_turn_right                                     3     2      1    6913
                                             24 COMRAM     3     2      1
               _GPIO_pIN_WRITE_LOGIC
 ---------------------------------------------------------------------------------
 (1) _morot_turn_left                                      3     2      1    6913
                                             24 COMRAM     3     2      1
               _GPIO_pIN_WRITE_LOGIC
 ---------------------------------------------------------------------------------
 (1) _morot_stop                                           3     2      1    6733
                                             24 COMRAM     3     2      1
               _GPIO_pIN_WRITE_LOGIC
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             6     1      5   48945
                                             37 COMRAM     6     1      5
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_char_data_pos                          5     1      4   47471
                                             37 COMRAM     5     1      4
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  6     3      3   24415
                                             31 COMRAM     6     3      3
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              3     1      2   21747
                                             28 COMRAM     3     1      2
               _GPIO_pIN_WRITE_LOGIC
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _intitialized_functions                               0     0      0  108517
                           _ADC_inti
                 _GPIO_pIN_INTIALIZE
                _Interrupt_Intx_Inti
                      _MSSP_I2C_Init
                        _Timer1_init
                        _Timer2_init
                          _ccp1_init
                          _ccp2_init
                 _lcd_4bit_intialize
                    _motor_intialize
                   _usart_ASYNC_init
 ---------------------------------------------------------------------------------
 (2) _usart_ASYNC_init                                     3     1      2   11702
                                              8 BANK0      1     1      0
                                             14 BANK1      2     0      2
                 _baudrate_calculate
                 _usart_async_rx_int
                 _usart_async_tx_int
 ---------------------------------------------------------------------------------
 (3) _usart_async_tx_int                                   2     0      2     307
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _usart_async_rx_int                                   2     0      2     369
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _baudrate_calculate                                  12    10      2   10772
                                              2 BANK1     12    10      2
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _motor_intialize                                      3     2      1    9348
                                             28 COMRAM     3     2      1
                 _GPIO_pIN_INTIALIZE
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_intialize                                   4     3      1   33247
                                             31 COMRAM     4     3      1
                 _GPIO_pIN_INTIALIZE
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                3     1      2   23547
                                             28 COMRAM     3     1      2
               _GPIO_pIN_WRITE_LOGIC
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       4     2      2    7431
                                             24 COMRAM     4     2      2
               _GPIO_pIN_WRITE_LOGIC
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable_signal                          3     2      1    6879
                                             24 COMRAM     3     2      1
               _GPIO_pIN_WRITE_LOGIC
 ---------------------------------------------------------------------------------
 (2) _ccp2_init                                            7     5      2   10272
                                             40 COMRAM     7     5      2
                 _GPIO_pIN_INTIALIZE
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _ccp1_init                                            7     5      2   10272
                                             40 COMRAM     7     5      2
                 _GPIO_pIN_INTIALIZE
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     416
                                             15 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     381
                                             27 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _Timer2_init                                          4     2      2     316
                                             15 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _Timer1_init                                          5     3      2     927
                                             17 COMRAM     5     3      2
                    _timer1_mode_cfg
                     _timer1_osc_cfg
                 _timer1_reg_bit_cfg
 ---------------------------------------------------------------------------------
 (3) _timer1_reg_bit_cfg                                   2     0      2     152
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _timer1_osc_cfg                                       2     0      2     152
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _timer1_mode_cfg                                      2     0      2     214
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _MSSP_I2C_Init                                        3     1      2   11167
                                              4 BANK1      3     1      2
_I2C_Master_Mode_Clock_Configuration
      _I2C_Slave_Mode_Configurations
  _MSSP_I2C_Interrupt_Configurations
             _MSSP_I2C_Mode_GPIO_CFG
 ---------------------------------------------------------------------------------
 (3) _MSSP_I2C_Mode_GPIO_CFG                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MSSP_I2C_Interrupt_Configurations                    2     0      2     183
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _I2C_Slave_Mode_Configurations                        3     1      2     121
                                             15 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Mode_Clock_Configurations                 3     1      2   10330
                                              8 BANK0      1     1      0
                                              2 BANK1      2     0      2
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _Interrupt_Intx_Inti                                  3     1      2   11521
                                             31 COMRAM     3     1      2
               _interrupt_intx_clear
             _interrupt_intx_disable
           _interrupt_intx_edge_inti
              _interrupt_intx_enable
            _interrupt_intx_pin_inti
          _interrupt_intx_sethandler
 ---------------------------------------------------------------------------------
 (3) _interrupt_intx_sethandler                            5     3      2     765
                                             17 COMRAM     5     3      2
           _INT0_setinterrupthandler
           _INT1_setinterrupthandler
           _INT2_setinterrupthandler
 ---------------------------------------------------------------------------------
 (4) _INT2_setinterrupthandler                             3     1      2     158
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT1_setinterrupthandler                             3     1      2     158
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT0_setinterrupthandler                             3     1      2     158
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _interrupt_intx_pin_inti                              3     1      2    9224
                                             28 COMRAM     3     1      2
                 _GPIO_pIN_INTIALIZE
 ---------------------------------------------------------------------------------
 (3) _GPIO_pIN_INTIALIZE                                   4     2      2    9032
                                             24 COMRAM     4     2      2
       _GPIO_pIN_DIRECTION_INTIALIZE
               _GPIO_pIN_WRITE_LOGIC
 ---------------------------------------------------------------------------------
 (2) _GPIO_pIN_WRITE_LOGIC                                 9     6      3    6417
                                             15 COMRAM     9     6      3
 ---------------------------------------------------------------------------------
 (4) _GPIO_pIN_DIRECTION_INTIALIZE                         9     7      2     617
                                             15 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (3) _interrupt_intx_enable                                5     3      2     201
                                             15 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _interrupt_intx_edge_inti                             5     3      2     387
                                             15 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _interrupt_intx_disable                               5     3      2     291
                                             15 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _interrupt_intx_clear                                 5     3      2     201
                                             15 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ADC_inti                                             4     2      2     713
                                             18 COMRAM     4     2      2
           _adc_channel_port_confige
              _configure_voltage_ref
               _select_result_format
 ---------------------------------------------------------------------------------
 (3) _select_result_format                                 2     0      2     152
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _configure_voltage_ref                                2     0      2     152
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ds1307_read_values                                   5     0      5   10790
                                             26 COMRAM     5     0      5
         _MSSP_I2C_Master_Send_Start
          _MSSP_I2C_Master_Send_Stop
_MSSP_I2C_Master_read_data_in_regist
 ---------------------------------------------------------------------------------
 (2) _MSSP_I2C_Master_read_data_in_register                8     2      6    7039
                                             19 COMRAM     7     1      6
      _MSSP_I2C_Master_Read_Blocking
_MSSP_I2C_Master_Send_Repeated_Start
     _MSSP_I2C_Master_Write_Blocking
 ---------------------------------------------------------------------------------
 (3) _MSSP_I2C_Master_Send_Repeated_Start                  3     1      2     137
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _MSSP_I2C_Master_Read_Blocking                        5     1      4     711
                                             15 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _convert_uint8_to_string                              3     2      1    6545
                                             59 COMRAM     3     2      1
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    5077
                                             40 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    4231
                                             36 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           11     8      3    3770
                                             25 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     957
                                             15 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             21 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     793
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     805
                                             15 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     1      5     947
                                             15 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (1) _ccp2_pwm_set_duty                                   11    11      0   13411
                                              2 BANK1     10    10      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _ccp1_pwm_set_duty                                   11    11      0   13411
                                              2 BANK1     10    10      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1256
                                             15 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     757
                                              0 BANK0      8     4      4
                                              0 BANK1      2     2      0
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    3053
                                             70 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    3743
                                             29 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    4422
                                             54 COMRAM    16     8      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _MSSP_I2C_Master_call_slave                           5     0      5    6909
                                             19 COMRAM     5     0      5
         _MSSP_I2C_Master_Send_Start
          _MSSP_I2C_Master_Send_Stop
     _MSSP_I2C_Master_Write_Blocking
 ---------------------------------------------------------------------------------
 (3) _MSSP_I2C_Master_Write_Blocking                       5     1      4    2601
                                             15 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _MSSP_I2C_Master_Send_Stop                            3     1      2     950
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _MSSP_I2C_Master_Send_Start                           3     1      2     950
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC_get_conversion_blocking                          6     2      4    2104
                                             23 COMRAM     6     2      4
              _ADC_ISconversion_done
            _ADC_ISconversion_result
                 _ADC_select_channal
               _ADC_start_conversion
 ---------------------------------------------------------------------------------
 (2) _ADC_start_conversion                                 3     1      2     251
                                             15 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ADC_select_channal                                   5     2      3     524
                                             18 COMRAM     5     2      3
           _adc_channel_port_confige
 ---------------------------------------------------------------------------------
 (3) _adc_channel_port_confige                             3     3      0      31
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ADC_ISconversion_result                              7     4      3     437
                                             15 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (2) _ADC_ISconversion_done                                4     1      3     313
                                             15 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _interrupt_manager                                    6     6      0    2907
                                              9 COMRAM     6     6      0
              _ADC_handeler_funvtion
                           _CCP1_ISR
                           _CCP2_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                    _MSSP_I2C_BC_ISR
                       _MSSP_I2C_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                         _TIMER0_ISR
                         _TIMER1_ISR
                         _TIMER2_ISR
                         _TIMER3_ISR
                       _USART_RX_ISR
                       _USART_TX_ISR
 ---------------------------------------------------------------------------------
 (8) _USART_TX_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _USART_RX_ISR                                         0     0      0     123
                                NULL *
                 _interrupt_usart_rx *
 ---------------------------------------------------------------------------------
 (9) _interrupt_usart_rx                                   1     1      0     123
                                              1 COMRAM     1     1      0
     _usart_ASYNC_read_byte_blocking
 ---------------------------------------------------------------------------------
 (10) _usart_ASYNC_read_byte_blocking                      2     1      1     122
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (8) _TIMER3_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TIMER2_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TIMER1_ISR                                           0     0      0     397
                                NULL *
                   _timer1_interrupt *
 ---------------------------------------------------------------------------------
 (9) _timer1_interrupt                                     0     0      0     397
             i2_GPIO_pIN_WRITE_LOGIC
 ---------------------------------------------------------------------------------
 (8) _TIMER0_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _RB7_ISR                                              1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB6_ISR                                              1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB5_ISR                                              1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB4_ISR                                              1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _MSSP_I2C_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _MSSP_I2C_BC_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT2_ISR                                             0     0      0     737
                                NULL *
                     _int1_interrupt *
                     _into_interrupt *
 ---------------------------------------------------------------------------------
 (8) _INT1_ISR                                             0     0      0     737
                                NULL *
                     _int1_interrupt *
                     _into_interrupt *
 ---------------------------------------------------------------------------------
 (8) _INT0_ISR                                             0     0      0     737
                                NULL *
                     _int1_interrupt *
                     _into_interrupt *
 ---------------------------------------------------------------------------------
 (9) _into_interrupt                                       0     0      0     397
             i2_GPIO_pIN_WRITE_LOGIC
 ---------------------------------------------------------------------------------
 (10) i2_GPIO_pIN_WRITE_LOGIC                              9     6      3     397
                                              0 COMRAM     9     6      3
 ---------------------------------------------------------------------------------
 (9) _int1_interrupt                                       0     0      0     340
              _GPIO_pIN_TOGGLE_LOGIC
 ---------------------------------------------------------------------------------
 (10) _GPIO_pIN_TOGGLE_LOGIC                               6     5      1     340
                                              0 COMRAM     6     5      1
 ---------------------------------------------------------------------------------
 (9) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _CCP2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _CCP1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ADC_handeler_funvtion                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_get_conversion_blocking
     _ADC_ISconversion_done
     _ADC_ISconversion_result
     _ADC_select_channal
       _adc_channel_port_confige
     _ADC_start_conversion
   _GPIO_pIN_WRITE_LOGIC
   _MSSP_I2C_Master_call_slave
     _MSSP_I2C_Master_Send_Start
     _MSSP_I2C_Master_Send_Stop
     _MSSP_I2C_Master_Write_Blocking
   _ccp1_pwm_set_duty
     ___fladd
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___flmul
       ___fladd (ARG)
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _ccp2_pwm_set_duty
     ___fladd
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
   _convert_uint8_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _ds1307_read_values
     _MSSP_I2C_Master_Send_Start
     _MSSP_I2C_Master_Send_Stop
     _MSSP_I2C_Master_read_data_in_register
       _MSSP_I2C_Master_Read_Blocking
       _MSSP_I2C_Master_Send_Repeated_Start
       _MSSP_I2C_Master_Write_Blocking
   _intitialized_functions
     _ADC_inti
       _adc_channel_port_confige
       _configure_voltage_ref
       _select_result_format
     _GPIO_pIN_INTIALIZE
       _GPIO_pIN_DIRECTION_INTIALIZE
       _GPIO_pIN_WRITE_LOGIC
     _Interrupt_Intx_Inti
       _interrupt_intx_clear
       _interrupt_intx_disable
       _interrupt_intx_edge_inti
       _interrupt_intx_enable
       _interrupt_intx_pin_inti
         _GPIO_pIN_INTIALIZE
       _interrupt_intx_sethandler
         _INT0_setinterrupthandler
         _INT1_setinterrupthandler
         _INT2_setinterrupthandler
     _MSSP_I2C_Init
       _I2C_Master_Mode_Clock_Configurations
         ___fladd
         ___fldiv
         ___fltol
         ___xxtofl
       _I2C_Slave_Mode_Configurations
       _MSSP_I2C_Interrupt_Configurations
       _MSSP_I2C_Mode_GPIO_CFG
     _Timer1_init
       _timer1_mode_cfg
       _timer1_osc_cfg
       _timer1_reg_bit_cfg
     _Timer2_init
     _ccp1_init
       _GPIO_pIN_INTIALIZE
       ___lldiv
         ___lmul (ARG)
       ___lmul
     _ccp2_init
       _GPIO_pIN_INTIALIZE
       ___lldiv
       ___lmul
     _lcd_4bit_intialize
       _GPIO_pIN_INTIALIZE
       _lcd_4bit_send_command
         _GPIO_pIN_WRITE_LOGIC
         _lcd_4bit_send_enable_signal
           _GPIO_pIN_WRITE_LOGIC
         _lcd_send_4bits
           _GPIO_pIN_WRITE_LOGIC
     _motor_intialize
       _GPIO_pIN_INTIALIZE
     _usart_ASYNC_init
       _baudrate_calculate
         ___fladd
         ___fldiv
         ___fltol
         ___xxtofl
       _usart_async_rx_int
       _usart_async_tx_int
   _lcd_4bit_send_char_data_pos
     _lcd_4bit_send_char_data
       _GPIO_pIN_WRITE_LOGIC
       _lcd_4bit_send_enable_signal
       _lcd_send_4bits
     _lcd_4bit_set_cursor
       _lcd_4bit_send_command
   _lcd_4bit_send_string_pos
     _lcd_4bit_send_char_data
     _lcd_4bit_set_cursor
   _morot_stop
     _GPIO_pIN_WRITE_LOGIC
   _morot_turn_left
     _GPIO_pIN_WRITE_LOGIC
   _morot_turn_right
     _GPIO_pIN_WRITE_LOGIC
   _tc74_read_value
     _MSSP_I2C_Master_Send_Start
     _MSSP_I2C_Master_Send_Stop
     _MSSP_I2C_Master_read_data_in_register
   _transfer_0x_d
     ___awdiv
     ___awmod
   _usart_ASYNC_write_byte_blocking

 _interrupt_manager (ROOT)
   _ADC_handeler_funvtion
   _CCP1_ISR
   _CCP2_ISR
   _INT0_ISR
     NULL(Fake) *
     _int1_interrupt *
       _GPIO_pIN_TOGGLE_LOGIC
     _into_interrupt *
       i2_GPIO_pIN_WRITE_LOGIC
   _INT1_ISR
     NULL(Fake) *
     _int1_interrupt *
     _into_interrupt *
   _INT2_ISR
     NULL(Fake) *
     _int1_interrupt *
     _into_interrupt *
   _MSSP_I2C_BC_ISR
   _MSSP_I2C_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _TIMER0_ISR
   _TIMER1_ISR
     NULL(Fake) *
     _timer1_interrupt *
       i2_GPIO_pIN_WRITE_LOGIC
   _TIMER2_ISR
   _TIMER3_ISR
   _USART_RX_ISR
     NULL(Fake) *
     _interrupt_usart_rx *
       _usart_ASYNC_read_byte_blocking
   _USART_TX_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     11      AC       7       67.2%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      9      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     5F      6F       1       88.1%
BITBIGSFRhhlhhl     18      0       0      38        0.0%
BITBIGSFRhhh         D      0       0      37        0.0%
BITBIGSFRlllhh       6      0       0      46        0.0%
BITBIGSFRhhlhhl      5      0       0      39        0.0%
BITBIGSFRllhhhh      4      0       0      43        0.0%
BITBIGSFRllllh       4      0       0      47        0.0%
BITBIGSFRlllll       4      0       0      48        0.0%
BITBIGSFRllhhll      3      0       0      44        0.0%
BITBIGSFRllhhhh      1      0       0      42        0.0%
BITBIGSFRllhl        1      0       0      45        0.0%
BITBIGSFRlh          1      0       0      41        0.0%
BITBIGSFRhll         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     19B      12        0.0%
DATA                 0      0     19B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Mar 28 02:44:39 2024

               __end_of_INT1_setinterrupthandler 5FBC             ADC_select_channal@ADC_CHANNAL_SELECT 0015  
                                   ___fldiv@aexp 0036                                     ___fldiv@bexp 0035  
                                   ___fldiv@sign 002E                                  ?_lcd_send_4bits 0019  
                                    _SSPSTATbits 0FC7                                     ___awdiv@sign 0015  
                          _CCP2_Interrupthandler 00B6                                              l221 46F2  
                                            l160 1502                                              l138 1336  
                                            l171 15E8                                              l324 4544  
                                            l413 584E                                              l149 141C  
                                            l334 5750                                              l238 5972  
                                            l182 16CE                                              l431 54E2  
                       ??_intitialized_functions 0060                                              l329 57AE  
                                            l434 5C32                                              l339 5BBC  
                                            l355 4FE0                                              l471 59B6  
                                            l457 4F4A                                              l481 5A3E  
                                            l466 5BF8                                              l618 5D4A  
                                            l731 592A                                              l651 4968  
                                            l492 3C9A                                              l724 5A80  
                                            l476 59FA                                              l733 592E  
                                            l653 4A0C                                              l726 5A82  
                                            l719 461C                                              l663 5C6C  
                                            l911 3B56                                              l666 5F72  
                                            l930 4000                                              l675 589A  
                                            l667 5F78                                              l827 4236  
                                            l819 3754                                              l668 5F7A  
                                            l693 5370                                              l686 4ACA  
                                            l775 4350                                              l767 38BC  
                                            l696 538E                                              l937 55BC  
                                            _PR2 0FCB                                ??_motor_intialize 001E  
                           ?_Interrupt_Intx_Inti 0020                                              _abs 5D80  
                                            _ret 00FF              __end_of_lcd_4bit_send_enable_signal 5C34  
                    _lcd_4bit_send_enable_signal 5BFA       MSSP_I2C_Master_Send_Repeated_Start@i2c_obj 0010  
                                   ___awmod@sign 0015                                              prod 0FF3  
                                            tosl 0FFD                                              wreg 0FE8  
        __end_of_usart_ASYNC_write_byte_blocking 604C                ??_usart_ASYNC_write_byte_blocking 0010  
               ?_usart_ASYNC_write_byte_blocking 0001                  _usart_ASYNC_write_byte_blocking 6032  
                          _Int2_interrupthandler 00AA                                     ___flmul@aexp 0054  
                                   ___flmul@bexp 0059                      lcd_send_4bits@_data_command 001A  
                                   ___flmul@sign 0053                                     ___flmul@temp 005E  
                                   ___flmul@prod 005A                         ??_MSSP_I2C_Mode_GPIO_CFG 0010  
                ??_MSSP_I2C_Master_Read_Blocking 0014                                  __end_of_RB4_ISR 60B4  
                                __end_of_RB5_ISR 609A                                  __end_of_RB6_ISR 6080  
                                __end_of_RB7_ISR 6066                                     ___fltol@exp1 019C  
                                           l1021 38DA                                             l1102 51E4  
                                           l1111 5218                                             l1051 5CCC  
                                           l1107 520A                                             l1027 395C  
                                           ?_abs 0016                                             l1061 5F54  
                                           l1125 5074                                             l1054 5CDC  
                                           l1062 5F56                                             l1142 4E14  
                                           l1047 5CBC                                             l1039 3A12  
                                           l1072 5CA4                                             l1128 5AC4  
                                           l1240 5400                                             l1224 52B2  
                                           l1049 5CBE                                             l1065 5C84  
                                           l1081 56CC                                             l1057 5F44  
                                           l1305 4C26                                             l1145 6014  
                                           l1226 52C0                                             l1067 5C86  
                                           l1075 56BA                                             l1059 5F46  
                                           l1235 53AA                                             l1227 52CA  
                                           l1139 6102                                             l1084 56F2  
                                           l1148 58E4                                             l1069 5C94  
                                           l1237 53B4                                             l1229 5314  
                                           l1094 51B6                                             l1238 53BA  
                                           l1079 56BE                                             l2143 3EE4  
                                           l1263 3DC6                                             l2400 25A2  
                                           l2401 2590                                             l2090 4B7A  
                                           l1098 51B8                                             l1274 541C  
                                           l1611 5B80                                             l1276 5426  
                                           l1268 5DE2                                             l1284 5FDA  
                                           l1604 5B42                                             l2501 3490  
                                           l2077 488A                                             l1277 542C  
                                           l1197 5550                                             l2430 30CA  
                                           l1294 5F9A                                             l1279 5472  
                                           l2504 35EC                                             l1632 4E30  
                                           l1800 1F18                                             l2441 3188  
                                           l2433 308E                                             l1289 5FBA  
                                           l1801 1FCC                                             l2442 3176  
                                           l2530 5D7E                                             l1634 4EB2  
                                           l1802 207E                                             l2515 3584  
                                           l2523 5E12                                             l1803 21C8  
                                           l2428 326A                                             l2460 274E  
                                           l2508 3528                                             l2604 6120  
                                           l1812 47A6                                             l2374 23B8  
                                           l2470 29AA                                             l2391 24D2  
                                           l2383 2688                                             l2375 23A6  
                                           l2439 3110                                             l1591 5276  
                                           l1567 48A6                                             l2376 236C  
                                           l2464 2AB2                                             l1760 57CE  
                                           l1569 494C                                             l1833 444A  
                                           l1818 47C6                                             l1762 5802  
                                           l2467 2944                                             l1827 442A  
                                           l2477 2A74                                             l2469 29BC  
                                           l2581 5DB2                                             l1597 5296  
                                           l1781 6034                                             l2574 5B04  
                                           l1783 6042                                             l2568 3438  
                                           l1880 4D74                                             l1784 604A  
                                           l2593 4CD0                                             l1873 4D64  
                                           l1857 5682                                             l2578 5D9A  
                                           l1858 5692                                             l1796 1CFC  
                                           l1798 1DB0                                             l1799 1E64  
                                           _ADC_ 0160                                             STR_1 1020  
                                           STR_2 102E                                             STR_3 1011  
                                           STR_4 1036                                             _LATA 0F89  
                                           _LATB 0F8A                                             _LATC 0F8B  
                                           _LATD 0F8C                                             _LATE 0F8D  
           interrupt_intx_disable@INTERRUPT_INTX 0010                                             _TMR2 0FCC  
                                ?_into_interrupt 0001                    ADC_ISconversion_done@ADC_conf 0010  
                  ??_lcd_4bit_send_enable_signal 001A                                             _addd 0069  
                                           _tc74 006A                                             abs@a 0016  
                                           _dbuf 016B                                             _main 103A  
                               __end_of_CCP1_ISR 611C                                 __end_of_CCP2_ISR 6118  
                      ?_adc_channel_port_confige 0001                                             _prec 0082  
                        tc74_read_value@ret_data 001F                                             fsr0h 0FEA  
                                           fsr1h 0FE2                                             indf0 0FEF  
                                           fsr2h 0FDA                                             fsr0l 0FE9  
                                           indf1 0FE7                                             indf2 0FDF  
                                           fsr1l 0FE1                                             fsr2l 0FD9  
                                           btemp 0070                lcd_4bit_send_char_data_pos@column 0028  
                                           prodh 0FF4                                             prodl 0FF3  
                     interrupt_intx_pin_inti@ret 001F                                             start 000E  
                               __end_of_ADC_inti 4A0E                                  ___fldiv@new_exp 002F  
                __end_of_ADC_ISconversion_result 4ACC                        _interrupt_intx_sethandler 4B7C  
                     ??_INT0_setinterrupthandler 0012                       __end_of_ds1307_read_values 3C9C  
                                  _transfer_0x_d 5930                                     ___param_bank 0000  
       INT2_setinterrupthandler@interrupthandler 0010         INT1_setinterrupthandler@interrupthandler 0010  
       INT0_setinterrupthandler@interrupthandler 0010                            _lcd_4bit_send_command 5752  
                                          ??_abs 0018                            GPIO_pIN_INTIALIZE@ret 001C  
                                    ?_TIMER0_ISR 0001                                _return_data_array 018B  
                                    ?_TIMER1_ISR 0001                   lcd_4bit_send_string_pos@column 0028  
                                    ?_TIMER2_ISR 0001                                      ?_TIMER3_ISR 0001  
                          lcd_4bit_intialize@lcd 0020                            lcd_4bit_intialize@ret 0023  
                               __end_of_INT0_ISR 5ED4                                 __end_of_INT1_ISR 5EA4  
                               __end_of_INT2_ISR 5E74                  __end_of_interrupt_intx_pin_inti 5DE4  
                                          l11000 4576                                            l11010 4594  
                                          l11002 457C                                            l11004 4582  
                                          l10300 47DA                                            l11020 5A40  
                                          l11100 5432                                            l11006 4588  
                                          l11014 459A                                            l10310 4800  
                                          l10302 47E2                                            l11030 5900  
                                          l11022 5A5A                                            l11102 5470  
                                          l11110 3C9C                                            l11008 458E  
                                          l12000 27D2                                            l10320 4838  
                                          l10312 4808                                            l10304 47E6  
                                          l11032 5908                                            l11024 5A60  
                                          l11120 3CD8                                            l11112 3C9C  
                                          l11200 52B8                                            l10400 5586  
                                          l11040 5FFA                                            l12010 2814  
                                          l12002 27DE                                            l10330 4864  
                                          l10322 483E                                            l10314 481A  
                                          l10306 47F4                                            l11034 5922  
                                          l11026 5A7A                                            l11130 3D20  
                                          l11122 3CF4                                            l11114 3CAE  
                                          l11210 5312                                            l10250 3EEA  
                                          l10402 558E                                            l11050 58E2  
                                          l11042 60FE                                            l10410 5474  
                                          l10500 22BC                                            l12020 2876  
                                          l12012 2820                                            l12004 27EA  
                                          l10324 4854                                            l10316 4822  
                                          l10332 486A                                            l10308 47FC  
                                          l10340 4ACC                                            l11052 5F2E  
                                          l11028 58E6                                            l11140 3D64  
                                          l11132 3D3C                                            l11124 3CF6  
                                          l11116 3CB6                                            l10252 3EFC  
                                          l10404 55BA                                            l11036 4D76  
                                          l11044 589C                                            l11220 5234  
                                          l10420 5BFA                                            l10412 548C  
                                          l11300 4742                                            l12100 4F5C  
                                          l10510 22DA                                            l10502 22CA  
                                          l12030 290C                                            l12022 2882  
                                          l12014 2830                                            l12006 27F8  
                                          l10334 487A                                            l10326 485C  
                                          l10318 482A                                            l10350 4AF8  
                                          l10342 4AD0                                            l11054 5F2E  
                                          l11062 5390                                            l11142 3D80  
                                          l11126 3CFE                                            l11118 3CD2  
                                          l11150 3DC4                                            l10262 3FD4  
                                          l10254 3F1E                                            l11038 4D94  
                                          l11046 58A4                                            l11222 5236  
                                          l11230 527A                                            l10422 5BFA  
                                          l10414 54A6                                            l11310 4780  
                                          l11302 4744                                            l12110 4FDE  
                                          l12102 4F64                                            l10600 2516  
                                          l10520 22EE                                            l10512 22DE  
                                          l10504 22CE                                            l12040 2962  
                                          l12032 292A                                            l12024 289E  
                                          l12016 284A                                            l12008 2804  
                                          l10336 4882                                            l10328 485E  
                                          l10360 4B30                                            l10352 4B00  
                                          l10344 4ADE                                            l12200 5822  
                                          l11056 5F40                                            l11064 5390  
                                          l11136 3D42                                            l11128 3D1A  
                                          l11208 52D4                                            l10280 3A54  
                                          l10272 3A14                                            l10256 3F26  
                                          l10264 3FFE                                            l10248 3EE6  
                                          l11160 5DB4                                            l10432 5FBC  
                                          l10440 5F9C                                            l11048 58E0  
                                          l11232 5294                                            l11224 5250  
                                          l11240 5B40                                            l10424 5C10  
                                          l10416 54C2                                            l10408 5474  
                                          l11320 4352                                            l11312 4786  
                                          l11304 474A                                            l12104 4F7A  
                                          l12120 6048                                            l10610 2540  
                                          l10602 2524                                            l10530 2302  
                                          l10522 22F2                                            l10514 22E2  
                                          l10506 22D2                                            l12050 29CC  
                                          l12042 2966                                            l12034 2934  
                                          l12026 28C8                                            l12018 285A  
                                          l10370 4B6A                                            l10362 4B46  
                                          l10354 4B12                                            l10346 4AE6  
                                          l12202 583A                                            l11058 5F56  
                                          l12130 3B82                                            l11090 5414  
                                          l11066 53A2                                            l11138 3D5E  
                                          l10282 3AB6                                            l10274 3A18  
                                          l10258 3F80                                            l11162 5DC6  
                                          l10434 5FBC                                            l10442 5F9C  
                                          l10450 5F7C                                            l11170 4B7C  
                                          l11226 5256                                            l11218 521A  
                                          l11242 5B44                                            l11234 5B06  
                                          l10426 5C18                                            l11250 1CE6  
                                          l11330 43C6                                            l11322 436C  
                                          l11314 47A0                                            l11306 4764  
                                          l12210 5B92                                            l12106 4FA8  
                                          l12114 6034                                            l10620 2572  
                                          l10612 2550                                            l10604 2526  
                                          l10540 2354                                            l10532 2306  
                                          l10524 22F6                                            l10516 22E6  
                                          l10508 22D6                                            l10460 21E4  
                                          l10700 2FC4                                            l12060 2A2E  
                                          l12052 29D8                                            l12044 2974  
                                          l12036 2942                                            l12028 28FE  
                                          l10372 4B72                                            l10364 4B4E  
                                          l10356 4B1A                                            l10348 4AEA  
                                          l10380 4C48                                            l12204 584C  
                                          l12140 3BEC                                            l12132 3B8E  
                                          l12124 3B58                                            l11420 4960  
                                          l11092 541E                                            l11068 53AC  
                                          l11076 53C0                                            l11148 3D86  
                                          l10276 3A2A                                            l11164 5DCE  
                                          l10436 5FCE                                            l10444 5FAE  
                                          l10452 5F8E                                            l11180 4BCC  
                                          l11172 4B80                                            l11228 5270  
                                          l11244 5B5E                                            l11236 5B20  
                                          l10428 5C30                                            l11500 444C  
                                          l11260 1E6A                                            l11252 1D02  
                                          l11340 4404                                            l11332 43C8  
                                          l11324 436E                                            l11308 4766  
                                          l11316 47AA                                            l12212 5B9A  
                                          l12108 4FAC                                            l12220 5D22  
                                          l12116 6044                                            l10630 25CC  
                                          l10622 2588                                            l10606 2534  
                                          l10614 2552                                            l10550 2398  
                                          l10542 2364                                            l10526 22FA  
                                          l10518 22EA                                            l10534 230A  
                                          l10470 2218                                            l10462 21E6  
                                          l10710 2FF4                                            l10702 2FCC  
                                          l12070 2A96                                            l12062 2A42  
                                          l12054 29E6                                            l12046 29A2  
                                          l12038 2954                                            l10366 4B54  
                                          l10358 4B22                                            l10390 5D80  
                                          l10382 4C52                                            l12150 3C3C  
                                          l12142 3BEE                                            l12134 3B9A  
                                          l12126 3B64                                            l11430 49D8  
                                          l11422 496A                                            l11086 5402  
                                          l11078 53FE                                            l10286 3B12  
                                          l10278 3A4C                                            l11166 5DE0  
                                          l11158 5DB4                                            l10438 5FD2  
                                          l10446 5FB2                                            l10454 5F92  
                                          l11174 4B92                                            l11246 5B64  
                                          l11238 5B26                                            l11350 562A  
                                          l11502 4460                                            l11270 2022  
                                          l11262 1EBC                                            l11254 1D54  
                                          l11342 440A                                            l11326 4388  
                                          l11334 43CE                                            l11318 47C4  
                                          l12214 5BBA                                            l12230 59B4  
                                          l12222 5D3E                                            l12118 6048  
                                          l10640 2648                                            l10632 2606  
                                          l10608 253C                                            l10616 2560  
                                          l10552 239A                                            l10544 237A  
                                          l10536 230E                                            l10528 22FE  
                                          l10480 224A                                            l10464 21F6  
                                          l10472 2220                                            l10456 21CA  
                                          l10720 3032                                            l10712 2FF4  
                                          l10704 2FD0                                            l12072 2A98  
                                          l12064 2A5C                                            l12056 2A10  
                                          l10296 47C8                                            l10368 4B5A  
                                          l10392 5D8E                                            l10384 4C6E  
                                          l10376 4C28                                            l12160 3C8E  
                                          l12152 3C58                                            l12144 3BFA  
                                          l12136 3BB6                                            l12128 3B80  
                                          l11440 4A04                                            l11432 49DA  
                                          l11424 49C2                                            l11416 494E  
                                          l11088 5402                                            l10288 3B54  
                                          l10448 5F7C                                            l11176 4B9A  
                                          l11184 4BE6                                            l11248 5B7E  
                                          l11360 4CD2                                            l11352 563A  
                                          l11520 44C0                                            l11512 448C  
                                          l11504 4468                                            l11600 5BBE  
                                          l11272 2082                                            l11264 1F1E  
                                          l11256 1DB6                                            l11280 2186  
                                          l11344 4424                                            l11336 43E8  
                                          l11328 438A                                            l12080 461E  
                                          l12208 5B82                                            l12240 59F8  
                                          l12224 5974                                            l12400 1102  
                                          l12170 531A                                            l12162 5A84  
                                          l10650 2668                                            l10642 264C  
                                          l10626 25B2                                            l10634 2608  
                                          l10618 2564                                            l10570 2422  
                                          l10562 23EA                                            l10554 23A4  
                                          l10546 2386                                            l10538 2338  
                                          l10490 2280                                            l10482 2250  
                                          l10474 2230                                            l10466 2206  
                                          l10458 21D6                                            l10730 307E  
                                          l10722 3042                                            l12066 2A78  
                                          l12074 2A9E                                            l12058 2A14  
                                          l10810 3E40                                            l10802 3DF8  
                                          l12250 4244                                            l10298 47CC  
                                          l10386 4CA0                                            l10378 4C38  
                                          l12154 3C5A                                            l12146 3C06  
                                          l12138 3BD0                                            l11442 4A06  
                                          l11434 49DC                                            l11426 49D4  
                                          l11418 494E                                            l11194 5298  
                                          l10394 5552                                            l11178 4BB2  
                                          l11186 4C24                                            l11450 38BE  
                                          l11370 4D1A                                            l11362 4CE2  
                                          l11354 5648                                            l11530 4504  
                                          l11522 44CC                                            l11514 44A0  
                                          l11506 4488                                            l11602 5BCE  
                                          l11274 20D4                                            l11266 1F70  
                                          l11258 1E08                                            l11338 43EA  
                                          l11346 442E                                            l11290 470E  
                                          l11610 57B0                                            l12090 4678  
                                          l12082 4640                                            l12234 59B8  
                                          l12226 5984                                            l12218 5D16  
                                          l12410 1134                                            l12402 110C  
                                          l12180 537E                                            l12172 532C  
                                          l12164 5A90                                            l10652 2676  
                                          l10644 265A                                            l10636 2618  
                                          l10628 25BE                                            l10572 2426  
                                          l10564 23FA                                            l10556 23C6  
                                          l10580 2446                                            l10548 238A  
                                          l10492 2290                                            l10484 225E  
                                          l10476 2236                                            l10468 2216  
                                          l10740 30C8                                            l10732 308C  
                                          l10724 3052                                            l10716 3008  
                                          l10708 2FE4                                            l10660 2EDE  
                                          l12076 2AA2                                            l12068 2A88  
                                          l10820 3E72                                            l10812 3E4E  
                                          l10804 3E26                                            l12252 42AC  
                                          l12244 423C                                            l10900 32F0  
                                          l12156 3C66                                            l12148 3C22  
                                          l11436 49EC                                            l11428 49D6  
                                          l11444 4A0A                                            l11196 5298  
                                          l10396 5552                                            l11460 3920  
                                          l11452 38D2                                            l11380 4D5E  
                                          l11372 4D24                                            l11364 4CF8  
                                          l11356 5658                                            l11700 35EE  
                                          l11532 4510                                            l11524 44E6  
                                          l11516 44A2                                            l11540 4542  
                                          l11604 5BD6                                            l11268 1FD0  
                                          l11348 4448                                            l11292 4710  
                                          l11620 57DE                                            l11612 57B0  
                                          l12092 4688                                            l12084 464C  
                                          l12236 59C8                                            l12228 598C  
                                          l12500 13EC                                            l12420 11AC  
                                          l12412 114C                                            l12404 1116  
                                          l12182 538E                                            l12174 533C  
                                          l12166 5AA4                                            l10654 2678  
                                          l10646 2660                                            l10638 2628  
                                          l10582 246C                                            l10590 24C2  
                                          l10574 2434                                            l10566 2408  
                                          l10558 23D6                                            l10494 2292  
                                          l10486 2260                                            l10478 2248  
                                          l10750 310E                                            l10742 30DA  
                                          l10734 3098                                            l10726 305A  
                                          l10718 3022                                            l10670 2F1E  
                                          l10662 2EEC                                            l10830 3EA2  
                                          l10822 3E7E                                            l10806 3E2A  
                                          l12254 4322                                            l12246 423C  
                                          l12270 4192                                            l12262 4122  
                                          l10910 337A                                            l10902 3308  
                                          l11382 5AC6                                            l12158 3C72  
                                          l11438 49F8                                            l11198 52AA  
                                          l10398 5564                                            l11550 54FE  
                                          l11470 3972                                            l11462 393A  
                                          l11454 38DC                                            l11630 4E16  
                                          l11374 4D42                                            l11366 4D00  
                                          l11358 5662                                            l11710 362C  
                                          l11702 3600                                            l11534 451C  
                                          l11526 44EC                                            l11518 44B2  
                                          l11606 5BF6                                            l11278 2130  
                                          l11294 472A                                            l11622 57F8  
                                          l11614 57C4                                            l12094 46B0  
                                          l12086 465A                                            l12238 59D0  
                                          l12190 596E                                            l12510 1434  
                                          l12502 13F6                                            l12430 1216  
                                          l12422 11C0                                            l12414 1164  
                                          l12406 1120                                            l12176 5340  
                                          l12168 5316                                            l10648 2662  
                                          l10592 24E8                                            l10584 24A0  
                                          l10576 2436                                            l10568 2416  
                                          l10488 2270                                            l10496 229A  
                                          l10760 316E                                            l10744 30F0  
                                          l10752 3120                                            l10736 30B6  
                                          l10728 306A                                            l10680 2F44  
                                          l10672 2F20                                            l10664 2EEE  
                                          l10832 3EB2                                            l10808 3E3A  
                                          l10840 343C                                            l12256 4338  
                                          l12248 4244                                            l12272 4208  
                                          l12264 4122                                            l10920 33D2  
                                          l10912 338C                                            l10904 3312  
                                          l11384 5ACE                                            l11552 5528  
                                          l11544 54E4                                            l11480 39BE  
                                          l11464 3940                                            l11472 397E  
                                          l11456 38F6                                            l11448 38BE  
                                          l11640 4E94                                            l11632 4E16  
                                          l11376 4D52                                            l11368 4D0C  
                                          l11720 3690                                            l11704 3608  
                                          l11536 4528                                            l11528 44F8  
                                          l11296 472C                                            l11288 46F4  
                                          l11624 57FA                                            l11616 57D0  
                                          l12096 46C2                                            l12088 4668  
                                          l11800 4F48                                            l12280 59FC  
                                          l12184 5932                                            l12600 16B8  
                                          l12520 147E                                            l12512 1444  
                                          l12504 1406                                            l12432 121C  
                                          l12424 11D6                                            l12416 117C  
                                          l12408 112A                                            l12178 5360  
                                          l10594 24F8                                            l10586 24A2  
                                          l10578 2440                                            l10498 22AA  
                                          l10770 31DC                                            l10754 312E  
                                          l10746 30F6                                            l10738 30B8  
                                          l10690 2F84                                            l10682 2F52  
                                          l10666 2EFE                                            l10674 2F28  
                                          l10658 2ED2                                            l10834 3EC2  
                                          l10818 3E66                                            l10842 344C  
                                          l12258 4350                                            l12274 421E  
                                          l12266 412A                                            l10922 33F0  
                                          l10914 339C                                            l10906 332A  
                                          l10930 3414                                            l11386 5ADE  
                                          l12194 5806                                            l11554 5534  
                                          l11546 54E4                                            l11490 39FC  
                                          l11482 39C0                                            l11474 3982  
                                          l11466 395A                                            l11458 3906  
                                          l11570 48C6                                            l11562 488C  
                                          l11650 4EAC                                            l11642 4E96  
                                          l11634 4E28                                            l11378 4D54  
                                          l11730 374A                                            l11714 364C  
                                          l11722 3726                                            l11706 360C  
                                          l11538 4534                                            l11298 4740  
                                          l11618 57DC                                            l11626 5800  
                                          l12098 4F4C                                            l12282 5A0C  
                                          l12186 595E                                            l12610 1706  
                                          l12602 16C8                                            l12530 14C2  
                                          l12522 1488                                            l12514 1454  
                                          l12506 1416                                            l12450 1288  
                                          l12442 1250                                            l12426 11EC  
                                          l12418 1194                                            l11900 5F58  
                                          l10940 56A6                                            l10588 24B2  
                                          l10780 3246                                            l10764 3198  
                                          l10772 31E0                                            l10756 3132  
                                          l10748 3100                                            l10692 2F86  
                                          l10684 2F54                                            l10676 2F38  
                                          l10668 2F0E                                            l10836 3ED4  
                                          l10828 3E92                                            l10860 3512  
                                          l10852 34CA                                            l10844 345A  
                                          l12276 4236                                            l12268 412A  
                                          l10916 33AC                                            l10924 33F2  
                                          l10908 335E                                            l11388 5AFC  
                                          l12196 580A                                            l11556 5540  
                                          l11548 54F6                                            l11492 3A08  
                                          l11484 39DA                                            l11476 399E  
                                          l11468 3962                                            l11580 4918  
                                          l11572 48D2                                            l11564 488C  
                                          l11644 4EA6                                            l11636 4E32  
                                          l11652 4EB0                                            l11660 3768  
                                          l11732 374C                                            l11724 3736  
                                          l11716 366A                                            l12284 5A14  
                                          l12188 5966                                            l12700 19A0  
                                          l12620 174A                                            l12612 1710  
                                          l12604 16E2                                            l12540 1516  
                                          l12532 14D2                                            l12524 1498  
                                          l12516 145E                                            l12508 1430  
                                          l12460 12CC                                            l12452 1292  
                                          l12444 1264                                            l12436 1230  
                                          l12428 11FE                                            l12380 109E  
                                          l12372 103A                                            l11910 5850  
                                          l11902 5F58                                            l10942 56B6  
                                          l10598 250C                                            l10782 324A  
                                          l10774 31FA                                            l10766 31A4  
                                          l10758 3140                                            l10686 2F64  
                                          l10694 2F8E                                            l10678 2F3E  
                                          l10870 3592                                            l10862 351E  
                                          l10854 34D2                                            l10846 34A0  
                                          l10918 33BC                                            l10926 3408  
                                          l12198 581A                                            l11558 554E  
                                          l11494 3A0A                                            l11486 39E0  
                                          l11478 39A4                                            l11590 4942  
                                          l11582 492C                                            l11574 48DE  
                                          l11566 489E                                            l11646 4EA8  
                                          l11638 4E92                                            l11662 3770  
                                          l11734 374E                                            l11726 3738  
                                          l11718 3688                                            l12286 5A3C  
                                          l12710 19E0                                            l12702 19AC  
                                          l12630 178E                                            l12622 175A  
                                          l12614 1720                                            l12606 16E6  
                                          l12550 1554                                            l12542 151A  
                                          l12534 14DC                                            l12526 14A8  
                                          l12518 146E                                            l12470 1310  
                                          l12462 12DC                                            l12454 12A2  
                                          l12446 1268                                            l12438 1248  
                                          l12390 10D0                                            l12382 10A8  
                                          l12374 103E                                            l11920 5894  
                                          l11912 5850                                            l11904 5F6A  
                                          l11752 5CA6                                            l10944 56DC  
                                          l10936 5694                                            l10784 3258  
                                          l10776 3210                                            l10768 31B2  
                                          l10696 2F9E                                            l10688 2F74  
                                          l10880 35DA                                            l10872 3594  
                                          l10864 355A                                            l10856 34DE  
                                          l10848 34B6                                            l10960 51C6  
                                          l10952 5190                                            l11488 39FA  
                                          l11496 3A10                                            l11592 4944  
                                          l11584 492E                                            l11576 48EA  
                                          l11568 48A8                                            l11648 4EAA  
                                          l11672 37B4                                            l11680 388E  
                                          l11664 3774                                            l11656 3756  
                                          l11728 373A                                            l11736 3752  
                                          l12712 19E8                                            l12704 19BC  
                                          l12720 1A14                                            l12640 17DC  
                                          l12632 179E                                            l12624 1764  
                                          l12616 1730                                            l12608 16F6  
                                          l12560 1598                                            l12552 1564  
                                          l12544 152A                                            l12536 14EC  
                                          l12528 14B2                                            l12480 135E  
                                          l12472 1320                                            l12464 12E6  
                                          l12456 12B2                                            l12448 1278  
                                          l12392 10DA                                            l12384 10B2  
                                          l12376 105E                                            l11922 5898  
                                          l11914 5862                                            l11930 4A20  
                                          l11906 5F74                                            l11754 5CA6  
                                          l11770 5CA4                                            l10946 56E8  
                                          l10938 5694                                            l10786 325E  
                                          l10778 322A                                            l10698 2FB4  
                                          l10882 35DC                                            l10874 3598  
                                          l10866 3566                                            l10858 3510  
                                          l11850 5DF6                                            l10890 3298  
                                          l10970 5218                                            l10962 51D0  
                                          l10954 5190                                            l11594 4946  
                                          l11586 4930                                            l11578 4908  
                                          l11690 38B4                                            l11682 389E  
                                          l11674 37D2                                            l11658 3756  
                                          l12730 1A6E                                            l12722 1A26  
                                          l12706 19D4                                            l12714 19F4  
                                          l12650 1842                                            l12642 17F4  
                                          l12634 17AE                                            l12626 1774  
                                          l12618 173A                                            l12570 15E2  
                                          l12562 15A8                                            l12554 156E  
                                          l12546 153A                                            l12538 14FC  
                                          l12490 13A2                                            l12482 136E  
                                          l12474 1330                                            l12466 12F6  
                                          l12458 12BC                                            l12394 10E4  
                                          l12386 10BC                                            l12378 107E  
                                          l11916 5872                                            l11940 4A92  
                                          l11932 4A30                                            l11756 5CB8  
                                          l11764 5C6E                                            l10948 56F2  
                                          l10788 3260                                            l10796 3DC8  
                                          l10876 35BC                                            l10868 3574  
                                          l11852 5DF8                                            l10892 32A6  
                                          l11860 5D64                                            l10964 51E0  
                                          l10956 51A2                                            l11588 4940  
                                          l11596 494A                                            l11692 38B6  
                                          l11684 38A0                                            l11676 37F0  
                                          l11668 3794                                            l10980 57AC  
                                          l11780 570C                                            l12740 1B52  
                                          l12732 1A80                                            l12724 1A38  
                                          l12716 1A0C                                            l12708 19DA  
                                          l12660 18A4                                            l12652 185C  
                                          l12644 1802                                            l12628 1784  
                                          l12636 17B4                                            l12580 162A  
                                          l12572 15FC                                            l12564 15B8  
                                          l12556 157E                                            l12548 1544  
                                          l12492 13B2                                            l12484 1378  
                                          l12476 134A                                            l12468 1306  
                                          l12396 10EE                                            l12388 10C6  
                                          l11918 587A                                            l11934 4A38  
                                          l11926 4A0E                                            l10990 4558  
                                          l11758 5CDC                                            l11766 5C6E  
                                          l11950 268A                                            l10798 3DE2  
                                          l10878 35CC                                            l11846 5DE4  
                                          l10894 32AA                                            l10886 326C  
                                          l11862 5D74                                            l11854 5D4C  
                                          l10966 51F6                                            l10958 51B2  
                                          l11870 4FF4                                            l11686 38A2  
                                          l11678 37F8                                            l11694 38BA  
                                          l10974 5752                                            l11782 574E  
                                          l13630 4F22                                            l11790 4EBE  
                                          l12750 1BB6                                            l12734 1A92  
                                          l12726 1A4A                                            l12742 1B6E  
                                          l12718 1A10                                            l12670 18E8  
                                          l12662 18B4                                            l12654 1878  
                                          l12646 181C                                            l12638 17C2  
                                          l12590 1674                                            l12582 163A  
                                          l12574 1600                                            l12566 15C2  
                                          l12558 158E                                            l12494 13C2  
                                          l12486 1388                                            l12478 134E  
                                          l12398 10F8                                            l11944 4AC4  
                                          l11936 4A52                                            l11928 4A0E  
                                          l10992 455E                                            l10984 4548  
                                          l11768 5C80                                            l11960 26C6  
                                          l11952 2696                                            l11848 5DEC  
                                          l10896 32B4                                            l10888 3290  
                                          l11856 5D54                                            l10968 5206  
                                          l11880 5050                                            l11872 5004  
                                          l13640 52F4                                            l11688 38B2  
                                          l10976 5762                                            l13632 2150  
                                          l11776 56F4                                            l11792 4ED2  
                                          l12760 1C2C                                            l12752 1BC8  
                                          l12744 1B80                                            l12736 1AA4  
                                          l12728 1A5C                                            l12680 1934  
                                          l12672 18F0                                            l12664 18C4  
                                          l12656 187C                                            l12648 1834  
                                          l12592 167E                                            l12584 164A  
                                          l12576 1610                                            l12568 15D2  
                                          l12496 13CC                                            l12488 1398  
                                          l11938 4A78                                            l11946 4AC8  
                                          l10994 4564                                            l10986 454C  
                                          l11890 5C4E                                            l11970 26F8  
                                          l11962 26D6                                            l11954 26A4  
                                          l10898 32D2                                            l11858 5D5C  
                                          l11882 5064                                            l11874 5008  
                                          l11866 4FE2                                            l13642 3DA6  
                                          l13634 4C06                                            l11698 35EE  
                                          l10978 576A                                            l11778 5704  
                                          l11794 4EE6                                            l11786 4EB4  
                                          l12754 1BDA                                            l12746 1B92  
                                          l12762 1C48                                            l12738 1B4E  
                                          l12690 1964                                            l12682 193A  
                                          l12666 18DC                                            l12674 18FC  
                                          l12658 188A                                            l12594 168E  
                                          l12586 1654                                            l12578 1620  
                                          l12498 13DC                                            l10996 456A  
                                          l10988 4552                                            l11892 5C60  
                                          l11884 5C34                                            l11980 2738  
                                          l11972 2706                                            l11964 26DC  
                                          l11956 26A6                                            l11876 5030  
                                          l11868 4FE2                                            l13644 53E0  
                                          l13636 3FE8                                            l11796 4EFA  
                                          l11788 4EB8                                            l12756 1BEC  
                                          l12748 1BA4                                            l12692 1974  
                                          l12684 1940                                            l12676 190C  
                                          l12668 18E2                                            l12596 169E  
                                          l12588 1664                                            l10998 4570  
                                          l11894 5C66                                            l11886 5C34  
                                          l11990 2782                                            l11982 273E  
                                          l11974 2708                                            l11966 26EC  
                                          l11958 26B6                                            l11878 503C  
                                          l13646 5452                                            l13638 3B3E  
                                          l11798 4F0E                                            l12758 1C28  
                                          l12694 198C                                            l12686 1948  
                                          l12678 191C                                            l12598 16A8  
                                          l13648 45AE                                            l11896 5C6A  
                                          l11888 5C46                                            l11992 278E  
                                          l11984 275E                                            l11976 2718  
                                          l11968 26F2                                            l12696 1992  
                                          l12688 1954                                            l11994 2798  
                                          l11986 276E                                            l11978 2728  
                                          l12698 1998                                            l11996 27AE  
                                          l11998 27BA                            ccp1_pwm_set_duty@duty 01A3  
                                  ___fltol@sign1 019B                                  __end_of___fladd 268A  
                                          ?_main 0001                                  __end_of___fldiv 326C  
                                __end_of___awdiv 488C                                            _EEADR 0FA9  
                                __end_of___awmod 4B7C                                  __end_of___flmul 2AB4  
                                __end_of___fltol 3EE6                      interrupt_intx_edge_inti@ret 0014  
                                __end_of___lldiv 4D76                                            u11000 4B30  
                                          u11001 4B2C                                            u11010 4B46  
                                          u11011 4B42                                            u11020 4B6A  
                                          u11100 5FCE                                            u11021 4B66  
                                          u11101 5FCA                                            u11030 4C38  
                                          u11110 5FAE                                            u11031 4C34  
                                          u11111 5FAA                                            u11200 22BC  
                                          u11040 4C48                                            u12000 33BC  
                                          u11120 5F8E                                            u11201 22B8  
                                          u11041 4C44                                            u12001 33B8  
                                          u11121 5F8A                                            u11210 22CA  
                                          u11130 21E4                                            u11050 4C6E  
                                          u12010 3404                                            u11211 22C6  
                                          u11131 21E0                                            u11051 4C6A  
                                          u12011 3400                                            u12020 56A6  
                                          u11300 2408                                            u11220 2338  
                                          u11140 21F6                                            u11060 4CA0  
                                          u12100 51F2                                            u12021 56A2  
                                          u11301 2404                                            u11221 2334  
                                          u11141 21F2                                            u11061 4C9C  
                                          u12101 51EE                                            u12030 56B6  
                                          u11310 2416                                            u11230 2350  
                                          u11150 2206                                            u11070 5D8E  
                                          u12110 5206                                            u12031 56B2  
                                          u11311 2412                                            u11231 234A  
                                          u11151 2202                                            u11071 5D8A  
                                          u12111 5202                      ??_MSSP_I2C_Master_Send_Stop 0012  
                                          u12040 56CC                                            u11400 2560  
                                          u11320 2434                                            u11240 2352  
                                          u11160 2248                                            u13000 5E12  
                                          u12120 5218                                            u12200 53A2  
                                          u11080 5564                                            u12041 56C8  
                                          u11401 255C                                            u11321 2430  
                                          u11161 2244                                            u13001 5E0E  
                                          u12121 5214                                            u12201 539E  
                                          u11081 5560                                            u12050 56DC  
                                          u11410 2572                                            u11330 246C  
                                          u11250 237A                                            u11170 225E  
                                          u13010 4FF4                                            u12210 5414  
                                          u11090 5586                                            u12130 5762  
                                          u12051 56D8                                            u11411 256E  
                                          u11331 2468                                            u11251 2376  
                                          u11171 225A                                            u13011 4FF0  
                                          u12211 5410                                            u11091 5582  
                                          u12131 575E                                            u13100 4A30  
                                          u11500 265A                                            u11420 2588  
                                          u11340 24B2                                            u11260 2398  
                                          u11180 2270                                            u12060 51A2  
                                          u13020 5004                                            u12140 5A5A  
                                          u12220 3CAE                                            u12300 4B92  
                                ___awdiv@divisor 0012                                            u13101 4A2C  
                                          u11501 2656                                            u11421 2584  
                                          u11341 24AE                                            u11261 2394  
                                          u11181 226C                                            u12061 519E  
                                          u13021 5000                                            u12141 5A56  
                                          u12221 3CAA                                            u12301 4B8E  
                                          u13110 4A52                                            u13030 5C46  
                                          u11510 2676                                            u11430 259E  
                                          u11350 24E8                                            u11270 23B8  
                                          u11190 2280                                            u12070 51B2  
                                          u12150 5A7A                                            u12230 3CD2  
                                          u12310 52AA                                            u13111 4A4E  
                                          u13031 5C42                                            u11511 2672  
                                          u11431 259A                                            u11351 24E4  
                                          u11271 23B4                                            u11191 227C  
                                          u12071 51AE                                            u12151 5A76  
                                          u12231 3CCE                                            u12311 52A6  
                                          u13120 4A92                                            u13040 5F6A  
                                          u11440 25B2                                            u11360 24F8  
                                          u11280 23C6                                            u11600 306A  
                                          u11520 2EEC                                            u13200 275E  
                                          u12080 51C6                                            u12160 5900  
                                          u12240 3CF4                                            u12320 5234  
                                          u12400 470E                                            u14000 1564  
                                          u13121 4A8E                                            u13041 5F66  
                                          u11441 25AE                                            u11361 24F4  
                                          u11281 23C2                                            u11601 3066  
                                          u11521 2EE8                                            u13201 275A  
                                          u12081 51C2                                            u12161 58FC  
                                          u12241 3CF0                                            u12321 5230  
                                          u12401 470A                                            u14001 1560  
                          ??_Interrupt_Intx_Inti 0022                                            u13050 5862  
                                          u11450 25CC                                            u11370 2524  
                                          u11290 23D6                                            u11610 308C  
                                          u11530 2EFE                                            u13210 276E  
                                          u12090 51E0                                            u12170 5922  
                                          u12250 3D1A                                            u10810 3EFC  
                                          u12330 5250                                            u12410 472A  
                                          u14010 157E                                            u13051 585E  
                                          u11451 25C8                                            u11371 2520  
                                          u11291 23D2                                            u11611 3088  
                                          u11531 2EFA                                            u13211 276A  
                                          u12091 51DC                                            u12171 591E  
                                          u12251 3D16                                            u10811 3EF8  
                                          u12331 524C                                            u12411 4726  
                                          u14011 157A                                            u13060 5872  
                                          u11460 2606                                            u11380 2534  
                                          u11700 3198                                            u11620 30B6  
                                          u11540 2F0E                                            u13300 2A2E  
                                          u13220 28E8                                            u13140 26A4  
                                          u12180 5F40                                            u12260 3D3C  
                                          u10900 3B2C                                            u10820 3F1E  
                                          u12340 5270                                            u12500 4424  
                                          u12420 4764                                            u14100 163A  
                                          u14020 158E                                            u13061 586E  
                                          u11461 2602                                            u11381 2530  
                                          u11701 3194                                            u11621 30B2  
                                          u11541 2F0A                                            u13301 2A2A  
                                          u13141 26A0                                            u12181 5F3C  
                                          u12261 3D38                                            u10821 3F1A  
                                          u12341 526C                                            u12501 4420  
                                          u12421 4760                                            u14101 1636  
                                          u14021 158A                                            u13070 5890  
                                          u11470 2618                                            u11390 2550  
                                          u11710 31B2                                            u11630 30DA  
                                          u11550 2F52                                            u13310 2A5C  
                                          u13230 2942                                            u13150 26B6  
                                          u10910 47DA                                            u12190 5F54  
                                          u12270 3D5E                                            u12350 5294  
                                          u12510 4448                                            u12430 4780  
                                          u14110 164A                                            u14030 15A8  
                                          u13071 588A                                            u13135 4AAA  
                                          u11471 2614                                            u11391 254C  
                                          u11711 31AE                                            u11631 30D6  
                                          u11551 2F4E                                            u13311 2A58  
                                          u13231 293E                                            u13151 26B2  
                                          u10911 47D6                                            u12191 5F50  
                                          u12271 3D5A                                            u12351 5290  
                                          u12511 4444                                            u12431 477C  
                                          u14111 1646                                            u14031 15A4  
                                          u13080 5892                                            u13400 537E  
                                          u11480 2628                                            u11720 31FA  
                                          u11640 30F0                                            u11560 2F64  
                                          u13320 2A96                                            u13240 2962  
                                          u13160 26C6                                            u11800 3EB2  
                                          u10920 47F4                                            u12280 3D80  
                                          u12360 5B20                                            u12520 5648  
                                          u12440 47A0                                            u14200 1706  
                                          u14120 1664                                            u14040 15B8  
                                          u13401 537A                                            u11481 2624  
                                          u11721 31F6                                            u11641 30EC  
                                          u11561 2F60                                            u13321 2A92  
                                          u13241 295E                                            u13225 28DE  
                                          u13161 26C2                                            u11801 3EAE  
                                          u10921 47F0                                            u12281 3D7C  
                                          u12361 5B1C                                            u12521 5644  
                                          u12441 479C                                            u14201 1702  
                                          u14121 1660                                            u14041 15B4  
                                          u13090 4A20                                            u11490 2648  
                                          u11730 322A                                            u11650 310E  
                                          u11570 2F74                                            u13250 2974  
                                          u13170 2706                                            u11810 3EC2  
                                          u10930 481A                                            u13410 581A  
                                          u10850 3A2A                                            u10834 3F46  
                                          u12290 5DC6                                            u12370 5B40  
                                          u12530 5682                                            u12450 47C4  
                                          u13330 4F5C                                            u14210 1720  
                                          u14130 1674                                            u14050 15D2  
                                          u13091 4A1C                                            u11491 2644  
                                          u11731 3226                                            u11651 310A  
                                          u11571 2F70                                            u13251 2970  
                                          u13171 2702                                            u11811 3EBE  
                                          u10931 4816                                            u13411 5816  
                                          u10851 3A26                                            u10835 3F42  
                                          u12291 5DC2                                            u12371 5B3C  
                                          u12531 567E                                            u12451 47C0  
                                          u13331 4F58                                            u14211 171C  
                                          u14131 1670                                            u14051 15CE  
                                          u11740 3258                                            u11660 312E  
                                          u11580 2FB4                                            u13260 29A2  
                                          u13180 2718                                            u11900 35CC  
                                          u11820 344C                                            u10940 4838  
                                          u12620 4960                                            u10860 3A4C  
                                          u10844 3FA0                                            u12700 39DA  
                                          u12380 5B5E                                            u12540 4CF8  
                                          u12460 436C                                            u13420 5B92  
                                          u13340 4FA0                                            u14300 18C4  
                                          u14220 1730                                            u14140 168E  
                                          u14060 15E2                                            u11741 3254  
                                          u11661 312A                                            u11581 2FB0  
                                          u13261 299E                                            u13181 2714  
                                          u11901 35C8                                            u11821 3448  
                                          u10941 4834                                            u12621 495C  
                                          u10861 3A48                                            u10845 3F9C  
                                          u12701 39D6                                            u12381 5B5A  
                                          u12541 4CF4                                            u12461 4368  
                                          u13421 5B8E                                            u14301 18C0  
                                          u14221 172C                                            u14141 168A  
                                          u14061 15DE                                            u11670 3140  
                                          u11590 2FF4                                            u13270 29B8  
                                          u13190 2728                                            u11750 3DE2  
                                          u11910 35DA                                            u11830 345A  
                                          u10950 4854                                            u12710 39FA  
                                          u12630 38D2                                            u12390 5B7E  
                                          u12550 4D1A                                            u12470 4388  
                                          u13350 4FCE                                            u13430 5984  
                                          u14310 190C                                            u14230 174A  
                                          u14150 169E                                            u14070 15F8  
                                          u11671 313C                                            u11591 2FF0  
                                          u13271 29B4                                            u13191 2724  
                                          u11751 3DDE                                            u11911 35D6  
                                          u11831 3456                                            u10951 4850  
                                          u12711 39F6                                            u12631 38CE  
                                          u12391 5B7A                                            u12551 4D16  
                                          u12471 4384                                            u13431 5980  
                                          u14311 1908                                            u14231 1746  
                                          u14151 169A                                            u14071 15F4  
                                          u11680 316E                                            u13280 29CC  
                                          u11760 3E1A                                            u11840 34B6  
                                          u10960 487A                                            u11920 3290  
                                          u12640 38F6                                            u12560 4D42  
                                          u12800 3790                                            u12720 4460  
                                          u12480 43E8                                            u13360 4FDE  
                                          u13440 59C8                                            u14400 1A6E  
                                          u14320 191C                                            u14240 175A  
                                          u14160 16B8                                            u14080 1610  
                                          u13600 11C0                                            u11681 316A  
                                          u13281 29C8                                            u11841 34B2  
                                          u10961 4876                                            u11921 328C  
                                          u12641 38F2                                            u12561 4D3E  
                                          u12801 378C                                            u12721 445C  
                                          u12481 43E4                                            u13361 4FDA  
                                          u13441 59C4                                            u14401 1A6A  
                                          u14321 1918                                            u14241 1756  
                                          u14161 16B4                                            u14081 160C  
                                          u13601 11BC                                            u11690 3184  
                                          u13290 29E6                                            u11770 3E4E  
                                          u11850 350C                                            u10970 4ADE  
                                          u11930 32D2                                            u12570 5AFC  
                                          u10890 3B2A                                            u10874 3A74  
                                          u12650 3920                                            u12810 37B0  
                                          u12730 44B2                                            u12490 4404  
                                          u13450 5A0C                                            u13370 6042  
                                          u14410 1A80                                            u14330 1964  
                                          u14250 1774                                            u14170 16C8  
                                          u14090 1620                                            u13610 11EC  
                                          u11691 3180                                            u13291 29E2  
                                          u11771 3E4A                                            u11851 3508  
                                          u10971 4ADA                                            u11931 32CE  
                                          u12571 5AF8                                            u10891 3B24  
                                          u10875 3A70                                            u12651 391C  
                                          u12811 37AC                                            u12731 44AE  
                                          u12491 4400                                            u13347 4F96  
                                          u13451 5A08                                            u13371 603E  
                                          u14411 1A7C                                            u14331 1960  
                                          u14251 1770                                            u14171 16C4  
                                          u14091 161C                                            u13611 11E8  
                                          u13380 532C                                            u12900 5CB8  
                                          u11780 3E62                                            u11860 3556  
                                          u10980 4AF8                                            u11940 32F0  
                                          u10884 3AD6                                            u12740 54F6  
                                          u12660 393A                                            u12820 37D2  
                                          u14500 1BEC                                            u14420 1A92  
                                          u14340 1974                                            u14260 1784  
                                          u14180 16DE                                            u13700 12F6  
                                          u13620 122C                                            u13381 5328  
                                          u12901 5CB4                                            u11781 3E5E  
                                          u11765 3E0E                                            u11861 3552  
                                          u10981 4AF4                                            u11941 32EC  
                                          u10885 3AD2                                            u12741 54F2  
                                          u12661 3936                                            u12821 37CE  
                                          u13357 4FC4                                            u14501 1BE8  
                                          u14421 1A8E                                            u14341 1970  
                                          u14261 1780                                            u14181 16DA  
                                          u13701 12F2                                            u13621 1228  
                                          u13390 533C                                            u12910 5CCC  
                                          u11790 3E8E                                            u11870 3574  
                                          u10990 4B12                                            u11950 3326  
                                          u12670 395A                                            u12750 489E  
                                          u12830 37F0                                            u14430 1AA4  
                                          u14350 19BC                                            u14270 179E  
                                          u14190 16F6                                            u13710 1306  
                                          u13630 1260                                            u13391 5338  
                                          u12911 5CC8                                            u11791 3E8A  
                                          u11871 3570                                            u10991 4B0E  
                                          u11951 3320                                            u12671 3956  
                                          u12751 489A                                            u12831 37EC  
                                          u14431 1AA0                                            u14351 19B8  
                                          u14271 179A                                            u14191 16F2  
                                          u13711 1302                                            u13631 125C  
                                          u12920 5CDC                                            u11880 3584  
                                          u11960 3328                                            u12680 399E  
                                          u12840 3600                                            u12760 5BCE  
                                          u14440 1B80                                            u14360 1A26  
                                          u14280 17AE                                            u13800 13C2  
                                          u13720 1320                                            u13640 1278  
                                          u12921 5CD8                                            u11881 3580  
                                          u12681 399A                                            u12841 35FC  
                                          u12761 5BCA                                            u14441 1B7C  
                                          u14361 1A22                                            u14281 17AA  
                                          u13801 13BE                                            u13721 131C  
                                          u13641 1274                                            u12930 5C80  
                                          u11890 3592                                            u11970 338C  
                                          u12690 39BE                                            u12850 3628  
                                          u12770 57C4                                            u14450 1B92  
                                          u14370 1A38                                            u14290 18B4  
                                          u13810 13DC                                            u13730 1330  
                                          u13650 1288                                            u12931 5C7C  
                                          u11891 358E                                            u11971 3388  
                                          u12691 39BA                                            u12851 3624  
                                          u12771 57C0                                            u14451 1B8E  
                                          u14371 1A34                                            u14291 18B0  
                                          u13811 13D8                                            u13731 132C  
                                          u13651 1284                                            u12940 5C94  
                                          u11980 339C                                            u12780 4E28  
                                          u12860 3648                                            u14460 1BA4  
                                          u14380 1A4A                                            u13900 1498  
                                          u13820 13EC                                            u13740 1346  
                                          u13660 12A2                                            u12941 5C90  
                                          u11981 3398                                            u12781 4E24  
                                          u12861 3644                                            u14461 1BA0  
                                          u14381 1A46                                            u13901 1494  
                                          u13821 13E8                                            u13741 1342  
                                          u13661 129E                                            u12950 5CA4  
                                          u11990 33AC                                            u12790 3768  
                                          u12870 366A                                            u14470 1BB6  
                                          u14390 1A5C                                            u13910 14A8  
                                          u13830 1406                                            u13750 135E  
                                          u13670 12B2                                            u12951 5CA0  
                                          u11991 33A8                                            u12791 3764  
                                          u12871 3666                                            u14471 1BB2  
                                          u14391 1A58                                            u13911 14A4  
                                          u13831 1402                                            u13751 135A  
                                          u13671 12AE                                            u12880 3688  
                                          u12960 5704                                            u14480 1BC8  
                                          u13920 14C2                                            u13840 1416  
                                          u13760 136E                                            u13680 12CC  
                                          u12881 3684                                            u12961 5700  
                                          u14481 1BC4                                            u13921 14BE  
                                          u13841 1412                                            u13761 136A  
                                          u13681 12C8                                            u14490 1BDA  
                                          u13930 14D2                                            u13850 142C  
                                          u13770 1388                                            u13690 12DC  
                                          u14491 1BD6                                            u13931 14CE  
                                          u13851 1428                                            u13771 1384  
                                          u13691 12D8                                            u13940 14EC  
                                          u13860 1444                                            u13780 1398  
                                          u13941 14E8                                            u13861 1440  
                                          u13781 1394                                            u13950 14FC  
                                          u13870 1454                                            u13790 13B2  
                                          u13951 14F8                                            u13871 1450  
                                          u13791 13AE                                            u13960 1512  
                                          u13880 146E                                            u13961 150E  
                                          u13881 146A                                            u13970 152A  
                                          u13890 147E                                            u15547 44B8  
                                          u13971 1526                                            u13891 147A  
                                          u13980 153A                                            u15557 44D2  
                                          u13981 1536                                            u13990 1554  
                                          u15567 44E8                                            u13991 1550  
                                          u15577 5C12                                            u15587 506A  
                                          i2l231 60F4                                            i2l224 60CA  
                                          i2l235 5F2C                                            i2l228 5E42  
                                          i2l738 611E                                            i2l930 411C  
                                          i2l838 6116                                            _INT_0 015A  
                                          i2l951 518E                                            _INT_1 0154  
                                          i2l786 611A                                  ___awdiv@counter 0014  
                                          _RCREG 0FAE                           i2_GPIO_pIN_WRITE_LOGIC 4002  
                            relay_turn_off@F3070 00C0                              morot_stop@motor_pin 0019  
                                   vfpfcnvrt@fmt 001B                                            _TMR0H 0FD7  
                                          _TMR1H 0FCF                                            _TMR0L 0FD6  
                                          _TMR1L 0FCE                                            _TMR3H 0FB3  
                                          _TMR3L 0FB2                                            _SPBRG 0FAF  
                                          _PORTA 0F80                                            _PORTB 0F81  
                                          _PORTC 0F82                                            _PORTD 0F83  
                                          _PORTE 0F84                                            _TRISA 0F92  
                                          _TRISB 0F93                                            _TRISC 0F94  
                                          _TRISD 0F95                                            _TRISE 0F96  
                               _usart_ASYNC_init 57B0                                            _TXREG 0FAD  
                      ?_INT2_setinterrupthandler 0010                                  _timer1_mode_cfg 521A  
                           _ADC_INTERRUPTHANDLER 00BA                        lcd_4bit_set_cursor@coulmn 0022  
                            ___lmul@multiplicand 0014                 __end_of_interrupt_intx_edge_inti 3DC8  
                                          _ccp1_ 014A                                            _ccp2_ 0140  
                                          _flag1 006D                                            _flag2 006C  
                                          _flag3 00E7                                            _flag4 00E6  
                                          _led_1 00EB                                            _led_2 00EA  
                                          _flags 00BC                                            _fputc 4C28  
              MSSP_I2C_Master_call_slave@i2c_obj 0014                                            _width 0080  
                                          _putch 6120                                            main@i 01AB  
                                          pclath 0FFA                                            pclatu 0FFB  
                                          tablat 0FF5                                            ttemp5 0071  
                                          ttemp6 0074                                            ttemp7 0078  
                                          status 0FD8                                            wtemp8 0071  
                                __end_of_sprintf 5D80             MSSP_I2C_Master_Read_Blocking@i2c_obj 0010  
              MSSP_I2C_Master_call_slave@address 0016                       __end_of_interrupt_usart_rx 5F2E  
                                 ?_transfer_0x_d 0001                                  __initialization 5076  
                                   RB4_ISR@value 0001                        _RB6_interrupthandler_high 00A0  
         MSSP_I2C_Master_Write_Blocking@i2c_data 0012                                     __end_of_main 1CE6  
                        ??_GPIO_pIN_TOGGLE_LOGIC 0002                             timer1_osc_cfg@Timer1 0010  
                                  _lat_regisrers 00D9                         _INT1_setinterrupthandler 5F9C  
                                   RB5_ISR@value 0001                                           ??_main 0060  
                                  __activetblptr 0003                          ??_configure_voltage_ref 0012  
                               led_turn_on@F3065 00C5                                        ??_RB4_ISR 0001  
                                      ??_RB5_ISR 0001                                        ??_RB6_ISR 0001  
                                      ??_RB7_ISR 0001                           Interrupt_Intx_Inti@ret 0022  
                                   RB6_ISR@value 0001                            usart_ASYNC_init@usart 01A9  
                         ccp1_pwm_set_duty@duty_ 01A4                                           ?_fputc 0010  
                                         _ADRESH 0FC4                                           _EEADRH 0FAA  
                                         _ADRESL 0FC3                                           _EEDATA 0FA8  
                                         _CCPR1L 0FBE                                           _CCPR2L 0FBB  
                                         _EECON2 0FA7                                 ___awdiv@dividend 0010  
                                         ?_putch 0001                     ??_MSSP_I2C_Master_Send_Start 0012  
                                         i2l1132 610E                                           i2l1310 5ED2  
                                         i2l1320 5E72                                           i2l1136 6112  
                                         i2l1315 5EA2                                           i2l1331 60B2  
                                         i2l1342 6098                                           i2l1430 2AEE  
                                         i2l1440 2BFA                                           i2l1432 2B0E  
                                         i2l1353 607E                                           i2l1450 2D56  
                                         i2l1442 2C3E                                           i2l1434 2B2E  
                                         i2l1364 6064                                           i2l1460 2DF6  
                                         i2l1452 2D76                                           i2l1444 2C84  
                                         i2l1436 2B72                                           i2l1542 60E6  
                                         i2l1470 2E96                                           i2l1462 2E16  
                                         i2l1454 2D96                                           i2l1446 2CCA  
                                         i2l1438 2BB6                                           i2l1615 5D14  
                                         i2l1464 2E36                                           i2l1456 2DB6  
                                         i2l1448 2D10                                           i2l1473 2EB6  
                                         i2l1466 2E56                                           i2l1458 2DD6  
                                         i2l1468 2E76                                           i2l1655 60FC  
                                         i2l1719 60D8                                           i2l1770 6016  
                                         i2l1843 5F00                                           i2l1773 6030  
                                         i2l1838 610A                                           i2l7140 5104  
                                         i2l7142 5118                                           i2l7144 5138  
                                         i2l7152 6016                                           i2l7146 5140  
                                         i2l7154 6024                                           i2l7148 518C  
                                         i2l7156 602E                                           i2l7158 602E  
                                         i2l8600 610C                                           i2l8604 6110  
                                         i2l8700 60F6                                           i2l8640 6082  
                                         i2l8704 60CC                                           i2l8720 5EE8  
                                         i2l8712 6108                                           i2l8634 60B2  
                                         i2l8626 609C                                           i2l8642 6084  
                                         i2l8706 60CE                                           i2l8628 609E  
                                         i2l8708 60D4                                           i2l8582 611C  
                                         i2l8662 607E                                           i2l8654 6068  
                                         i2l8670 6050                                           i2l8718 5ED4  
                                         i2l8648 6098                                           i2l8656 606A  
                                         i2l8594 6114                                           i2l8682 60DA  
                                         i2l8588 6118                                           i2l8676 6064  
                                         i2l8668 604E                                           i2l8684 60DC  
                                         i2l7980 5F02                                           i2l8686 60E2  
                                         i2l7982 5F06                                           i2l7984 5F14  
                                         i2l7978 60E8                                           i2l7986 5F16  
                                         i2l7988 5F28                                    vfpfcnvrt@done 001E  
                                         _SPBRGH 0FB0                                     RB7_ISR@value 0001  
                       ??_interrupt_intx_disable 0012                        _MSSP_I2C_Master_Send_Stop 5C6E  
                                         _SSPADD 0FC8                                           _SSPBUF 0FC9  
               MSSP_I2C_Master_Read_Blocking@ack 0012                                 __end_of___xxtofl 35EE  
                                _tc74_read_value 5D16                       __end_of_usart_async_rx_int 444C  
                     __end_of_usart_async_tx_int 47C8                 __end_of_lcd_4bit_send_string_pos 4FE2  
                          __end_of_MSSP_I2C_Init 3A14     __end_of_I2C_Master_Mode_Clock_Configurations 4E16  
         ??_I2C_Master_Mode_Clock_Configurations 00FE            ?_I2C_Master_Mode_Clock_Configurations 019D  
           _I2C_Master_Mode_Clock_Configurations 4D76                                    ??_Timer1_init 0014  
                               _timer1_interrupt 5E14                                    ??_Timer2_init 0012  
                                         _Timer1 0166                                           _Timer2 0197  
                         ?_lcd_4bit_send_command 001D                                     vfprintf@cfmt 0028  
            interrupt_intx_enable@INTERRUPT_INTX 0010                  ADC_ISconversion_result@ADC_conf 0010  
                                  _usart_counter 0066                                           ___lmul 562A  
                                      ??___fladd 003F                                        ??___fldiv 0026  
                                      ??___awdiv 0014                                        ??___awmod 0014  
                                      ??___flmul 004F                                        ??___fltol 00FA  
                 GPIO_pIN_WRITE_LOGIC@config_pin 0010                 i2GPIO_pIN_WRITE_LOGIC@config_pin 0001  
                                      ??___lldiv 0024                            _interrupt_intx_enable 5298  
                                         _leds_1 006E                          __end_of_timer1_mode_cfg 5298  
                                         _memset 5DE4                                           clear_0 50DC  
                                         clear_1 50E8                                           clear_2 50F4  
                               ___awdiv@quotient 0016                                     ccp1_init@ret 002F  
                                ___awmod@divisor 0012                                           isa$std 0001  
                                 _Timer0_preload 0096                                  ___awmod@counter 0014  
                        _TIMER0_Interrupthandler 0098                                   _Timer1_preload 0092  
                                   ccp2_init@ret 002F      _I2C_Report_Receive_Overflow_InterruptHandle 00B0  
                                         fputc@c 0010                          interrupt_intx_clear@ret 0014  
                                 _Timer2_preload 00BE                                        ?_CCP1_ISR 0001  
                                   __pdataCOMRAM 006C                                        ?_CCP2_ISR 0001  
                                _morot_turn_left 59B8                                   _Timer3_preload 008C  
                                   __mediumconst 0000                                           tblptrh 0FF7  
                                         tblptrl 0FF6                                           tblptru 0FF8  
                                      ?_ADC_inti 0013                     interrupt_intx_sethandler@ret 0016  
                               transfer_0x_d@num 0018                                           putch@c 0001  
                               __end_of_vfprintf 5B06                            _ADC_handeler_funvtion 611C  
                                      ??_sprintf 002F              ds1307_read_values@return_data_array 001E  
                   ?_ADC_get_conversion_blocking 0018                     __end_of_select_result_format 5A84  
                                   ___xxtofl@arg 001A                                     ___xxtofl@exp 0019  
                                   ___xxtofl@val 0010                                 ??_int1_interrupt 0007  
                        _convert_uint8_to_string 5804                                       __accesstop 0080  
                        __end_of__initialization 50FA                                        ?_INT0_ISR 0001  
                                      ?_INT1_ISR 0001                                        ?_INT2_ISR 0001  
                         _intitialized_functions 461E                                  ??_transfer_0x_d 0018  
                         _ccp2_pwm_set_duty$5720 019F                                    ___rparam_used 0001  
                                     ___fltol@f1 00F6                 ??_MSSP_I2C_Master_Write_Blocking 0014  
                ?_MSSP_I2C_Master_Write_Blocking 0010                                 ??_lcd_send_4bits 001B  
                     convert_uint8_to_string@ret 003E                       convert_uint8_to_string@str 003C  
                  __end_of_ADC_ISconversion_done 589C                          _lcd_4bit_send_char_data 56F4  
                                 __pcstackCOMRAM 0001                           _MSSP_I2C_Mode_GPIO_CFG 60FE  
                                _motor_intialize 5BBE               MSSP_I2C_Master_Write_Blocking@_ack 0013  
                     _I2C_DefaultInterruptHandle 00B2                        ?_interrupt_intx_edge_inti 0010  
                                   __pidataBANK0 5FDC                                     __pidataBANK1 55BE  
                       _RB6_interrupthandler_low 009E            MSSP_I2C_Master_Write_Blocking@i2c_obj 0010  
                          fp__interrupt_usart_rx 0000                                    __end_of_fputc 4CD2  
                                  __end_of_putch 6122                         lcd_4bit_send_command@lcd 001D  
                            __end_of_Timer1_init 494E                         lcd_4bit_send_command@ret 001F  
                            __end_of_Timer2_init 4EB4                               morot_turn_left@ret 001B  
                 _USART_OVERRUN_Interrupthandler 0084                                       ??_CCP1_ISR 0001  
                                     ??_CCP2_ISR 0001                                 ??_into_interrupt 000A  
                                     ??_ADC_inti 0015     ADC_get_conversion_blocking@conversion_status 001B  
           __end_of_GPIO_pIN_DIRECTION_INTIALIZE 3B58                     _GPIO_pIN_DIRECTION_INTIALIZE 3A14  
                   ?_lcd_4bit_send_char_data_pos 0026                          __end_of_tc74_read_value 5D4C  
                                        ??_fputc 0013                     ??_MSSP_I2C_Master_call_slave 0019  
                      _USART_TX_Interrupthandler 008A                                          ??_putch 0010  
                                     __pbssBANK0 0080                                       __pbssBANK1 016B  
                            tc74_read_value@_ack 0020                         GPIO_pIN_TOGGLE_LOGIC@ret 0006  
                                     ??_INT0_ISR 000A                                       ??_INT1_ISR 000A  
                                     ??_INT2_ISR 000A                         motor_intialize@motor_pin 001D  
                 MSSP_I2C_Master_call_slave@_ack 0018                     __end_of_GPIO_pIN_WRITE_LOGIC 4002  
                 MSSP_I2C_Master_call_slave@data 0017                             relay_intialize@F3060 00C2  
                       __end_of_usart_ASYNC_init 5804                 __end_of_INT2_setinterrupthandler 5F9C  
                         ?_interrupt_intx_enable 0010                                          ?___lmul 0010  
                              led_turn_off@F3070 00C4                                     ??_TIMER0_ISR 0001  
                                   ??_TIMER1_ISR 000A                                     ??_TIMER2_ISR 0001  
                                   ??_TIMER3_ISR 0001                          __end_of_morot_turn_left 59FC  
                GPIO_pIN_TOGGLE_LOGIC@config_pin 0001                          ?i2_GPIO_pIN_WRITE_LOGIC 0001  
                                led_toggle@F3075 00C3                                          ?_memset 0010  
                                 ___lmul@product 0018                                 ?_timer1_mode_cfg 0010  
                              __end_of_ccp1_init 38BE                                __end_of_ccp2_init 3756  
       ADC_ISconversion_result@conversion_result 0012                __end_of_interrupt_intx_sethandler 4C28  
                             _ds1307_read_values 3B58                                          i2l11400 4042  
                                        i2l11402 409C                                          i2l11406 40F0  
                                        i2l11408 411A                                          i2l13300 2C5A  
                                        i2l12350 5E74                                          i2l13310 2CA0  
                                        i2l13302 2C68                                          i2l11392 4002  
                                        i2l12344 5EA4                                          i2l12352 5E76  
                                        i2l12360 5E5A                                          i2l13320 2CE6  
                                        i2l13312 2CAE                                          i2l13304 2C7A  
                                        i2l11394 4006                                          i2l12346 5EA6  
                                        i2l12354 5E8A                                          i2l12370 5CFC  
                                        i2l12362 5CDE                                          i2l13330 2D2C  
                                        i2l13322 2CF4                                          i2l13314 2CC0  
                                        i2l13306 2C7E                                          i2l13250 2AFC  
                                        i2l11396 4018                                          i2l11740 60B4  
                                        i2l12348 5EBA                                          i2l12356 5E44  
                                        i2l12364 5CE0                                          i2l13340 2D72  
                                        i2l13332 2D3A                                          i2l13324 2D06  
                                        i2l13316 2CC4                                          i2l13308 2C92  
                                        i2l13260 2B4A                                          i2l13252 2B0A  
                                        i2l13244 2ACE                                          i2l11398 403A  
                                        i2l11742 60C6                                          i2l12358 5E46  
                                        i2l11750 5E30                                          i2l12366 5CE6  
                                        i2l13350 2DC4                                          i2l13342 2D84  
                                        i2l13334 2D4C                                          i2l13326 2D0A  
                                        i2l13318 2CD8                                          i2l13270 2B8E  
                                        i2l13262 2B58                                          i2l13254 2B1C  
                                        i2l13246 2ADC                                          i2l11744 5E14  
                                        i2l12368 5CEA                                          i2l13360 2E12  
                                        i2l13352 2DD2                                          i2l13344 2D92  
                                        i2l13336 2D50                                          i2l13328 2D1E  
                                        i2l13280 2BD2                                          i2l13272 2B9C  
                                        i2l13264 2B68                                          i2l13256 2B2A  
                                        i2l13248 2AEA                                          i2l11746 5E1A  
                                        i2l13370 2E64                                          i2l13362 2E24  
                                        i2l13354 2DE4                                          i2l13346 2DA4  
                                        i2l13338 2D64                                          i2l13290 2C16  
                                        i2l13282 2BE0                                          i2l13274 2BAC  
                                        i2l13266 2B6C                                          i2l13258 2B3C  
                                        i2l11748 5E2C                                          i2l13380 2EB2  
                                        i2l13372 2E72                                          i2l13364 2E32  
                                        i2l13356 2DF2                                          i2l13348 2DB2  
                                        i2l13292 2C24                                          i2l13284 2BF0  
                                        i2l13276 2BB0                                          i2l13268 2B80  
                                        _RB4_ISR 609A                                          i2l13374 2E84  
                                        i2l13366 2E44                                          i2l13358 2E04  
                                        i2l13294 2C34                                          i2l13286 2BF4  
                                        i2l13278 2BC4                                          i2l13376 2E92  
                                        i2l13368 2E52                                          i2l13296 2C38  
                                        i2l13288 2C08                                          i2l13650 4104  
                                        i2l13378 2EA4                                          i2l13298 2C4C  
                                        _RB5_ISR 6080                                          _RB6_ISR 6066  
                                        _RB7_ISR 604C                                        ?___xxtofl 0010  
                      ?_lcd_4bit_send_string_pos 0026                                    ?_MSSP_I2C_ISR 0001  
                         ?_ADC_handeler_funvtion 0001               __end_of_MSSP_I2C_Master_Send_Start 5CDE  
                     _MSSP_I2C_Master_Send_Start 5CA6                        ??_convert_uint8_to_string 003D  
                       ?_interrupt_intx_pin_inti 001D                              ?_ds1307_read_values 001B  
                  ?_GPIO_pIN_DIRECTION_INTIALIZE 0010                                   _tris_regisrers 010A  
                             __end_of_TIMER0_ISR 60E8                               __end_of_TIMER1_ISR 5D16  
                             __end_of_TIMER2_ISR 60FE                               __end_of_TIMER3_ISR 60DA  
                        _TIMER1_Interrupthandler 0094     MSSP_I2C_Master_read_data_in_register@i2c_obj 0014  
                        __end_of_motor_intialize 5BFA                                        _ADC_VALUE 00D7  
                ??_I2C_Slave_Mode_Configurations 0012                        ??_lcd_4bit_send_char_data 001F  
                                        _i2c_ack 006B                                ??_MSSP_I2C_BC_ISR 0001  
                                        __Hparam 0000                       ??_INT1_setinterrupthandler 0012  
                                        __Lparam 0000                                      _Timer1_init 488C  
                                    _Timer2_init 4E16                                          ___fladd 21CA  
                           ??_ds1307_read_values 0020                                          ___fldiv 2ED2  
                                        ___awdiv 47C8                   __end_ofi2_GPIO_pIN_WRITE_LOGIC 411E  
                                        ___awmod 4ACC       adc_channel_port_confige@ADC_CHANNAL_SELECT 0012  
                                        ___flmul 268A                      __end_of_Interrupt_Intx_Inti 5552  
                                        ___fltol 3DC8                                          ___lldiv 4CD2  
                                      ?_vfprintf 0025                                     __psmallconst 1000  
                            fp__timer1_interrupt 0000                                          __pcinit 5076  
                           _select_result_format 5A40                                          __ramtop 1000  
                          ccp2_pwm_set_duty@duty 01A3                           _interrupt_intx_disable 5390  
                                        __ptext0 103A                                          __ptext1 6032  
                                        __ptext2 5930                                          __ptext3 5D16  
                                        __ptext4 5974                                          __ptext5 59B8  
                                        __ptext6 59FC                                          __ptext7 4F4C  
                                        __ptext8 5B82                                          __ptext9 4EB4  
                  __end_of_GPIO_pIN_TOGGLE_LOGIC 5190                                        _T0CONbits 0FD5  
                                        _led_ret 00C8               usart_ASYNC_read_byte_blocking@data 0001  
                             _interrupt_usart_rx 5F02                                        _T1CONbits 0FCD  
                                        _counter 00C9                                   ??_MSSP_I2C_ISR 0001  
                                      _T2CONbits 0FCA                                       ??___xxtofl 0014  
                                      _T3CONbits 0FB1                        ?_INT0_setinterrupthandler 0010  
                        usart_async_rx_int@usart 0010                                 ___awmod@dividend 0010  
                                        _relay_1 00E9                                          _relay_2 00E8  
                  __end_of_configure_voltage_ref 5930                          _ADC_ISconversion_result 4A0E  
                   __end_of_interrupt_intx_clear 5474                         __end_of_timer1_interrupt 5E44  
                                        _motor_1 00F4                                          _motor_2 00F2  
                          timer1_mode_cfg@Timer1 0010                       __end_of_ADC_select_channal 5C6E  
                            ?_interrupt_usart_rx 0001                 MSSP_I2C_Master_Send_Stop@i2c_obj 0010  
                                        _usart_1 011F                                          _sprintf 5D4C  
                               ?_tc74_read_value 001B            lcd_4bit_intialize@l_data_pins_counter 0022  
                       _adc_channel_port_confige 4546                                   __pintcode_body 2AB4  
         ADC_ISconversion_done@conversion_status 0012                                  _control_project 00C7  
                           end_of_initialization 50FA                                lcd_send_4bits@lcd 0019  
                              lcd_send_4bits@ret 001C                                          fputc@fp 0012  
                                        memset@c 0011                                          memset@n 0013  
                                        memset@p 0015                                          int_func 2AB4  
                     __end_of_lcd_4bit_intialize 4546                          ??_lcd_4bit_send_command 001F  
                                      i2u1500_40 2B58                                        i2u1500_41 2B54  
                                      i2u1260_44 4062                                        i2u1260_45 405E  
                                      i2u1501_40 2B68                                        i2u1501_41 2B64  
                                      i2u1261_44 40BC                                        i2u1261_45 40B8  
                                      i2u1510_40 2C08                                        i2u1502_40 2B80  
                                      i2u1510_41 2C04                                        i2u1502_41 2B7C  
                                      i2u1511_40 2C16                                        i2u1503_40 2B8E  
                                      i2u1511_41 2C12                                        i2u1503_41 2B8A  
                                      i2u1352_40 5EBA                                        i2u1520_40 2CAE  
                                      i2u1512_40 2C24                                        i2u1504_40 2B9C  
                                      i2u1352_41 5EB6                                        i2u1520_41 2CAA  
                                      i2u1512_41 2C20                                        i2u1504_41 2B98  
                                      i2u1521_40 2CC0                                        i2u1513_40 2C34  
                                      i2u1505_40 2BAC                                        i2u1521_41 2CBC  
                                      i2u1513_41 2C30                                        i2u1505_41 2BA8  
                                      i2u1258_40 4018                                        i2u1353_48 5EC0  
                                      i2u1354_40 5E8A                                        i2u1530_40 2D64  
                                      i2u1522_40 2CD8                                        i2u1514_40 2C4C  
                                      i2u1506_40 2BC4                                        i2u1258_41 4014  
                                      i2u1353_49 5ED2                                        i2u1354_41 5E86  
                                      i2u1530_41 2D60                                        i2u1522_41 2CD4  
                                      i2u1514_41 2C48                                        i2u1506_41 2BC0  
                                      i2u1259_40 403A                                        i2u1531_40 2D72  
                                      i2u1523_40 2CE6                                        i2u1515_40 2C5A  
                                      i2u1507_40 2BD2                                        i2u1259_41 4036  
                                      i2u1531_41 2D6E                                        i2u1523_41 2CE2  
                                      i2u1515_41 2C56                                        i2u1507_41 2BCE  
                               _morot_turn_right 5974                                        i2u1355_48 5E90  
                                      i2u1356_40 5E5A                                        i2u1540_40 2E04  
                                      i2u1532_40 2D84                                        i2u1524_40 2CF4  
                                      i2u1516_40 2C68                                        i2u1508_40 2BE0  
                                      i2u1355_49 5EA2                                        i2u1356_41 5E56  
                                      i2u1540_41 2E00                                        i2u1532_41 2D80  
                                      i2u1524_41 2CF0                                        i2u1516_41 2C64  
                                      i2u1508_41 2BDC                                        i2u1541_40 2E12  
                                      i2u1533_40 2D92                                        i2u1525_40 2D06  
                                      i2u1517_40 2C7A                                        i2u1509_40 2BF0  
                                      i2u1541_41 2E0E                                        i2u1533_41 2D8E  
                                      i2u1525_41 2D02                                        i2u1517_41 2C76  
                                      i2u1509_41 2BEC                                        i2u1357_48 5E60  
                                      i2u1358_40 5CFC                                        i2u1550_40 2EA4  
                                      i2u1542_40 2E24                                        i2u1534_40 2DA4  
                                      i2u1526_40 2D1E                                        i2u1518_40 2C92  
                                      i2u1357_49 5E72                                        i2u1358_41 5CF8  
                                      i2u1550_41 2EA0                                        i2u1542_41 2E20  
                                      i2u1534_41 2DA0                                        i2u1526_41 2D1A  
                                      i2u1518_41 2C8E                                        i2u1551_40 2EB2  
                                      i2u1543_40 2E32                                        i2u1535_40 2DB2  
                                      i2u1527_40 2D2C                                        i2u1519_40 2CA0  
                                      i2u1551_41 2EAE                                        i2u1543_41 2E2E  
                                      i2u1535_41 2DAE                                        i2u1527_41 2D28  
                                      i2u1519_41 2C9C                                        i2u1359_48 5D02  
                                      i2u1544_40 2E44                                        i2u1536_40 2DC4  
                                      i2u1528_40 2D3A                                        i2u1359_49 5D14  
                                      i2u1544_41 2E40                                        i2u1536_41 2DC0  
                                      i2u1528_41 2D36                         morot_turn_left@motor_pin 0019  
                                      i2u1289_40 5E2C                                        i2u1545_40 2E52  
                                      i2u1537_40 2DD2                                        i2u1529_40 2D4C  
                                      i2u1289_41 5E28                                        i2u1545_41 2E4E  
                                      i2u1537_41 2DCE                                        i2u1529_41 2D48  
                                      i2u1546_40 2E64                                        i2u1538_40 2DE4  
                                      i2u1546_41 2E60                                        i2u1538_41 2DE0  
                              __end_of_value_ret 1011                                        i2u1547_40 2E72  
                                      i2u1539_40 2DF2                                        i2u1547_41 2E6E  
                                      i2u1539_41 2DEE                                        i2u1548_40 2E84  
                                      i2u1492_40 2ADC                                        i2u1548_41 2E80  
                                      i2u1492_41 2AD8                                        i2u1549_40 2E92  
                                      i2u1493_40 2AEA                                        i2u1549_41 2E8E  
                                      i2u1493_41 2AE6                                        i2u1494_40 2AFC  
                                      i2u1494_41 2AF8                                        i2u1495_40 2B0A  
                                      i2u1495_41 2B06                                        i2u1496_40 2B1C  
                                      i2u1496_41 2B18                                        i2u1497_40 2B2A  
                                      i2u1497_41 2B26                                        i2u1498_40 2B3C  
                                      i2u1498_41 2B38                                        i2u1499_40 2B4A  
                                      i2u1499_41 2B46                                  ___lldiv@divisor 0020  
                                ___lldiv@counter 0028                        _RB4_interrupthandler_high 00A8  
                              __end_of_vfpfcnvrt 343A                                        _RCSTAbits 0FAB  
                       interrupt_intx_enable@ret 0014                  __end_of_convert_uint8_to_string 5850  
                           ??_interrupt_usart_rx 0002                                          postdec1 0FE5  
                      _RB7_interrupthandler_high 009C                                          postdec2 0FDD  
                        GPIO_pIN_WRITE_LOGIC@ret 0018                                          postinc0 0FEE  
                                        postinc1 0FE6                                          postinc2 0FDE  
                               vfpfcnvrt@convarg 0020      __end_of_MSSP_I2C_Master_Send_Repeated_Start 5F58  
          ??_MSSP_I2C_Master_Send_Repeated_Start 0012             ?_MSSP_I2C_Master_Send_Repeated_Start 0010  
            _MSSP_I2C_Master_Send_Repeated_Start 5F2E                                       _morot_stop 59FC  
                                     ??_vfprintf 0028                        tc74_read_value@i2c_data_1 001D  
                      tc74_read_value@i2c_data_2 001E                                  _matrix_keypad_1 0114  
                      GPIO_pIN_WRITE_LOGIC@logic 0012    __end_of_MSSP_I2C_Master_read_data_in_register 5076  
        ??_MSSP_I2C_Master_read_data_in_register 001A           ?_MSSP_I2C_Master_read_data_in_register 0014  
          _MSSP_I2C_Master_read_data_in_register 4FE2                                 ?_morot_turn_left 0019  
                          ?_select_result_format 0010                               _usart_async_rx_int 4352  
                             _usart_async_tx_int 46F4                         _INT2_setinterrupthandler 5F7C  
                __end_of_lcd_4bit_send_char_data 5752                                        _PORTBbits 0F81  
                         tc74_read_value@i2c_obj 001B                       __end_of_timer1_reg_bit_cfg 5B44  
                                    ___fladd@grs 0046                       lcd_4bit_send_char_data@lcd 001D  
                           _GPIO_pIN_WRITE_LOGIC 3EE6                       lcd_4bit_send_char_data@ret 001F  
                        usart_async_tx_int@usart 0010                                    ___xxtofl@sign 0018  
                            ?_usart_async_rx_int 0010                                        _TRISCbits 0F94  
                            ?_usart_async_tx_int 0010               __end_of_MSSP_I2C_Master_call_slave 5AC6  
                     _MSSP_I2C_Master_call_slave 5A84                                      ___fldiv@grs 0031  
                                    ___fldiv@rem 002A                          ?_intitialized_functions 0001  
                                  ?_USART_RX_ISR 0001                                    ?_USART_TX_ISR 0001  
                lcd_4bit_send_char_data_pos@data 0029                       __end_of_GPIO_pIN_INTIALIZE 55BE  
                                    ___flmul@grs 0055                                 ADC_inti@ADC_conf 0013  
                                    _CCP1CONbits 0FBD                                 ?_motor_intialize 001D  
                                    _CCP2CONbits 0FBA                                        _TXSTAbits 0FAC  
                                     _usart_data 00CA                          ?_MSSP_I2C_Mode_GPIO_CFG 0001  
                 ??_GPIO_pIN_DIRECTION_INTIALIZE 0012                     ccp2_pwm_set_duty@l_duty_temp 01A5  
                           ??_usart_async_rx_int 0012                             ??_usart_async_tx_int 0012  
             interrupt_intx_clear@INTERRUPT_INTX 0010                              _lcd_4bit_set_cursor 4EB4  
                             relay_turn_on@F3065 00C1            __end_of_I2C_Slave_Mode_Configurations 6016  
                  _I2C_Slave_Mode_Configurations 5FFA                                relay_toggle@F3075 00BF  
                    lcd_4bit_send_string_pos@lcd 0026                     __end_of_ADC_start_conversion 5F7C  
                    lcd_4bit_send_string_pos@ret 002B                      lcd_4bit_send_string_pos@row 0027  
                    lcd_4bit_send_string_pos@str 0029              usart_ASYNC_write_byte_blocking@data 0010  
                  convert_uint16_to_string@F3210 0191                        interrupt_intx_disable@ret 0014  
                                 __end_of___lmul 5694                                   _timer1_counter 0067  
                                    vfpfcnvrt@ap 001C                                      vfpfcnvrt@cp 001F  
                                    vfpfcnvrt@fp 001A                                      _BAUDCONbits 0FB8  
                                  __pidataCOMRAM 6104                                   _timer1_osc_cfg 5B44  
                        _TIMER2_Interrupthandler 0090                                   __end_of_memset 5E14  
                      ??_ADC_ISconversion_result 0013                          _baudrate_calculate$5721 01A5  
                          ?_GPIO_pIN_WRITE_LOGIC 0010                              start_initialization 5076  
                   ?_lcd_4bit_send_enable_signal 0019                             ?_lcd_4bit_set_cursor 0020  
                                    __end_of_abs 5DB4                       __end_of_baudrate_calculate 21CA  
                 __end_of_intitialized_functions 46F4                        ds1307_read_values@i2c_obj 001B  
                                 ??_USART_RX_ISR 0003                       ADC_ISconversion_result@ret 0016  
                                 ??_USART_TX_ISR 0001                   __end_of_MSSP_I2C_Mode_GPIO_CFG 6104  
         __end_of_usart_ASYNC_read_byte_blocking 6032                   _usart_ASYNC_read_byte_blocking 6016  
          interrupt_intx_pin_inti@INTERRUPT_INTX 001D                          ??_interrupt_intx_enable 0012  
         interrupt_intx_edge_inti@INTERRUPT_INTX 0010            __end_of_MSSP_I2C_Master_Read_Blocking 521A  
                  _MSSP_I2C_Master_Read_Blocking 5190                             __end_of_MSSP_I2C_ISR 6110  
                          __end_of_transfer_0x_d 5974                                ?_usart_ASYNC_init 01A9  
                                    vfprintf@fmt 0026                                        _ds13_data 00D1  
                           _interrupt_intx_clear 5402                                         ??___lmul 0018  
                          _ADC_ISconversion_done 5850                         _RB5_interrupthandler_low 00A2  
                             ??_usart_ASYNC_init 0060        MSSP_I2C_Master_read_data_in_register@_ack 0019  
                         ??_select_result_format 0012                                      ?_morot_stop 0019  
                         __end_of_timer1_osc_cfg 5B82                                      __pdataBANK0 00D9  
                                    __pdataBANK1 0100                              morot_turn_right@ret 001B  
                                       ??_memset 0015                                       memset@dest 0010  
                   lcd_4bit_send_command@command 001E           GPIO_pIN_DIRECTION_INTIALIZE@config_pin 0010  
                        ??_ADC_handeler_funvtion 0001                                        ___fladd@a 003B  
                                      ___fladd@b 0037                             MSSP_I2C_Init@i2c_obj 019F  
                                      ___fldiv@a 0022                                        ___fldiv@b 001E  
                                       ?_RB4_ISR 0001                                         ?_RB5_ISR 0001  
                                       ?_RB6_ISR 0001                                         ?_RB7_ISR 0001  
                                      ___flmul@a 004B                                        ___flmul@b 0047  
                                    __pbssCOMRAM 0060                            ??_lcd_4bit_set_cursor 0023  
                                      _ccp1_init 3756                                        _ccp2_init 35EE  
    _I2C_Report_Write_Collision_InterruptHandler 00B4                                    __pcstackBANK0 00F6  
                                  __pcstackBANK1 019B                     convert_uint8_to_string@value 003D  
                                _MSSP_I2C_BC_ISR 6110                      ?_MSSP_I2C_Master_Send_Start 0010  
                      _USART_RX_Interrupthandler 0088                                      _data_return 00BD  
                                      __pnvBANK0 00FF                         _interrupt_intx_edge_inti 3C9C  
                                  _MSSP_I2C_Init 38BE                                     ?_Timer1_init 0012  
  ADC_get_conversion_blocking@ADC_CHANNAL_SELECT 001A                                     ?_Timer2_init 0010  
                          ?_interrupt_intx_clear 0010                 __end_of_INT0_setinterrupthandler 5FDC  
                                      __pintcode 0008  MSSP_I2C_Master_read_data_in_register@i2c_data_1 0016  
MSSP_I2C_Master_read_data_in_register@i2c_data_2 0017                                         ?___fladd 0037  
                                       ?___fldiv 001E                                         ?___awdiv 0010  
                                      __ptext100 5EA4                                        __ptext101 60E8  
                                      __ptext102 60B4                                        __ptext103 4002  
                                      __ptext104 5104                                        __ptext105 6114  
                                      __ptext106 6118                                        __ptext107 611C  
                                      __ptext108 0000                                         ?___awmod 0010  
                                       ?___flmul 0047                                         ?___fltol 00F6  
                        ?_interrupt_intx_disable 0010                                fp__int1_interrupt 0000  
                                       ?___lldiv 001C                                  ?_timer1_osc_cfg 0010  
                 ?_I2C_Slave_Mode_Configurations 0010                           ??_GPIO_pIN_WRITE_LOGIC 0013  
                     ??_adc_channel_port_confige 0010                                      __smallconst 1000  
                       __end_of_morot_turn_right 59B8                                         _CCP1_ISR 6118  
                                       _CCP2_ISR 6114                                _interrupt_manager 0008  
                              Timer1_init@Timer1 0012                                       ?_ccp1_init 0029  
                     ?_interrupt_intx_sethandler 0012                                       ?_ccp2_init 0029  
                          _Int0_interrupthandler 00AE                     select_result_format@ADC_conf 0010  
                                       _ADC_inti 494E                               ?_interrupt_manager 0001  
                              ?_timer1_interrupt 0001              __end_of_ADC_get_conversion_blocking 5390  
                    _ADC_get_conversion_blocking 5316                                         ?_sprintf 0029  
                           _ADC_start_conversion 5F58                               ??_timer1_interrupt 000A  
                              _ccp1_pwm_set_duty 4238                              ??_interrupt_manager 000A  
                        _TIMER3_Interrupthandler 008E                                         _INT0_ISR 5EA4  
                                       _INT1_ISR 5E74                                         _INT2_ISR 5E44  
                        baudrate_calculate@usart 019D                                fp__into_interrupt 0000  
                                       _IPR2bits 0FA2                               ?_ccp1_pwm_set_duty 0001  
                                       _PIE1bits 0F9D                                         _PIE2bits 0FA0  
                  ??_ADC_get_conversion_blocking 001C                                   ?_MSSP_I2C_Init 019F  
       MSSP_I2C_Interrupt_Configurations@i2c_obj 0010                               _ADC_select_channal 5C34  
                  __end_of_lcd_4bit_send_command 57B0                       ??_INT2_setinterrupthandler 0012  
                                       _PIR1bits 0F9E                                         _PIR2bits 0FA1  
                         ?_ADC_ISconversion_done 0010                                         i2u840_40 607A  
                                       i2u680_40 6024                                         i2u840_41 6076  
                                       i2u680_41 6020                                         i2u841_40 6060  
                                       i2u841_41 605C                   __end_of_interrupt_intx_disable 5402  
                                       i2u844_40 5EE8                                         i2u844_41 5EE4  
                                       i2u677_40 5118                                         i2u677_41 5114  
                                       i2u678_40 5138                                         i2u838_40 60AE  
                                       i2u845_48 5EEE                                         i2u678_41 5134  
                                       i2u838_41 60AA                                         i2u845_49 5F00  
                                       i2u839_40 6094                                         i2u839_41 6090  
                                       i2u679_44 515E                                         i2u679_45 515A  
                                       i2u769_40 5F28                                         i2u769_41 5F24  
                                      _value_ret 1001                              ??_ccp1_pwm_set_duty 019D  
                 ?_MSSP_I2C_Master_Read_Blocking 0010                 _USART_FRAMERROR_Interrupthandler 0086  
                           __end_of_USART_RX_ISR 5F02             I2C_Slave_Mode_Configurations@i2c_obj 0010  
                            ?_ADC_select_channal 0013                             __end_of_USART_TX_ISR 610C  
                             _lcd_4bit_intialize 444C                                        _vfpfcnvrt 326C  
                         ds1307_read_values@_ack 001F                         _lcd_4bit_send_string_pos 4F4C  
                      __end_of_interrupt_manager 2ED2                                       _ADCON0bits 0FC2  
                                     _ADCON1bits 0FC1                                       _ADCON2bits 0FC0  
                GPIO_pIN_DIRECTION_INTIALIZE@ret 0018                          __end_of_MSSP_I2C_BC_ISR 6114  
                 lcd_4bit_send_char_data_pos@lcd 0026                   lcd_4bit_send_char_data_pos@ret 002A  
                 lcd_4bit_send_char_data_pos@row 0027                         ?_convert_uint8_to_string 003C  
                          _GPIO_pIN_TOGGLE_LOGIC 5104                                Timer2_init@Timer2 0010  
                            ?_lcd_4bit_intialize 0020                        ?_INT1_setinterrupthandler 0010  
            __end_of_lcd_4bit_send_char_data_pos 5BBE                      _lcd_4bit_send_char_data_pos 5B82  
                    ?_MSSP_I2C_Master_call_slave 0014                                      ADC_inti@ret 0016  
                     interrupt_usart_rx@ret_data 0002                                       vfpfcnvrt@c 0024  
                          _configure_voltage_ref 58E6                            ?_ADC_start_conversion 0010  
                 ADC_get_conversion_blocking@ret 001D                                ___lmul@multiplier 0010  
                                    _INTCON2bits 0FF1                                      _INTCON3bits 0FF0  
                       ?_lcd_4bit_send_char_data 001D                                        copy_data0 508A  
                                      copy_data1 50AA                                        copy_data2 50CA  
                      __end_of_ccp1_pwm_set_duty 4352                             ??_ADC_select_channal 0016  
                             _timer1_reg_bit_cfg 5B06                    ??_lcd_4bit_send_char_data_pos 002A  
                                     _EECON1bits 0FA6                                 MSSP_I2C_Init@ret 01A1  
                            usart_ASYNC_init@ret 00FE                             ??_lcd_4bit_intialize 0021  
                         ??_interrupt_intx_clear 0012                                         __Hrparam 0000  
                            ?_timer1_reg_bit_cfg 0010                                       vfprintf@ap 0027  
                                       __Lrparam 0000                                       vfprintf@fp 0025  
                      _RB5_interrupthandler_high 00A4                               _GPIO_pIN_INTIALIZE 5552  
                          ADC_select_channal@ret 0017                           lcd_4bit_set_cursor@lcd 0020  
                         lcd_4bit_set_cursor@ret 0025                                       ?_vfpfcnvrt 001A  
                         lcd_4bit_set_cursor@row 0021                         _INT0_setinterrupthandler 5FBC  
                       ADC_ISconversion_done@ret 0013                       ?_MSSP_I2C_Master_Send_Stop 0010  
                                       _tc74_ref 0068                        morot_turn_right@motor_pin 0019  
              MSSP_I2C_Master_Send_Start@i2c_obj 0010                              ?_GPIO_pIN_INTIALIZE 0019  
                             led_intialize@F3060 00C6                                       sprintf@fmt 002A  
                           ??_timer1_reg_bit_cfg 0012                                         ___xxtofl 343A  
                                    ??_ccp1_init 002B                                      ??_ccp2_init 002B  
                                   _MSSP_I2C_ISR 610C            MSSP_I2C_Master_Read_Blocking@i2c_data 0013  
 ADC_get_conversion_blocking@l_conversion_status 001C                                         _lcd_4bit 00EC  
              Interrupt_Intx_Inti@INTERRUPT_INTX 0020                           ccp2_pwm_set_duty@duty_ 01A4  
                                       __ptext10 56F4                                         __ptext11 461E  
                                       __ptext20 5BFA                                         __ptext12 57B0  
                                       __ptext21 35EE                                         __ptext13 46F4  
                                       __ptext30 38BE                                         __ptext22 3756  
                                       __ptext14 4352                                         __ptext31 60FE  
                                       __ptext23 562A                                         __ptext15 1CE6  
                                       __ptext40 5DB4                                         __ptext32 589C  
                                       __ptext24 4CD2                                         __ptext16 5BBE  
                                       __ptext41 5552                                         __ptext33 5FFA  
                                       __ptext25 4E16                                         __ptext17 444C  
                                       __ptext50 58E6                                         __ptext42 3EE6  
                                       __ptext34 4D76                                         __ptext26 488C  
                                       __ptext18 5752                                         __ptext51 3B58  
                                       __ptext43 3A14                                         __ptext35 54E4  
                                       __ptext27 5B06                                         __ptext19 5474  
                                       __ptext60 6120                                         __ptext52 4FE2  
                                       __ptext44 5298                                         __ptext36 4B7C  
                                       __ptext28 5B44                                         __ptext61 5D80  
                                       __ptext53 5F2E                                         __ptext45 3C9C  
                                       __ptext37 5F7C                                         __ptext29 521A  
                                       __ptext70 2ED2                                         __ptext62 4ACC  
                                       __ptext54 5190                                         __ptext46 5390  
                                       __ptext38 5F9C                                         __ptext71 21CA  
                                       __ptext63 47C8                                         __ptext55 5804  
                                       __ptext47 5402                                         __ptext39 5FBC  
                                       __ptext80 4A0E                                         __ptext72 5A84  
                                       __ptext64 5DE4                                         __ptext56 5D4C  
                                       __ptext48 494E                                         __ptext81 5850  
                                       __ptext73 5694                                         __ptext65 411E  
                                       __ptext57 5AC6                                         __ptext49 5A40  
                                       __ptext90 5E14                                         __ptext74 5C6E  
                                       __ptext66 4238                                         __ptext58 326C  
                                       __ptext91 60DA                                         __ptext83 6108  
                                       __ptext75 5CA6                                         __ptext67 343A  
                                       __ptext59 4C28                                         __ptext92 604C  
                                       __ptext84 5ED4                                         __ptext76 5316  
                                       __ptext68 3DC8                                         __ptext93 6066  
                                       __ptext85 5F02                                         __ptext77 5F58  
                                       __ptext69 268A                                         __ptext94 6080  
                                       __ptext86 6016                                         __ptext78 5C34  
                                       __ptext95 609A                                         __ptext87 60CC  
                                       __ptext79 4546                                         __ptext96 610C  
                                       __ptext88 60F6                                         __ptext97 6110  
                                       __ptext89 5CDE                                         __ptext98 5E44  
                                       __ptext99 5E74                        i2GPIO_pIN_WRITE_LOGIC@ret 0009  
    I2C_Master_Mode_Clock_Configurations@i2c_obj 019D          interrupt_intx_sethandler@INTERRUPT_INTX 0012  
                   ccp1_pwm_set_duty@l_duty_temp 01A5                            _CCP1_Interrupthandler 00B8  
                              ??_timer1_mode_cfg 0012                                _ccp2_pwm_set_duty 411E  
  MSSP_I2C_Master_read_data_in_register@ret_data 0018                                         _button_1 00E3  
                                       _button_2 011C                                  ??_MSSP_I2C_Init 0060  
                                 ccp1_init@ccp1_ 0029                             ??_GPIO_pIN_INTIALIZE 001B  
                       ??i2_GPIO_pIN_WRITE_LOGIC 0004                               ?_ccp2_pwm_set_duty 0001  
                        _interrupt_intx_pin_inti 5DB4                               _baudrate_calculate 1CE6  
                          _Int1_interrupthandler 00AC                    __end_of_interrupt_intx_enable 5316  
                                       _mssp_i2c 0131                                         isa$xinst 0000  
                   ADC_start_conversion@ADC_conf 0010                                   _int1_interrupt 60E8  
                                     _LED_ROOM_1 006F                                         int$flags 0070  
                                   ??_morot_stop 001A                                    morot_stop@ret 001B  
                            ??_ccp2_pwm_set_duty 019D                                         _vfprintf 5AC6  
                            ?_baudrate_calculate 019D                 ??_usart_ASYNC_read_byte_blocking 0002  
                ?_usart_ASYNC_read_byte_blocking 0001                                   _lcd_send_4bits 5474  
               __end_of_adc_channel_port_confige 461E                                   ccp2_init@ccp2_ 0029  
                         ?_GPIO_pIN_TOGGLE_LOGIC 0001                                 ?_MSSP_I2C_BC_ISR 0001  
              __end_of_MSSP_I2C_Master_Send_Stop 5CA6                    configure_voltage_ref@ADC_conf 0010  
                                     _INTCONbits 0FF2                    __end_of_ADC_handeler_funvtion 6120  
                         ?_configure_voltage_ref 0010                           ??_ADC_start_conversion 0012  
                     ADC_select_channal@ADC_conf 0013                       ??_interrupt_intx_edge_inti 0012  
                           ??_baudrate_calculate 019F                        __end_of_ccp2_pwm_set_duty 4238  
                                       intlevel2 0000                                        sprintf@ap 002F  
                              _ds13_data_decimal 0060                          ADC_start_conversion@ret 0012  
                             __end_of_morot_stop 5A40                   lcd_4bit_send_enable_signal@lcd 0019  
                 lcd_4bit_send_enable_signal@ret 001B                                 ___lldiv@dividend 001C  
                                 _into_interrupt 60B4                           _ccp1_pwm_set_duty$5719 019F  
                               ??_timer1_osc_cfg 0012                           __end_of_int1_interrupt 60F6  
                             transfer_0x_d@h_bit 001A                               transfer_0x_d@l_bit 0019  
                   GPIO_pIN_INTIALIZE@config_pin 0019                         _RB4_interrupthandler_low 00A6  
                       _RB7_interrupthandler_low 009A                           __end_of_lcd_send_4bits 54E4  
                    i2GPIO_pIN_WRITE_LOGIC@logic 0003                         ?_ADC_ISconversion_result 0010  
                             motor_intialize@ret 001F                                       _TIMER0_ISR 60DA  
                                     _TIMER1_ISR 5CDE                                       _TIMER2_ISR 60F6  
                                     _TIMER3_ISR 60CC                                ??_tc74_read_value 0021  
                                    ??_vfpfcnvrt 001D                      __end_of_lcd_4bit_set_cursor 4F4C  
      __end_of_MSSP_I2C_Interrupt_Configurations 58E6              ??_MSSP_I2C_Interrupt_Configurations 0012  
             ?_MSSP_I2C_Interrupt_Configurations 0010                _MSSP_I2C_Interrupt_Configurations 589C  
                                       sprintf@f 0030                                         sprintf@s 0029  
                    ds1307_read_values@address_1 001D                                 ___lldiv@quotient 0024  
                                 _port_regisrers 0100                         timer1_reg_bit_cfg@Timer1 0010  
                              ?_morot_turn_right 0019                                   Timer1_init@ret 0016  
                    ??_interrupt_intx_sethandler 0014           __end_of_MSSP_I2C_Master_Write_Blocking 56F4  
                 _MSSP_I2C_Master_Write_Blocking 5694              ADC_get_conversion_blocking@ADC_conf 0018  
                                    _SSPCON1bits 0FC6                                      _SSPCON2bits 0FC5  
                             ??_morot_turn_right 001A                                   Timer2_init@ret 0013  
                                  ___fladd@signs 0043                           __end_of_into_interrupt 60CC  
                                   _USART_RX_ISR 5ED4                                     _USART_TX_ISR 6108  
                              ??_morot_turn_left 001A                                     ___fladd@aexp 0044  
                      ??_interrupt_intx_pin_inti 001F                                     ___fladd@bexp 0045  
                    lcd_4bit_send_char_data@data 001E                          ??_ADC_ISconversion_done 0013  
                            _Interrupt_Intx_Inti 54E4                       ??_lcd_4bit_send_string_pos 002B  
                                ?_int1_interrupt 0001                      baudrate_calculate@baud_rate 01A1  
